export const when = (condition, result, ...alternatives) => {
    if (condition) return result()
    else {
        let alternative = alternatives.find(alternative => alternative.predicate === true)
        if (alternative) return alternative.result()
        else return null
    }
}

export const otherwiseWhen = (predicate, result) => {
    return {
        predicate,
        result
    }
}

export const otherwise = (result) => {
    return {
        predicate: true,
        result
    }
}

export let invoke = (func, ...args) => typeof func === 'function' && func(...args)

export let sleep = (time) => new Promise(resolve => setTimeout(resolve, time))