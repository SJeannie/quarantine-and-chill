{"version":3,"sources":["../../src/TextArea/index.web.js"],"names":["TextInput","React","forwardRef","ref","value","onChange","$ref","rest","key","cached","e","target","sizingProps","createHiddenNode","hiddenArea","document","createElement","style","visibility","overflow","position","top","right","height","styles","window","getComputedStyle","forEach","body","append","TextArea","onChangeText","props","element","createRef","setHiddenArea","useImperativeHandle","focus","current","_node","scrollHeight","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, } from 'react'\r\nimport { TextInput as NativeInput } from 'react-native'\r\n\r\nconst TextInput = React.forwardRef(({ value, onChange, $ref, ...rest }, ref) => {\r\n    let [cached] = useState({ value: value, key: 1 })\r\n    if (value !== cached.value) cached.key = cached.key + 1\r\n    return <NativeInput\r\n        ref={ref}\r\n        key={cached.key}\r\n        defaultValue={value}\r\n        onChange={e => {\r\n            cached.value = e.target.value\r\n            if (onChange) onChange(e)\r\n        }}\r\n        {...rest}\r\n    />\r\n})\r\n\r\nlet sizingProps = [\r\n    'borderBottomWidth',\r\n    'borderLeftWidth',\r\n    'borderRightWidth',\r\n    'borderTopWidth',\r\n    'boxSizing',\r\n    'fontFamily',\r\n    'fontSize',\r\n    'fontStyle',\r\n    'fontWeight',\r\n    'letterSpacing',\r\n    'lineHeight',\r\n    'paddingBottom',\r\n    'paddingLeft',\r\n    'paddingRight',\r\n    'paddingTop',\r\n    // non-standard\r\n    'tabSize',\r\n    'textIndent',\r\n    // non-standard\r\n    'textRendering',\r\n    'textTransform',\r\n    'width',\r\n]\r\n\r\nlet createHiddenNode = (ref) => {\r\n    let hiddenArea = document.createElement('textarea')\r\n\r\n    Object.assign(hiddenArea.style, {\r\n        'min-height': '0',\r\n        'max-height': 'none',\r\n        visibility: 'hidden',\r\n        overflow: 'hidden',\r\n        position: 'absolute',\r\n        'z-index': '-1000',\r\n        top: '0',\r\n        right: '0',\r\n        height: 'auto'\r\n    })\r\n\r\n    if (ref) {\r\n        let styles = window.getComputedStyle(ref)\r\n        sizingProps.forEach(key => {\r\n            hiddenArea.style[key] = styles[key]\r\n        })\r\n    }\r\n\r\n    document.body.append(hiddenArea)\r\n    return hiddenArea\r\n}\r\n\r\n\r\nexport const TextArea = React.forwardRef(({ value, onChange, onChangeText, ...props }, ref) => {\r\n\r\n    let element = React.createRef()\r\n    let [hiddenArea, setHiddenArea] = useState(null)\r\n\r\n    React.useImperativeHandle(ref, () => ({\r\n        focus: () => {\r\n            element.current.focus();\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setHiddenArea(createHiddenNode(element.current._node))\r\n    }, [])\r\n\r\n\r\n    if (hiddenArea) hiddenArea.value = value\r\n    let height = hiddenArea ? hiddenArea.scrollHeight : 'auto'\r\n    return (\r\n        <TextInput\r\n            ref={element}\r\n            style={{ width: '100%', height, overflow: 'hidden' }}\r\n            multiline\r\n            value={value}\r\n            onChangeText={onChange || onChangeText}\r\n            {...props}\r\n        />\r\n    )\r\n})"],"file":"index.web.js"}