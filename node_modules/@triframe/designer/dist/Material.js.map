{"version":3,"sources":["../src/Material.js"],"names":["Chip","children","props","flexDirection","Surface","elevation","padding","style","surfacePadding","areaStyles","renderChildren","map"],"mappings":"gjBAAA,oDACA,8BACA,yCACA,gC,2HAEA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,UAAGC,CAAAA,QAAH,MAAGA,QAAH,CAAgBC,KAAhB,gEACT,8BAAC,iBAAD,EAAM,KAAK,CAAE,CAAEC,aAAa,CAAE,KAAjB,CAAb,4EACI,6BAAC,WAAD,0BAAaD,KAAb,8EAAqBD,QAArB,CADJ,CADS,EAAb,C,kBAMA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,OAAmE,IAAhEH,CAAAA,QAAgE,OAAhEA,QAAgE,uBAAtDI,SAAsD,CAAtDA,SAAsD,0BAA1C,CAA0C,qCAAvCC,OAAuC,CAAvCA,OAAuC,wBAA7B,EAA6B,iCAAzBC,KAAyB,CAAzBA,KAAyB,sBAAlB,EAAkB,aAAXL,KAAW,4FAC9DM,CAAAA,cAD8D,CAC5BD,KAD4B,CACvED,OADuE,CAC3CG,UAD2C,uCAC5BF,KAD4B,cAG/E,MACI,8BAAC,YAAD,0BAAUL,KAAV,EAAiB,KAAK,CAAEO,UAAxB,8EACI,6BAAC,cAAD,EAAY,SAAS,CAAEJ,SAAvB,CAAkC,KAAK,CAAE,CAAEC,OAAO,CAAEE,cAAc,EAAIF,OAA7B,CAAzC,8EACKI,cAAc,CAACT,QAAD,CADnB,CADJ,CADJ,CAOH,CAVD,C,wBAYA,GAAIS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAT,QAAQ,QACzBA,CAAAA,QAAQ,EAAI,MAAOA,CAAAA,QAAQ,CAACU,GAAhB,EAAuB,UAAnC,CACMV,QAAQ,CAACU,GAAT,CAAaD,cAAb,CADN,CAGQ,MAAOT,CAAAA,QAAP,GAAoB,QAApB,CACM,6BAAC,IAAD,+EAAOA,QAAP,CADN,CAEMA,QANW,EAA7B","sourcesContent":["import React from 'react'\r\nimport { Card, Chip as RNPChip, Surface as RNPSurface, List } from './paper'\r\nimport { View } from 'react-native'\r\nimport { Area } from './Layout'\r\n\r\nconst Chip = ({ children, ...props}) => (\r\n    <View style={{ flexDirection: 'row' }}>\r\n        <RNPChip {...props}>{children}</RNPChip>\r\n    </View>\r\n)\r\n\r\nconst Surface = ({ children, elevation = 4, padding = 30, style= {}, ...props}) => {\r\n    const { padding: surfacePadding, ...areaStyles } = style\r\n\r\n    return (\r\n        <Area {...props} style={areaStyles} >\r\n            <RNPSurface elevation={elevation} style={{ padding: surfacePadding || padding }} >\r\n                {renderChildren(children)}\r\n            </RNPSurface>\r\n        </Area>\r\n        )\r\n}\r\n\r\nlet renderChildren = children => (\r\n    children && typeof children.map == 'function'\r\n        ? children.map(renderChildren)\r\n        : (\r\n            typeof children === 'string'\r\n                ? <Text>{children}</Text>\r\n                : children\r\n        )\r\n)\r\n\r\nexport { Card, Chip, List, Surface }"],"file":"Material.js"}