{"version":3,"sources":["../../../src/paper/styles/shadow.js"],"names":["SHADOW_COLOR","Colors","black","SHADOW_OPACITY","shadow","elevation","Animated","Value","inputRange","shadowColor","shadowOffset","width","height","interpolate","outputRange","shadowOpacity","shadowRadius","radius"],"mappings":"qKAAA,wDACA,yCACA,GAAMA,CAAAA,YAAY,CAAGC,MAAM,CAACC,KAA5B,CACA,GAAMC,CAAAA,cAAc,CAAG,IAAvB,CACe,QAASC,CAAAA,MAAT,EAA+B,IAAfC,CAAAA,SAAe,2DAAH,CAAG,CAC1C,GAAIA,SAAS,WAAYC,uBAASC,KAAlC,CAAyC,CACrC,GAAMC,CAAAA,UAAU,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,EAAhB,CAAnB,CACA,MAAO,CACHC,WAAW,CAAET,YADV,CAEHU,YAAY,CAAE,CACVC,KAAK,CAAE,GAAIL,uBAASC,KAAb,CAAmB,CAAnB,CADG,CAEVK,MAAM,CAAEP,SAAS,CAACQ,WAAV,CAAsB,CAC1BL,UAAU,CAAVA,UAD0B,CAE1BM,WAAW,CAAE,CAAC,CAAD,CAAI,GAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,CAAlB,CAAqB,EAArB,CAFa,CAAtB,CAFE,CAFX,CASHC,aAAa,CAAE,GAAIT,uBAASC,KAAb,CAAmBJ,cAAnB,CATZ,CAUHa,YAAY,CAAEX,SAAS,CAACQ,WAAV,CAAsB,CAChCL,UAAU,CAAVA,UADgC,CAEhCM,WAAW,CAAE,CAAC,CAAD,CAAI,IAAJ,CAAU,GAAV,CAAe,CAAf,CAAkB,CAAlB,CAAqB,EAArB,CAFmB,CAAtB,CAVX,CAAP,CAeH,CAjBD,IAkBK,CACD,GAAIT,SAAS,GAAK,CAAlB,CAAqB,CACjB,MAAO,EAAP,CACH,CACD,GAAIO,CAAAA,MAAJ,CAAYK,MAAZ,CACA,OAAQZ,SAAR,EACI,IAAK,EAAL,CACIO,MAAM,CAAG,GAAT,CACAK,MAAM,CAAG,IAAT,CACA,MACJ,IAAK,EAAL,CACIL,MAAM,CAAG,IAAT,CACAK,MAAM,CAAG,GAAT,CACA,MACJ,QACIL,MAAM,CAAGP,SAAS,CAAG,CAArB,CACAY,MAAM,CAAGZ,SAAT,CAXR,CAaA,MAAO,CACHI,WAAW,CAAET,YADV,CAEHU,YAAY,CAAE,CACVC,KAAK,CAAE,CADG,CAEVC,MAAM,CAANA,MAFU,CAFX,CAMHG,aAAa,CAAEZ,cANZ,CAOHa,YAAY,CAAEC,MAPX,CAAP,CASH,CACJ","sourcesContent":["import * as Colors from './colors';\r\nimport { Animated } from 'react-native';\r\nconst SHADOW_COLOR = Colors.black;\r\nconst SHADOW_OPACITY = 0.24;\r\nexport default function shadow(elevation = 0) {\r\n    if (elevation instanceof Animated.Value) {\r\n        const inputRange = [0, 1, 2, 3, 8, 24];\r\n        return {\r\n            shadowColor: SHADOW_COLOR,\r\n            shadowOffset: {\r\n                width: new Animated.Value(0),\r\n                height: elevation.interpolate({\r\n                    inputRange,\r\n                    outputRange: [0, 0.5, 0.75, 2, 7, 23],\r\n                }),\r\n            },\r\n            shadowOpacity: new Animated.Value(SHADOW_OPACITY),\r\n            shadowRadius: elevation.interpolate({\r\n                inputRange,\r\n                outputRange: [0, 0.75, 1.5, 3, 8, 24],\r\n            }),\r\n        };\r\n    }\r\n    else {\r\n        if (elevation === 0) {\r\n            return {};\r\n        }\r\n        let height, radius;\r\n        switch (elevation) {\r\n            case 1:\r\n                height = 0.5;\r\n                radius = 0.75;\r\n                break;\r\n            case 2:\r\n                height = 0.75;\r\n                radius = 1.5;\r\n                break;\r\n            default:\r\n                height = elevation - 1;\r\n                radius = elevation;\r\n        }\r\n        return {\r\n            shadowColor: SHADOW_COLOR,\r\n            shadowOffset: {\r\n                width: 0,\r\n                height,\r\n            },\r\n            shadowOpacity: SHADOW_OPACITY,\r\n            shadowRadius: radius,\r\n        };\r\n    }\r\n}\r\n"],"file":"shadow.js"}