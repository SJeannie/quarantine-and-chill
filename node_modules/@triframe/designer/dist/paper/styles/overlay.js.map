{"version":3,"sources":["../../../src/paper/styles/overlay.js"],"names":["overlay","elevation","surfaceColor","DarkTheme","colors","surface","Animated","Value","inputRange","interpolate","outputRange","map","calculateColor","overlayTransparency","elevationOverlayTransparency","mix","hex"],"mappings":"oKAAA,oDACA,yCACA,8DACe,QAASA,CAAAA,OAAT,EAAyE,IAAxDC,CAAAA,SAAwD,2DAA5C,CAA4C,IAAzCC,CAAAA,YAAyC,2DAA1BC,mBAAUC,MAAV,CAAiBC,OAAS,CACpF,GAAIJ,SAAS,WAAYK,uBAASC,KAAlC,CAAyC,CACrC,GAAMC,CAAAA,UAAU,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,EAAhB,CAAnB,CACA,MAAOP,CAAAA,SAAS,CAACQ,WAAV,CAAsB,CACzBD,UAAU,CAAVA,UADyB,CAEzBE,WAAW,CAAEF,UAAU,CAACG,GAAX,CAAe,SAAAV,SAAS,CAAI,CACrC,MAAOW,CAAAA,cAAc,CAACV,YAAD,CAAeD,SAAf,CAArB,CACH,CAFY,CAFY,CAAtB,CAAP,CAMH,CACD,MAAOW,CAAAA,cAAc,CAACV,YAAD,CAAeD,SAAf,CAArB,CACH,CACD,QAASW,CAAAA,cAAT,CAAwBV,YAAxB,CAAsCD,SAAtC,CAAiD,CAC7C,GAAIY,CAAAA,mBAAJ,CACA,GAAIZ,SAAS,EAAI,CAAb,EAAkBA,SAAS,EAAI,EAAnC,CAAuC,CACnCY,mBAAmB,CAAGC,4BAA4B,CAACb,SAAD,CAAlD,CACH,CAFD,IAGK,IAAIA,SAAS,CAAG,EAAhB,CAAoB,CACrBY,mBAAmB,CAAGC,4BAA4B,CAAC,EAAD,CAAlD,CACH,CAFI,IAGA,CACDD,mBAAmB,CAAGC,4BAA4B,CAAC,CAAD,CAAlD,CACH,CACD,MAAO,mBAAMZ,YAAN,EACFa,GADE,CACE,mBAAM,OAAN,CADF,CACkBF,mBAAmB,CAAG,IADxC,EAEFG,GAFE,EAAP,CAGH,CACD,GAAMF,CAAAA,4BAA4B,CAAG,CACjC,EAAG,CAD8B,CAEjC,EAAG,CAF8B,CAGjC,EAAG,CAH8B,CAIjC,EAAG,CAJ8B,CAKjC,EAAG,EAL8B,CAMjC,EAAG,EAN8B,CAOjC,EAAG,IAP8B,CAQjC,EAAG,EAR8B,CASjC,EAAG,IAT8B,CAUjC,GAAI,EAV6B,CAWjC,GAAI,IAX6B,CAYjC,GAAI,EAZ6B,CAajC,GAAI,KAb6B,CAcjC,GAAI,IAd6B,CAejC,GAAI,KAf6B,CAgBjC,GAAI,EAhB6B,CAiBjC,GAAI,KAjB6B,CAkBjC,GAAI,KAlB6B,CAmBjC,GAAI,KAnB6B,CAoBjC,GAAI,KApB6B,CAqBjC,GAAI,IArB6B,CAsBjC,GAAI,KAtB6B,CAuBjC,GAAI,KAvB6B,CAwBjC,GAAI,EAxB6B,CAArC","sourcesContent":["import color from 'color';\r\nimport { Animated } from 'react-native';\r\nimport DarkTheme from './DarkTheme';\r\nexport default function overlay(elevation = 1, surfaceColor = DarkTheme.colors.surface) {\r\n    if (elevation instanceof Animated.Value) {\r\n        const inputRange = [0, 1, 2, 3, 8, 24];\r\n        return elevation.interpolate({\r\n            inputRange,\r\n            outputRange: inputRange.map(elevation => {\r\n                return calculateColor(surfaceColor, elevation);\r\n            }),\r\n        });\r\n    }\r\n    return calculateColor(surfaceColor, elevation);\r\n}\r\nfunction calculateColor(surfaceColor, elevation) {\r\n    let overlayTransparency;\r\n    if (elevation >= 1 && elevation <= 24) {\r\n        overlayTransparency = elevationOverlayTransparency[elevation];\r\n    }\r\n    else if (elevation > 24) {\r\n        overlayTransparency = elevationOverlayTransparency[24];\r\n    }\r\n    else {\r\n        overlayTransparency = elevationOverlayTransparency[1];\r\n    }\r\n    return color(surfaceColor)\r\n        .mix(color('white'), overlayTransparency * 0.01)\r\n        .hex();\r\n}\r\nconst elevationOverlayTransparency = {\r\n    1: 5,\r\n    2: 7,\r\n    3: 8,\r\n    4: 9,\r\n    5: 10,\r\n    6: 11,\r\n    7: 11.5,\r\n    8: 12,\r\n    9: 12.5,\r\n    10: 13,\r\n    11: 13.5,\r\n    12: 14,\r\n    13: 14.25,\r\n    14: 14.5,\r\n    15: 14.75,\r\n    16: 15,\r\n    17: 15.12,\r\n    18: 15.24,\r\n    19: 15.36,\r\n    20: 15.48,\r\n    21: 15.6,\r\n    22: 15.72,\r\n    23: 15.84,\r\n    24: 16,\r\n};\r\n"],"file":"overlay.js"}