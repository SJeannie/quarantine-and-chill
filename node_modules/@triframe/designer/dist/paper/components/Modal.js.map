{"version":3,"sources":["../../../src/paper/components/Modal.js"],"names":["DEFAULT_DURATION","Modal","arguments","state","opacity","Animated","Value","props","visible","rendered","handleBack","dismissable","hideModal","showModal","BackHandler","removeEventListener","addEventListener","scale","theme","animation","timing","toValue","duration","easing","Easing","out","cubic","useNativeDriver","start","finished","onDismiss","setState","prevProps","children","contentContainerStyle","colors","StyleSheet","absoluteFill","undefined","styles","backdrop","backgroundColor","wrapper","content","nextProps","prevState","React","Component","defaultProps","create","flex","absoluteFillObject","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Animated, BackHandler, Easing, StyleSheet, TouchableWithoutFeedback, } from 'react-native';\r\nimport {SafeAreaView} from 'react-native';\r\nimport Surface from './Surface';\r\nimport { withTheme } from '../core/theming';\r\nconst DEFAULT_DURATION = 220;\r\n/**\r\n * The Modal component is a simple way to present content above an enclosing view.\r\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Modal, Portal, Text, Button, Provider } from '../';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     visible: false,\r\n *   };\r\n *\r\n *   _showModal = () => this.setState({ visible: true });\r\n *   _hideModal = () => this.setState({ visible: false });\r\n *\r\n *   render() {\r\n *     const { visible } = this.state;\r\n *     return (\r\n *       <Provider>\r\n *          <Portal>\r\n *            <Modal visible={visible} onDismiss={this._hideModal}>\r\n *              <Text>Example Modal</Text>\r\n *            </Modal>\r\n *            <Button\r\n *              style={{ marginTop: 30 }}\r\n *              onPress={this._showModal}\r\n *            >\r\n *              Show\r\n *            </Button>\r\n *          </Portal>\r\n *       </Provider>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nlet Modal = /** @class */ (() => {\r\n    class Modal extends React.Component {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.state = {\r\n                opacity: new Animated.Value(this.props.visible ? 1 : 0),\r\n                rendered: this.props.visible,\r\n            };\r\n            this.handleBack = () => {\r\n                if (this.props.dismissable) {\r\n                    this.hideModal();\r\n                }\r\n                return true;\r\n            };\r\n            this.showModal = () => {\r\n                BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\r\n                BackHandler.addEventListener('hardwareBackPress', this.handleBack);\r\n                const { opacity } = this.state;\r\n                const { scale } = this.props.theme.animation;\r\n                Animated.timing(opacity, {\r\n                    toValue: 1,\r\n                    duration: scale * DEFAULT_DURATION,\r\n                    easing: Easing.out(Easing.cubic),\r\n                    useNativeDriver: true,\r\n                }).start();\r\n            };\r\n            this.hideModal = () => {\r\n                BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\r\n                const { opacity } = this.state;\r\n                const { scale } = this.props.theme.animation;\r\n                Animated.timing(opacity, {\r\n                    toValue: 0,\r\n                    duration: scale * DEFAULT_DURATION,\r\n                    easing: Easing.out(Easing.cubic),\r\n                    useNativeDriver: true,\r\n                }).start(({ finished }) => {\r\n                    if (!finished) {\r\n                        return;\r\n                    }\r\n                    if (this.props.visible && this.props.onDismiss) {\r\n                        this.props.onDismiss();\r\n                    }\r\n                    if (this.props.visible) {\r\n                        this.showModal();\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            rendered: false,\r\n                        });\r\n                    }\r\n                });\r\n            };\r\n        }\r\n        static getDerivedStateFromProps(nextProps, prevState) {\r\n            if (nextProps.visible && !prevState.rendered) {\r\n                return {\r\n                    rendered: true,\r\n                };\r\n            }\r\n            return null;\r\n        }\r\n        componentDidUpdate(prevProps) {\r\n            if (prevProps.visible !== this.props.visible) {\r\n                if (this.props.visible) {\r\n                    this.showModal();\r\n                }\r\n                else {\r\n                    this.hideModal();\r\n                }\r\n            }\r\n        }\r\n        componentWillUnmount() {\r\n            BackHandler.removeEventListener('hardwareBackPress', this.handleBack);\r\n        }\r\n        render() {\r\n            const { rendered, opacity } = this.state;\r\n            if (!rendered)\r\n                return null;\r\n            const { children, dismissable, theme, contentContainerStyle } = this.props;\r\n            const { colors } = theme;\r\n            return (<Animated.View pointerEvents={this.props.visible ? 'auto' : 'none'} accessibilityViewIsModal accessibilityLiveRegion=\"polite\" style={StyleSheet.absoluteFill}>\r\n        <TouchableWithoutFeedback disabled={!dismissable} onPress={dismissable ? this.hideModal : undefined}>\r\n          <Animated.View style={[\r\n                styles.backdrop,\r\n                { backgroundColor: colors.backdrop, opacity },\r\n            ]}/>\r\n        </TouchableWithoutFeedback>\r\n        <SafeAreaView style={styles.wrapper} pointerEvents=\"box-none\">\r\n          <Surface style={[{ opacity }, styles.content, contentContainerStyle]}>\r\n            {children}\r\n          </Surface>\r\n        </SafeAreaView>\r\n      </Animated.View>);\r\n        }\r\n    }\r\n    Modal.defaultProps = {\r\n        dismissable: true,\r\n        visible: false,\r\n    };\r\n    return Modal;\r\n})();\r\nexport default withTheme(Modal);\r\nconst styles = StyleSheet.create({\r\n    backdrop: {\r\n        flex: 1,\r\n    },\r\n    wrapper: {\r\n        ...StyleSheet.absoluteFillObject,\r\n        justifyContent: 'center',\r\n    },\r\n    content: {\r\n        backgroundColor: 'transparent',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n"],"file":"Modal.js"}