{"version":3,"sources":["../../../../src/paper/components/ToggleButton/ToggleButtonGroup.js"],"names":["ToggleButtonGroupContext","React","createContext","ToggleButtonGroup","props","value","onValueChange","children","Component","displayName"],"mappings":"mvBAAA,oD,w1BACO,GAAMA,CAAAA,wBAAwB,CAAGC,KAAK,CAACC,aAAN,CAAoB,IAApB,CAAjC,C,0DA8BP,GAAIC,CAAAA,iBAAiB,CAAkB,UAAM,IACnCA,CAAAA,iBADmC,2UAE5B,iBACsC,KAAKC,KAD3C,CACGC,KADH,aACGA,KADH,CACUC,aADV,aACUA,aADV,CACyBC,QADzB,aACyBA,QADzB,CAEL,MAAQ,qBAAC,wBAAD,CAA0B,QAA1B,EAAmC,KAAK,CAAE,CAC9CF,KAAK,CAALA,KAD8C,CAE9CC,aAAa,CAAbA,aAF8C,CAA1C,6EAIXC,QAJW,CAAR,CAMH,CAVoC,+BACTN,KAAK,CAACO,SADG,EAYzCL,iBAAiB,CAACM,WAAlB,CAAgC,oBAAhC,CACA,MAAON,CAAAA,iBAAP,CACH,CAdqC,EAAtC,C,aAeeA,iB","sourcesContent":["import * as React from 'react';\r\nexport const ToggleButtonGroupContext = React.createContext(null);\r\n/**\r\n * Toggle group allows to control a group of toggle buttons.</br>\r\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, checkout <a href=\"/toggle-button-row.html\">`ToggleButton.Row`</a>.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { ToggleButton } from '../../';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     value: 'left',\r\n *   };\r\n *\r\n *   render() {\r\n *     return(\r\n *       <ToggleButton.Group\r\n *         onValueChange={value => this.setState({ value })}\r\n *         value={this.state.value}\r\n *       >\r\n *           <ToggleButton icon=\"format-align-left\" value=\"left\" />\r\n *           <ToggleButton icon=\"format-align-right\" value=\"right\" />\r\n *       </ToggleButton.Group>\r\n *     )\r\n *   }\r\n * }\r\n *```\r\n */\r\nlet ToggleButtonGroup = /** @class */ (() => {\r\n    class ToggleButtonGroup extends React.Component {\r\n        render() {\r\n            const { value, onValueChange, children } = this.props;\r\n            return (<ToggleButtonGroupContext.Provider value={{\r\n                value,\r\n                onValueChange,\r\n            }}>\r\n        {children}\r\n      </ToggleButtonGroupContext.Provider>);\r\n        }\r\n    }\r\n    ToggleButtonGroup.displayName = 'ToggleButton.Group';\r\n    return ToggleButtonGroup;\r\n})();\r\nexport default ToggleButtonGroup;\r\n"],"file":"ToggleButtonGroup.js"}