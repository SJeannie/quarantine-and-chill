{"version":3,"sources":["../../../../src/paper/components/Card/Card.js"],"names":["Card","arguments","state","elevation","Animated","Value","props","handlePressIn","scale","theme","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","children","cardElevation","onLongPress","onPress","style","testID","accessible","rest","roundness","total","React","Children","count","siblings","map","child","isValidElement","type","displayName","borderRadius","cursor","undefined","styles","innerContainer","index","cloneElement","Component","Content","CardContent","Actions","CardActions","Cover","CardCover","Title","CardTitle","defaultProps","StyleSheet","create","flexGrow","flexShrink"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, Animated, TouchableWithoutFeedback, View, } from 'react-native';\r\nimport CardContent from './CardContent';\r\nimport CardActions from './CardActions';\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport CardCover from './CardCover';\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport CardTitle from './CardTitle';\r\nimport Surface from '../Surface';\r\nimport { withTheme } from '../../core/theming';\r\n/**\r\n * A card is a sheet of material that serves as an entry point to more detailed information.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Avatar, Button, Card, Title, Paragraph } from '../../';\r\n *\r\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\r\n *\r\n * const MyComponent = () => (\r\n *   <Card>\r\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\r\n *     <Card.Content>\r\n *       <Title>Card title</Title>\r\n *       <Paragraph>Card content</Paragraph>\r\n *     </Card.Content>\r\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\r\n *     <Card.Actions>\r\n *       <Button>Cancel</Button>\r\n *       <Button>Ok</Button>\r\n *     </Card.Actions>\r\n *   </Card>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nlet Card = /** @class */ (() => {\r\n    class Card extends React.Component {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.state = {\r\n                // @ts-ignore\r\n                elevation: new Animated.Value(this.props.elevation),\r\n            };\r\n            this.handlePressIn = () => {\r\n                const { scale } = this.props.theme.animation;\r\n                Animated.timing(this.state.elevation, {\r\n                    toValue: 8,\r\n                    duration: 150 * scale,\r\n                    useNativeDriver: false,\r\n                }).start();\r\n            };\r\n            this.handlePressOut = () => {\r\n                const { scale } = this.props.theme.animation;\r\n                Animated.timing(this.state.elevation, {\r\n                    // @ts-ignore\r\n                    toValue: this.props.elevation,\r\n                    duration: 150 * scale,\r\n                    useNativeDriver: false,\r\n                }).start();\r\n            };\r\n        }\r\n        render() {\r\n            const { children, \r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            elevation: cardElevation, onLongPress, onPress, style, theme, testID, accessible, ...rest } = this.props;\r\n            // const { elevation } = this.state;\r\n            const { roundness } = theme;\r\n            const total = React.Children.count(children);\r\n            const siblings = React.Children.map(children, child => React.isValidElement(child) && child.type\r\n                ? child.type.displayName\r\n                : null);\r\n            return (<Surface style={[{ borderRadius: roundness, elevation: 1 }, style, , onPress && { cursor: 'pointer'}]} {...rest}>\r\n        <TouchableWithoutFeedback delayPressIn={0} disabled={!(onPress || onLongPress)} onLongPress={onLongPress} onPress={onPress} onPressIn={onPress ? this.handlePressIn : undefined} onPressOut={onPress ? this.handlePressOut : undefined} testID={testID} accessible={accessible}>\r\n          <View style={styles.innerContainer}>\r\n            {React.Children.map(children, (child, index) => React.isValidElement(child)\r\n                ? React.cloneElement(child, {\r\n                    index,\r\n                    total,\r\n                    siblings,\r\n                })\r\n                : child)}\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </Surface>);\r\n        }\r\n    }\r\n    // @component ./CardContent.tsx\r\n    Card.Content = CardContent;\r\n    // @component ./CardActions.tsx\r\n    Card.Actions = CardActions;\r\n    // @component ./CardCover.tsx\r\n    Card.Cover = CardCover;\r\n    // @component ./CardTitle.tsx\r\n    Card.Title = CardTitle;\r\n    Card.defaultProps = {\r\n        elevation: 1,\r\n    };\r\n    return Card;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    innerContainer: {\r\n        flexGrow: 1,\r\n        flexShrink: 1,\r\n    },\r\n});\r\nexport default withTheme(Card);\r\n"],"file":"Card.js"}