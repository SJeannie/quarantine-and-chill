{"version":3,"sources":["../../../../src/paper/components/Card/CardContent.js"],"names":["CardContent","props","index","total","siblings","style","rest","cover","title","contentStyle","prev","next","styles","only","first","last","container","React","Component","displayName","StyleSheet","create","paddingHorizontal","paddingTop","paddingBottom","paddingVertical"],"mappings":"k5BAAA,oDACA,yC,00BAqBA,GAAIA,CAAAA,WAAW,CAAkB,UAAM,IAC7BA,CAAAA,WAD6B,6SAEtB,iBAC8C,KAAKC,KADnD,CACGC,KADH,aACGA,KADH,CACUC,KADV,aACUA,KADV,CACiBC,QADjB,aACiBA,QADjB,CAC2BC,KAD3B,aAC2BA,KAD3B,CACqCC,IADrC,yFAEL,GAAMC,CAAAA,KAAK,CAAG,sBAAd,CACA,GAAMC,CAAAA,KAAK,CAAG,sBAAd,CACA,GAAIC,CAAAA,YAAJ,CAAkBC,IAAlB,CAAwBC,IAAxB,CACA,GAAI,MAAOT,CAAAA,KAAP,GAAiB,QAAjB,EAA6BE,QAAjC,CAA2C,CACvCM,IAAI,CAAGN,QAAQ,CAACF,KAAK,CAAG,CAAT,CAAf,CACAS,IAAI,CAAGP,QAAQ,CAACF,KAAK,CAAG,CAAT,CAAf,CACH,CACD,GAAKQ,IAAI,GAAKH,KAAT,EAAkBI,IAAI,GAAKJ,KAA5B,EACCG,IAAI,GAAKF,KAAT,EAAkBG,IAAI,GAAKH,KAD5B,EAEAL,KAAK,GAAK,CAFd,CAEiB,CACbM,YAAY,CAAGG,MAAM,CAACC,IAAtB,CACH,CAJD,IAKK,IAAIX,KAAK,GAAK,CAAd,CAAiB,CAClB,GAAIS,IAAI,GAAKJ,KAAT,EAAkBI,IAAI,GAAKH,KAA/B,CAAsC,CAClCC,YAAY,CAAGG,MAAM,CAACC,IAAtB,CACH,CAFD,IAGK,CACDJ,YAAY,CAAGG,MAAM,CAACE,KAAtB,CACH,CACJ,CAPI,IAQA,IAAI,MAAOX,CAAAA,KAAP,GAAiB,QAAjB,EAA6BD,KAAK,GAAKC,KAAK,CAAG,CAAnD,CAAsD,CACvD,GAAIO,IAAI,GAAKH,KAAT,EAAkBG,IAAI,GAAKF,KAA/B,CAAsC,CAClCC,YAAY,CAAGG,MAAM,CAACC,IAAtB,CACH,CAFD,IAGK,CACDJ,YAAY,CAAGG,MAAM,CAACG,IAAtB,CACH,CACJ,CAPI,IAQA,IAAIL,IAAI,GAAKH,KAAT,EAAkBG,IAAI,GAAKF,KAA/B,CAAsC,CACvCC,YAAY,CAAGG,MAAM,CAACE,KAAtB,CACH,CAFI,IAGA,IAAIH,IAAI,GAAKJ,KAAT,EAAkBI,IAAI,GAAKH,KAA/B,CAAsC,CACvCC,YAAY,CAAGG,MAAM,CAACG,IAAtB,CACH,CACD,MAAO,qBAAC,iBAAD,0BAAUT,IAAV,EAAgB,KAAK,CAAE,CAACM,MAAM,CAACI,SAAR,CAAmBP,YAAnB,CAAiCJ,KAAjC,CAAvB,8EAAP,CACH,CAvC8B,yBACTY,KAAK,CAACC,SADG,EAyCnClB,WAAW,CAACmB,WAAZ,CAA0B,cAA1B,CACA,MAAOnB,CAAAA,WAAP,CACH,CA3C+B,EAAhC,CA4CA,GAAMY,CAAAA,MAAM,CAAGQ,wBAAWC,MAAX,CAAkB,CAC7BL,SAAS,CAAE,CACPM,iBAAiB,CAAE,EADZ,CADkB,CAI7BR,KAAK,CAAE,CACHS,UAAU,CAAE,EADT,CAJsB,CAO7BR,IAAI,CAAE,CACFS,aAAa,CAAE,EADb,CAPuB,CAU7BX,IAAI,CAAE,CACFY,eAAe,CAAE,EADf,CAVuB,CAAlB,CAAf,C,aAcezB,W","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n/**\r\n * A component to show content inside a Card.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Card, Title, Paragraph } from '../../';\r\n *\r\n * const MyComponent = () => (\r\n *   <Card>\r\n *     <Card.Content>\r\n *       <Title>Card title</Title>\r\n *       <Paragraph>Card content</Paragraph>\r\n *     </Card.Content>\r\n *   </Card>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nlet CardContent = /** @class */ (() => {\r\n    class CardContent extends React.Component {\r\n        render() {\r\n            const { index, total, siblings, style, ...rest } = this.props;\r\n            const cover = 'withTheme(CardCover)';\r\n            const title = 'withTheme(CardTitle)';\r\n            let contentStyle, prev, next;\r\n            if (typeof index === 'number' && siblings) {\r\n                prev = siblings[index - 1];\r\n                next = siblings[index + 1];\r\n            }\r\n            if ((prev === cover && next === cover) ||\r\n                (prev === title && next === title) ||\r\n                total === 1) {\r\n                contentStyle = styles.only;\r\n            }\r\n            else if (index === 0) {\r\n                if (next === cover || next === title) {\r\n                    contentStyle = styles.only;\r\n                }\r\n                else {\r\n                    contentStyle = styles.first;\r\n                }\r\n            }\r\n            else if (typeof total === 'number' && index === total - 1) {\r\n                if (prev === cover || prev === title) {\r\n                    contentStyle = styles.only;\r\n                }\r\n                else {\r\n                    contentStyle = styles.last;\r\n                }\r\n            }\r\n            else if (prev === cover || prev === title) {\r\n                contentStyle = styles.first;\r\n            }\r\n            else if (next === cover || next === title) {\r\n                contentStyle = styles.last;\r\n            }\r\n            return <View {...rest} style={[styles.container, contentStyle, style]}/>;\r\n        }\r\n    }\r\n    CardContent.displayName = 'Card.Content';\r\n    return CardContent;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingHorizontal: 16,\r\n    },\r\n    first: {\r\n        paddingTop: 16,\r\n    },\r\n    last: {\r\n        paddingBottom: 16,\r\n    },\r\n    only: {\r\n        paddingVertical: 16,\r\n    },\r\n});\r\nexport default CardContent;\r\n"],"file":"CardContent.js"}