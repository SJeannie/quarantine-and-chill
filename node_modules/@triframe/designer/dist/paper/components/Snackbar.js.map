{"version":3,"sources":["../../../src/paper/components/Snackbar.js"],"names":["DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","arguments","state","opacity","Animated","Value","hidden","props","visible","toggle","show","hide","hideTimeout","clearTimeout","setState","scale","theme","animation","timing","toValue","duration","useNativeDriver","start","finished","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","onDismiss","prevProps","children","action","style","wrapperStyle","rest","colors","roundness","styles","wrapper","container","borderRadius","transform","interpolate","inputRange","outputRange","backgroundColor","onSurface","content","marginRight","color","surface","accessibilityLabel","onPress","button","accent","label","React","Component","defaultProps","StyleSheet","create","position","bottom","width","elevation","flexDirection","justifyContent","alignItems","margin","marginLeft","marginVertical","flexWrap","flex","marginHorizontal"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Animated, SafeAreaView, StyleSheet, } from 'react-native';\r\nimport Button from './Button';\r\nimport Surface from './Surface';\r\nimport Text from './Typography/Text';\r\nimport { withTheme } from '../core/theming';\r\nconst DURATION_SHORT = 4000;\r\nconst DURATION_MEDIUM = 7000;\r\nconst DURATION_LONG = 10000;\r\n/**\r\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\r\n * Snackbar by default use onSurface color from theme\r\n * <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/snackbar.gif\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View, StyleSheet } from 'react-native';\r\n * import { Button, Snackbar } from '../';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     visible: false,\r\n *   };\r\n *\r\n *   _onToggleSnackBar = () => this.setState(state => ({ visible: !state.visible }));\r\n *\r\n *   _onDismissSnackBar = () => this.setState({ visible: false });\r\n *\r\n *   render() {\r\n *     const { visible } = this.state;\r\n *\r\n *     return (\r\n *       <View style={styles.container}>\r\n *         <Button\r\n *           onPress={this._onToggleSnackBar}\r\n *         >\r\n *           {visible ? 'Hide' : 'Show'}\r\n *         </Button>\r\n *         <Snackbar\r\n *           visible={visible}\r\n *           onDismiss={this._onDismissSnackBar}\r\n *           action={{\r\n *             label: 'Undo',\r\n *             onPress: () => {\r\n *               // Do something\r\n *             },\r\n *           }}\r\n *         >\r\n *           Hey there! I'm a Snackbar.\r\n *         </Snackbar>\r\n *       </View>\r\n *     );\r\n *   }\r\n * }\r\n *\r\n * const styles = StyleSheet.create({\r\n *   container: {\r\n *     flex: 1,\r\n *     justifyContent: 'space-between',\r\n *   },\r\n * });\r\n * ```\r\n */\r\nlet Snackbar = /** @class */ (() => {\r\n    class Snackbar extends React.Component {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.state = {\r\n                opacity: new Animated.Value(0.0),\r\n                hidden: !this.props.visible,\r\n            };\r\n            this.toggle = () => {\r\n                if (this.props.visible) {\r\n                    this.show();\r\n                }\r\n                else {\r\n                    this.hide();\r\n                }\r\n            };\r\n            this.show = () => {\r\n                if (this.hideTimeout) {\r\n                    clearTimeout(this.hideTimeout);\r\n                }\r\n                this.setState({\r\n                    hidden: false,\r\n                });\r\n                const { scale } = this.props.theme.animation;\r\n                Animated.timing(this.state.opacity, {\r\n                    toValue: 1,\r\n                    duration: 200 * scale,\r\n                    useNativeDriver: true,\r\n                }).start(({ finished }) => {\r\n                    if (finished) {\r\n                        const { duration } = this.props;\r\n                        const isInfinity = duration === Number.POSITIVE_INFINITY ||\r\n                            duration === Number.NEGATIVE_INFINITY;\r\n                        if (finished && !isInfinity) {\r\n                            this.hideTimeout = setTimeout(this.props.onDismiss, duration);\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            this.hide = () => {\r\n                if (this.hideTimeout) {\r\n                    clearTimeout(this.hideTimeout);\r\n                }\r\n                const { scale } = this.props.theme.animation;\r\n                Animated.timing(this.state.opacity, {\r\n                    toValue: 0,\r\n                    duration: 100 * scale,\r\n                    useNativeDriver: true,\r\n                }).start(({ finished }) => {\r\n                    if (finished) {\r\n                        this.setState({ hidden: true });\r\n                    }\r\n                });\r\n            };\r\n        }\r\n        componentDidMount() {\r\n            if (this.props.visible) {\r\n                this.show();\r\n            }\r\n        }\r\n        componentDidUpdate(prevProps) {\r\n            if (prevProps.visible !== this.props.visible) {\r\n                this.toggle();\r\n            }\r\n        }\r\n        componentWillUnmount() {\r\n            if (this.hideTimeout) {\r\n                clearTimeout(this.hideTimeout);\r\n            }\r\n        }\r\n        render() {\r\n            const { children, visible, action, onDismiss, theme, style, wrapperStyle, \r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            duration, ...rest } = this.props;\r\n            const { colors, roundness } = theme;\r\n            if (this.state.hidden) {\r\n                return null;\r\n            }\r\n            return (<SafeAreaView pointerEvents=\"box-none\" style={[styles.wrapper, wrapperStyle]}>\r\n        <Surface pointerEvents=\"box-none\" accessibilityLiveRegion=\"polite\" style={[\r\n                styles.container,\r\n                {\r\n                    borderRadius: roundness,\r\n                    opacity: this.state.opacity,\r\n                    transform: [\r\n                        {\r\n                            scale: visible\r\n                                ? this.state.opacity.interpolate({\r\n                                    inputRange: [0, 1],\r\n                                    outputRange: [0.9, 1],\r\n                                })\r\n                                : 1,\r\n                        },\r\n                    ],\r\n                },\r\n                { backgroundColor: colors.onSurface },\r\n                style,\r\n            ]} {...rest}>\r\n          <Text style={[\r\n                styles.content,\r\n                { marginRight: action ? 0 : 16, color: colors.surface },\r\n            ]}>\r\n            {children}\r\n          </Text>\r\n          {action ? (<Button accessibilityLabel={action.accessibilityLabel} onPress={() => {\r\n                action.onPress();\r\n                onDismiss();\r\n            }} style={styles.button} color={colors.accent} compact mode=\"text\">\r\n              {action.label}\r\n            </Button>) : null}\r\n        </Surface>\r\n      </SafeAreaView>);\r\n        }\r\n    }\r\n    /**\r\n     * Show the Snackbar for a short duration.\r\n     */\r\n    Snackbar.DURATION_SHORT = DURATION_SHORT;\r\n    /**\r\n     * Show the Snackbar for a medium duration.\r\n     */\r\n    Snackbar.DURATION_MEDIUM = DURATION_MEDIUM;\r\n    /**\r\n     * Show the Snackbar for a long duration.\r\n     */\r\n    Snackbar.DURATION_LONG = DURATION_LONG;\r\n    Snackbar.defaultProps = {\r\n        duration: DURATION_MEDIUM,\r\n    };\r\n    return Snackbar;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        elevation: 6,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        margin: 8,\r\n        borderRadius: 4,\r\n    },\r\n    content: {\r\n        marginLeft: 16,\r\n        marginVertical: 14,\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n    },\r\n    button: {\r\n        marginHorizontal: 8,\r\n        marginVertical: 6,\r\n    },\r\n});\r\nexport default withTheme(Snackbar);\r\n"],"file":"Snackbar.js"}