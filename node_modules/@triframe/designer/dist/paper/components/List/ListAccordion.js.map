{"version":3,"sources":["../../../../src/paper/components/List/ListAccordion.js"],"names":["ListAccordion","arguments","state","expanded","props","handlePress","onPress","undefined","setState","left","title","description","children","theme","titleStyle","descriptionStyle","titleNumberOfLines","descriptionNumberOfLines","style","id","testID","titleColor","colors","text","alpha","rgb","string","descriptionColor","expandedInternal","groupContext","Error","expandedId","onAccordionPress","styles","container","row","color","primary","item","content","multiline","I18nManager","isRTL","React","Children","map","child","isValidElement","right","cloneElement","Component","displayName","defaultProps","StyleSheet","create","padding","flexDirection","alignItems","height","justifyContent","fontSize","margin","paddingLeft","flex"],"mappings":"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","sourcesContent":["import color from 'color';\r\nimport * as React from 'react';\r\nimport { View, StyleSheet, I18nManager, } from 'react-native';\r\nimport TouchableRipple from '../TouchableRipple';\r\nimport Icon from '../Icon';\r\nimport Text from '../Typography/Text';\r\nimport { withTheme } from '../../core/theming';\r\nimport { ListAccordionGroupContext, } from './ListAccordionGroup';\r\n/**\r\n * A component used to display an expandable list item.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { List, Checkbox } from '../../';\r\n *\r\n * class MyComponent extends React.Component {\r\n *   state = {\r\n *     expanded: true\r\n *   }\r\n *\r\n *   _handlePress = () =>\r\n *     this.setState({\r\n *       expanded: !this.state.expanded\r\n *     });\r\n *\r\n *   render() {\r\n *     return (\r\n *       <List.Section title=\"Accordions\">\r\n *         <List.Accordion\r\n *           title=\"Uncontrolled Accordion\"\r\n *           left={props => <List.Icon {...props} icon=\"folder\" />}\r\n *         >\r\n *           <List.Item title=\"First item\" />\r\n *           <List.Item title=\"Second item\" />\r\n *         </List.Accordion>\r\n *\r\n *         <List.Accordion\r\n *           title=\"Controlled Accordion\"\r\n *           left={props => <List.Icon {...props} icon=\"folder\" />}\r\n *           expanded={this.state.expanded}\r\n *           onPress={this._handlePress}\r\n *         >\r\n *           <List.Item title=\"First item\" />\r\n *           <List.Item title=\"Second item\" />\r\n *         </List.Accordion>\r\n *       </List.Section>\r\n *     );\r\n *   }\r\n * }\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nlet ListAccordion = /** @class */ (() => {\r\n    class ListAccordion extends React.Component {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.state = {\r\n                expanded: this.props.expanded || false,\r\n            };\r\n            this.handlePress = () => {\r\n                this.props.onPress && this.props.onPress();\r\n                if (this.props.expanded === undefined) {\r\n                    // Only update state of the `expanded` prop was not passed\r\n                    // If it was passed, the component will act as a controlled component\r\n                    this.setState(state => ({\r\n                        expanded: !state.expanded,\r\n                    }));\r\n                }\r\n            };\r\n        }\r\n        render() {\r\n            const { left, title, description, children, theme, titleStyle, descriptionStyle, titleNumberOfLines, descriptionNumberOfLines, style, id, testID, } = this.props;\r\n            const titleColor = color(theme.colors.text)\r\n                .alpha(0.87)\r\n                .rgb()\r\n                .string();\r\n            const descriptionColor = color(theme.colors.text)\r\n                .alpha(0.54)\r\n                .rgb()\r\n                .string();\r\n            const expandedInternal = this.props.expanded !== undefined\r\n                ? this.props.expanded\r\n                : this.state.expanded;\r\n            return (<ListAccordionGroupContext.Consumer>\r\n        {(groupContext) => {\r\n                if (groupContext !== null && !id) {\r\n                    throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');\r\n                }\r\n                const expanded = groupContext\r\n                    ? groupContext.expandedId === id\r\n                    : expandedInternal;\r\n                const handlePress = groupContext && id !== undefined\r\n                    ? () => groupContext.onAccordionPress(id)\r\n                    : this.handlePress;\r\n                return (<View>\r\n              <TouchableRipple style={[styles.container, style]} onPress={handlePress} accessibilityTraits=\"button\" accessibilityComponentType=\"button\" accessibilityRole=\"button\" testID={testID}>\r\n                <View style={styles.row} pointerEvents=\"none\">\r\n                  {left\r\n                    ? left({\r\n                        color: expanded\r\n                            ? theme.colors.primary\r\n                            : descriptionColor,\r\n                    })\r\n                    : null}\r\n                  <View style={[styles.item, styles.content]}>\r\n                    <Text numberOfLines={titleNumberOfLines} style={[\r\n                    styles.title,\r\n                    {\r\n                        color: expanded ? theme.colors.primary : titleColor,\r\n                    },\r\n                    titleStyle,\r\n                ]}>\r\n                      {title}\r\n                    </Text>\r\n                    {description && (<Text numberOfLines={descriptionNumberOfLines} style={[\r\n                    styles.description,\r\n                    {\r\n                        color: descriptionColor,\r\n                    },\r\n                    descriptionStyle,\r\n                ]}>\r\n                        {description}\r\n                      </Text>)}\r\n                  </View>\r\n                  <View style={[\r\n                    styles.item,\r\n                    description ? styles.multiline : undefined,\r\n                ]}>\r\n                    <Icon name={expanded ? 'chevron-up' : 'chevron-down'} color={titleColor} size={24} direction={I18nManager.isRTL ? 'rtl' : 'ltr'}/>\r\n                  </View>\r\n                </View>\r\n              </TouchableRipple>\r\n              {expanded\r\n                    ? React.Children.map(children, child => {\r\n                        if (left &&\r\n                            React.isValidElement(child) &&\r\n                            !child.props.left &&\r\n                            !child.props.right) {\r\n                            return React.cloneElement(child, {\r\n                                style: [styles.child, child.props.style],\r\n                            });\r\n                        }\r\n                        return child;\r\n                    })\r\n                    : null}\r\n            </View>);\r\n            }}\r\n      </ListAccordionGroupContext.Consumer>);\r\n        }\r\n    }\r\n    ListAccordion.displayName = 'List.Accordion';\r\n    ListAccordion.defaultProps = {\r\n        titleNumberOfLines: 1,\r\n        descriptionNumberOfLines: 2,\r\n    };\r\n    return ListAccordion;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 8,\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    multiline: {\r\n        height: 40,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n    },\r\n    description: {\r\n        fontSize: 14,\r\n    },\r\n    item: {\r\n        margin: 8,\r\n    },\r\n    child: {\r\n        paddingLeft: 64,\r\n    },\r\n    content: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n    },\r\n});\r\nexport default withTheme(ListAccordion);\r\n"],"file":"ListAccordion.js"}