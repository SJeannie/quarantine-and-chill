{"version":3,"sources":["../../../../src/paper/components/List/ListItem.js"],"names":["ListItem","descriptionColor","description","props","descriptionEllipsizeMode","descriptionStyle","descriptionNumberOfLines","ellipsizeMode","color","fontSize","styles","left","right","title","onPress","theme","style","titleStyle","titleNumberOfLines","titleEllipsizeMode","rest","titleColor","colors","text","alpha","rgb","string","container","row","iconMarginLeft","marginVerticalNone","item","content","renderDescription","iconMarginRight","React","Component","displayName","defaultProps","StyleSheet","create","padding","flexDirection","marginVertical","marginLeft","marginRight","paddingLeft","flex","justifyContent"],"mappings":"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","sourcesContent":["import calcColor from 'color';\r\nimport * as React from 'react';\r\nimport { StyleSheet, View, } from 'react-native';\r\nimport TouchableRipple from '../TouchableRipple';\r\nimport Text from '../Typography/Text';\r\nimport { withTheme } from '../../core/theming';\r\n/**\r\n * A component to show tiles inside a List.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/list-item-1.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/list-item-2.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/list-item-3.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { List } from '../../';\r\n *\r\n * const MyComponent = () => (\r\n *   <List.Item\r\n *     title=\"First Item\"\r\n *     description=\"Item description\"\r\n *     left={props => <List.Icon {...props} icon=\"folder\" />}\r\n *   />\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nlet ListItem = /** @class */ (() => {\r\n    class ListItem extends React.Component {\r\n        renderDescription(descriptionColor, description) {\r\n            const { descriptionEllipsizeMode, descriptionStyle, descriptionNumberOfLines, } = this.props;\r\n            return typeof description === 'function' ? (description({\r\n                ellipsizeMode: descriptionEllipsizeMode,\r\n                color: descriptionColor,\r\n                fontSize: styles.description.fontSize,\r\n            })) : (<Text numberOfLines={descriptionNumberOfLines} ellipsizeMode={descriptionEllipsizeMode} style={[\r\n                styles.description,\r\n                { color: descriptionColor },\r\n                descriptionStyle,\r\n            ]}>\r\n        {description}\r\n      </Text>);\r\n        }\r\n        render() {\r\n            const { left, color, right, title, description, onPress, theme, style, titleStyle, titleNumberOfLines, titleEllipsizeMode, ...rest } = this.props;\r\n            const titleColor = calcColor(color || theme.colors.text)\r\n                .alpha(0.87)\r\n                .rgb()\r\n                .string();\r\n            const descriptionColor = calcColor(color || theme.colors.text)\r\n                .alpha(0.54)\r\n                .rgb()\r\n                .string();\r\n            return (<TouchableRipple {...rest} style={[styles.container, style]} onPress={onPress}>\r\n        <View style={styles.row}>\r\n          {left\r\n                ? left({\r\n                    color: descriptionColor,\r\n                    style: description\r\n                        ? styles.iconMarginLeft\r\n                        : {\r\n                            ...styles.iconMarginLeft,\r\n                            ...styles.marginVerticalNone,\r\n                        },\r\n                })\r\n                : null}\r\n          <View style={[styles.item, styles.content]}>\r\n            <Text ellipsizeMode={titleEllipsizeMode} numberOfLines={titleNumberOfLines} style={[styles.title, { color: titleColor }, titleStyle]}>\r\n              {title}\r\n            </Text>\r\n            {description\r\n                ? this.renderDescription(descriptionColor, description)\r\n                : null}\r\n          </View>\r\n          {right\r\n                ? right({\r\n                    color: descriptionColor,\r\n                    style: description\r\n                        ? styles.iconMarginRight\r\n                        : {\r\n                            ...styles.iconMarginRight,\r\n                            ...styles.marginVerticalNone,\r\n                        },\r\n                })\r\n                : null}\r\n        </View>\r\n      </TouchableRipple>);\r\n        }\r\n    }\r\n    ListItem.displayName = 'List.Item';\r\n    ListItem.defaultProps = {\r\n        titleNumberOfLines: 1,\r\n        descriptionNumberOfLines: 2,\r\n    };\r\n    return ListItem;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 8,\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n    },\r\n    description: {\r\n        fontSize: 14,\r\n    },\r\n    marginVerticalNone: { marginVertical: 0 },\r\n    iconMarginLeft: { marginLeft: 0, marginRight: 16 },\r\n    iconMarginRight: { marginRight: 0 },\r\n    item: {\r\n        marginVertical: 6,\r\n        paddingLeft: 8,\r\n    },\r\n    content: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n    },\r\n});\r\nexport default withTheme(ListItem);\r\n"],"file":"ListItem.js"}