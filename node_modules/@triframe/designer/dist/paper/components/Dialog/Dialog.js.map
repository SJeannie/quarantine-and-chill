{"version":3,"sources":["../../../../src/paper/components/Dialog/Dialog.js"],"names":["Dialog","props","children","dismissable","onDismiss","visible","style","theme","borderRadius","roundness","backgroundColor","colors","surface","styles","container","React","Children","toArray","filter","child","map","i","isValidElement","type","DialogContent","cloneElement","paddingTop","Component","Content","Actions","DialogActions","Title","DialogTitle","ScrollArea","DialogScrollArea","defaultProps","StyleSheet","create","marginVertical","Platform","OS","marginHorizontal","elevation","justifyContent"],"mappings":"ktBAAA,oDACA,yCACA,uDACA,sEACA,sEAEA,kEACA,4EACA,2C,u0BAgDA,GAAIA,CAAAA,MAAM,CAAkB,UAAM,IACxBA,CAAAA,MADwB,oRAEjB,iBACgE,KAAKC,KADrE,CACGC,QADH,aACGA,QADH,CACaC,WADb,aACaA,WADb,CAC0BC,SAD1B,aAC0BA,SAD1B,CACqCC,OADrC,aACqCA,OADrC,CAC8CC,KAD9C,aAC8CA,KAD9C,CACqDC,KADrD,aACqDA,KADrD,CAEL,MAAQ,qBAAC,cAAD,EAAO,WAAW,CAAEJ,WAApB,CAAiC,SAAS,CAAEC,SAA5C,CAAuD,OAAO,CAAEC,OAAhE,CAAyE,qBAAqB,CAAE,CACpG,CACIG,YAAY,CAAED,KAAK,CAACE,SADxB,CAEIC,eAAe,CAAEH,KAAK,CAACI,MAAN,CAAaC,OAFlC,CADoG,CAKpGC,MAAM,CAACC,SAL6F,CAMpGR,KANoG,CAAhG,6EAQXS,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBf,QAAvB,EACQgB,MADR,CACe,SAAAC,KAAK,QAAIA,CAAAA,KAAK,EAAI,IAAT,EAAiB,MAAOA,CAAAA,KAAP,GAAiB,SAAtC,EADpB,EAEQC,GAFR,CAEY,SAACD,KAAD,CAAQE,CAAR,CAAc,CACnB,GAAIA,CAAC,GAAK,CAAN,EACAN,KAAK,CAACO,cAAN,CAAqBH,KAArB,CADA,EAEAA,KAAK,CAACI,IAAN,GAAeC,sBAFnB,CAEkC,CAE9B,MAAOT,CAAAA,KAAK,CAACU,YAAN,CAAmBN,KAAnB,CAA0B,CAC7Bb,KAAK,CAAE,CAAC,CAAEoB,UAAU,CAAE,EAAd,CAAD,CAAqBP,KAAK,CAAClB,KAAN,CAAYK,KAAjC,CADsB,CAA1B,CAAP,CAGH,CACD,MAAOa,CAAAA,KAAP,CACH,CAZJ,CARW,CAAR,CAsBH,CA1ByB,oBACTJ,KAAK,CAACY,SADG,EA6B9B3B,MAAM,CAAC4B,OAAP,CAAiBJ,sBAAjB,CAEAxB,MAAM,CAAC6B,OAAP,CAAiBC,sBAAjB,CAEA9B,MAAM,CAAC+B,KAAP,CAAeC,oBAAf,CAEAhC,MAAM,CAACiC,UAAP,CAAoBC,yBAApB,CACAlC,MAAM,CAACmC,YAAP,CAAsB,CAClBhC,WAAW,CAAE,IADK,CAElBE,OAAO,CAAE,KAFS,CAAtB,CAIA,MAAOL,CAAAA,MAAP,CACH,CAzC0B,EAA3B,CA0CA,GAAMa,CAAAA,MAAM,CAAGuB,wBAAWC,MAAX,CAAkB,CAC7BvB,SAAS,CAAE,CAQPwB,cAAc,CAAEC,sBAASC,EAAT,GAAgB,SAAhB,CAA4B,EAA5B,CAAiC,CAR1C,CASPC,gBAAgB,CAAE,EATX,CAUPC,SAAS,CAAE,EAVJ,CAWPC,cAAc,CAAE,YAXT,CADkB,CAAlB,CAAf,C,aAee,uBAAU3C,MAAV,C","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, Platform } from 'react-native';\r\nimport Modal from '../Modal';\r\nimport DialogContent from './DialogContent';\r\nimport DialogActions from './DialogActions';\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogScrollArea from './DialogScrollArea';\r\nimport { withTheme } from '../../core/theming';\r\n/**\r\n * Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\r\n * To render the `Dialog` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\r\n *\r\n *  <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/dialog-1.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/dialog-2.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { Button, Paragraph, Dialog, Portal } from '../../';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     visible: false,\r\n *   };\r\n *\r\n *   _showDialog = () => this.setState({ visible: true });\r\n *\r\n *   _hideDialog = () => this.setState({ visible: false });\r\n *\r\n *   render() {\r\n *     return (\r\n *       <View>\r\n *         <Button onPress={this._showDialog}>Show Dialog</Button>\r\n *         <Portal>\r\n *           <Dialog\r\n *              visible={this.state.visible}\r\n *              onDismiss={this._hideDialog}>\r\n *             <Dialog.Title>Alert</Dialog.Title>\r\n *             <Dialog.Content>\r\n *               <Paragraph>This is simple dialog</Paragraph>\r\n *             </Dialog.Content>\r\n *             <Dialog.Actions>\r\n *               <Button onPress={this._hideDialog}>Done</Button>\r\n *             </Dialog.Actions>\r\n *           </Dialog>\r\n *         </Portal>\r\n *       </View>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nlet Dialog = /** @class */ (() => {\r\n    class Dialog extends React.Component {\r\n        render() {\r\n            const { children, dismissable, onDismiss, visible, style, theme, } = this.props;\r\n            return (<Modal dismissable={dismissable} onDismiss={onDismiss} visible={visible} contentContainerStyle={[\r\n                {\r\n                    borderRadius: theme.roundness,\r\n                    backgroundColor: theme.colors.surface,\r\n                },\r\n                styles.container,\r\n                style,\r\n            ]}>\r\n        {React.Children.toArray(children)\r\n                .filter(child => child != null && typeof child !== 'boolean')\r\n                .map((child, i) => {\r\n                if (i === 0 &&\r\n                    React.isValidElement(child) &&\r\n                    child.type === DialogContent) {\r\n                    // Dialog content is the first item, so we add a top padding\r\n                    return React.cloneElement(child, {\r\n                        style: [{ paddingTop: 24 }, child.props.style],\r\n                    });\r\n                }\r\n                return child;\r\n            })}\r\n      </Modal>);\r\n        }\r\n    }\r\n    // @component ./DialogContent.tsx\r\n    Dialog.Content = DialogContent;\r\n    // @component ./DialogActions.tsx\r\n    Dialog.Actions = DialogActions;\r\n    // @component ./DialogTitle.tsx\r\n    Dialog.Title = DialogTitle;\r\n    // @component ./DialogScrollArea.tsx\r\n    Dialog.ScrollArea = DialogScrollArea;\r\n    Dialog.defaultProps = {\r\n        dismissable: true,\r\n        visible: false,\r\n    };\r\n    return Dialog;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        /**\r\n         * This prevents the shadow from being clipped on Android since Android\r\n         * doesn't support `overflow: visible`.\r\n         * One downside for this fix is that it will disable clicks on the area\r\n         * of the shadow around the dialog, consequently, if you click around the\r\n         * dialog (44 pixel from the top and bottom) it won't be dismissed.\r\n         */\r\n        marginVertical: Platform.OS === 'android' ? 44 : 0,\r\n        marginHorizontal: 26,\r\n        elevation: 24,\r\n        justifyContent: 'flex-start',\r\n    },\r\n});\r\nexport default withTheme(Dialog);\r\n"],"file":"Dialog.js"}