{"version":3,"sources":["../../../../src/paper/components/Dialog/DialogActions.js"],"names":["DialogActions","props","styles","container","style","React","Children","map","children","child","isValidElement","cloneElement","compact","Component","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","padding"],"mappings":"kyBAAA,oDACA,yC,80BAiCA,GAAIA,CAAAA,aAAa,CAAkB,UAAM,IAC/BA,CAAAA,aAD+B,uTAExB,CACL,MAAQ,qBAAC,iBAAD,0BAAU,KAAKC,KAAf,EAAsB,KAAK,CAAE,CAACC,MAAM,CAACC,SAAR,CAAmB,KAAKF,KAAL,CAAWG,KAA9B,CAA7B,8EACXC,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,KAAKN,KAAL,CAAWO,QAA9B,CAAwC,SAAAC,KAAK,QAAIJ,CAAAA,KAAK,CAACK,cAAN,CAAqBD,KAArB,EACxCJ,KAAK,CAACM,YAAN,CAAmBF,KAAnB,CAA0B,CACxBG,OAAO,CAAE,IADe,CAA1B,CADwC,CAIxCH,KAJoC,EAA7C,CADW,CAAR,CAOH,CAVgC,2BACTJ,KAAK,CAACQ,SADG,EAYrCb,aAAa,CAACc,WAAd,CAA4B,gBAA5B,CACA,MAAOd,CAAAA,aAAP,CACH,CAdiC,EAAlC,CAeA,GAAME,CAAAA,MAAM,CAAGa,wBAAWC,MAAX,CAAkB,CAC7Bb,SAAS,CAAE,CACPc,aAAa,CAAE,KADR,CAEPC,UAAU,CAAE,QAFL,CAGPC,cAAc,CAAE,UAHT,CAIPC,OAAO,CAAE,CAJF,CADkB,CAAlB,CAAf,C,aAQepB,a","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n/**\r\n * A component to show a list of actions in a Dialog.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Button, Dialog, Portal } from '../../';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     visible: false,\r\n *   };\r\n *\r\n *   _hideDialog = () => this.setState({ visible: false });\r\n *\r\n *   render() {\r\n *     return (\r\n *       <Portal>\r\n *         <Dialog\r\n *           visible={this.state.visible}\r\n *           onDismiss={this._hideDialog}>\r\n *           <Dialog.Actions>\r\n *             <Button onPress={() => console.log(\"Cancel\")}>Cancel</Button>\r\n *             <Button onPress={() => console.log(\"Ok\")}>Ok</Button>\r\n *           </Dialog.Actions>\r\n *         </Dialog>\r\n *       </Portal>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nlet DialogActions = /** @class */ (() => {\r\n    class DialogActions extends React.Component {\r\n        render() {\r\n            return (<View {...this.props} style={[styles.container, this.props.style]}>\r\n        {React.Children.map(this.props.children, child => React.isValidElement(child)\r\n                ? React.cloneElement(child, {\r\n                    compact: true,\r\n                })\r\n                : child)}\r\n      </View>);\r\n        }\r\n    }\r\n    DialogActions.displayName = 'Dialog.Actions';\r\n    return DialogActions;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: 8,\r\n    },\r\n});\r\nexport default DialogActions;\r\n"],"file":"DialogActions.js"}