{"version":3,"sources":["../../../src/paper/components/BottomNavigation.js"],"names":["MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Touchable","_0","route","style","children","borderless","centered","rippleColor","rest","TouchableRipple","supported","SceneComponent","props","component","React","createElement","PureComponent","BottomNavigation","handleKeyboardShow","scale","theme","animation","setState","keyboard","Animated","timing","state","visible","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToCurrentIndex","shifting","isShifting","navigationState","routes","index","ripple","setValue","parallel","map","_","i","tabs","finished","tab","offsets","forEach","offset","handleLayout","e","layout","nativeEvent","height","width","measured","handleTabPress","onTabPress","onIndexChange","event","defaultPrevented","preventDefault","jumpTo","key","findIndex","length","Value","touch","current","previous","loaded","Platform","OS","Keyboard","addListener","prevProps","removeListener","renderScene","renderIcon","renderLabel","renderTouchable","getLabelText","title","getBadge","badge","getColor","color","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","sceneAnimationEnabled","colors","isDarkTheme","dark","mode","StyleSheet","flatten","customBackground","backgroundColor","elevation","approxBackgroundColor","surface","primary","interpolate","inputRange","outputRange","isDark","isLight","textColor","white","black","activeTintColor","inactiveTintColor","alpha","rgb","string","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","tabWidth","rippleSize","styles","container","content","background","includes","focused","opacity","top","absoluteFill","bar","transform","translateY","position","barContent","bottom","items","maxWidth","left","borderRadius","active","activeOpacity","inactiveOpacity","onPress","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","item","iconContainer","iconWrapper","icon","badgeContainer","right","String","labelContainer","labelWrapper","label","scenes","nextProps","prevState","nextState","Component","defaultProps","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","marginHorizontal","alignSelf","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\r\nimport * as React from 'react';\r\nimport { View, Animated, TouchableWithoutFeedback, StyleSheet, Platform, Keyboard, } from 'react-native';\r\nimport SafeAreaView from 'react-native';\r\nimport color from 'color';\r\nimport overlay from '../styles/overlay';\r\nimport Icon from './Icon';\r\nimport Surface from './Surface';\r\nimport Badge from './Badge';\r\nimport TouchableRipple from './TouchableRipple';\r\nimport Text from './Typography/Text';\r\nimport { black, white } from '../styles/colors';\r\nimport { withTheme } from '../core/theming';\r\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\r\nconst MIN_TAB_WIDTH = 96;\r\nconst MAX_TAB_WIDTH = 168;\r\nconst BAR_HEIGHT = 56;\r\nconst FAR_FAR_AWAY = 9999;\r\nconst Touchable = ({ route: _0, style, children, borderless, centered, rippleColor, ...rest }) => TouchableRipple.supported ? (<TouchableRipple {...rest} borderless={borderless} centered={centered} rippleColor={rippleColor} style={style}>\r\n      {children}\r\n    </TouchableRipple>) : (<TouchableWithoutFeedback {...rest}>\r\n      <View style={style}>{children}</View>\r\n    </TouchableWithoutFeedback>);\r\nclass SceneComponent extends React.PureComponent {\r\n    render() {\r\n        const { component, ...rest } = this.props;\r\n        return React.createElement(component, rest);\r\n    }\r\n}\r\n/**\r\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\r\n * It is primarily designed for use on mobile.\r\n *\r\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tab-navigator](https://github.com/react-navigation/react-navigation-material-bottom-tab-navigator).\r\n *\r\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\r\n * See [Dark Theme](https://callstack.github.io/'../'/theming.html#dark-theme) for more informations\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { BottomNavigation, Text } from '../';\r\n *\r\n * const MusicRoute = () => <Text>Music</Text>;\r\n *\r\n * const AlbumsRoute = () => <Text>Albums</Text>;\r\n *\r\n * const RecentsRoute = () => <Text>Recents</Text>;\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     index: 0,\r\n *     routes: [\r\n *       { key: 'music', title: 'Music', icon: 'queue-music' },\r\n *       { key: 'albums', title: 'Albums', icon: 'album' },\r\n *       { key: 'recents', title: 'Recents', icon: 'history' },\r\n *     ],\r\n *   };\r\n *\r\n *   _handleIndexChange = index => this.setState({ index });\r\n *\r\n *   _renderScene = BottomNavigation.SceneMap({\r\n *     music: MusicRoute,\r\n *     albums: AlbumsRoute,\r\n *     recents: RecentsRoute,\r\n *   });\r\n *\r\n *   render() {\r\n *     return (\r\n *       <BottomNavigation\r\n *         navigationState={this.state}\r\n *         onIndexChange={this._handleIndexChange}\r\n *         renderScene={this._renderScene}\r\n *       />\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nlet BottomNavigation = /** @class */ (() => {\r\n    class BottomNavigation extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.handleKeyboardShow = () => {\r\n                const { scale } = this.props.theme.animation;\r\n                this.setState({ keyboard: true }, () => Animated.timing(this.state.visible, {\r\n                    toValue: 0,\r\n                    duration: 150 * scale,\r\n                    useNativeDriver: true,\r\n                }).start());\r\n            };\r\n            this.handleKeyboardHide = () => {\r\n                const { scale } = this.props.theme.animation;\r\n                Animated.timing(this.state.visible, {\r\n                    toValue: 1,\r\n                    duration: 100 * scale,\r\n                    useNativeDriver: true,\r\n                }).start(() => {\r\n                    this.setState({ keyboard: false });\r\n                });\r\n            };\r\n            this.animateToCurrentIndex = () => {\r\n                const shifting = this.isShifting();\r\n                const { navigationState, theme: { animation: { scale }, }, } = this.props;\r\n                const { routes, index } = navigationState;\r\n                // Reset the ripple to avoid glitch if it's currently animating\r\n                this.state.ripple.setValue(MIN_RIPPLE_SCALE);\r\n                Animated.parallel([\r\n                    Animated.timing(this.state.ripple, {\r\n                        toValue: 1,\r\n                        duration: shifting ? 400 * scale : 0,\r\n                        useNativeDriver: true,\r\n                    }),\r\n                    ...routes.map((_, i) => Animated.timing(this.state.tabs[i], {\r\n                        toValue: i === index ? 1 : 0,\r\n                        duration: shifting ? 150 * scale : 0,\r\n                        useNativeDriver: true,\r\n                    })),\r\n                ]).start(({ finished }) => {\r\n                    // Workaround a bug in native animations where this is reset after first animation\r\n                    this.state.tabs.map((tab, i) => tab.setValue(i === index ? 1 : 0));\r\n                    // Update the index to change bar's bacground color and then hide the ripple\r\n                    this.state.index.setValue(index);\r\n                    this.state.ripple.setValue(MIN_RIPPLE_SCALE);\r\n                    if (finished) {\r\n                        // Position all inactive screens offscreen to save memory usage\r\n                        // Only do it when animation has finished to avoid glitches mid-transition if switching fast\r\n                        this.state.offsets.forEach((offset, i) => {\r\n                            if (i === index) {\r\n                                offset.setValue(0);\r\n                            }\r\n                            else {\r\n                                offset.setValue(1);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            };\r\n            this.handleLayout = (e) => {\r\n                const { layout } = this.state;\r\n                const { height, width } = e.nativeEvent.layout;\r\n                if (height === layout.height && width === layout.width) {\r\n                    return;\r\n                }\r\n                this.setState({\r\n                    layout: {\r\n                        height,\r\n                        width,\r\n                        measured: true,\r\n                    },\r\n                });\r\n            };\r\n            this.handleTabPress = (index) => {\r\n                const { navigationState, onTabPress, onIndexChange } = this.props;\r\n                const event = {\r\n                    route: navigationState.routes[index],\r\n                    defaultPrevented: false,\r\n                    preventDefault: () => {\r\n                        event.defaultPrevented = true;\r\n                    },\r\n                };\r\n                onTabPress?.(event);\r\n                if (event.defaultPrevented) {\r\n                    return;\r\n                }\r\n                if (index !== navigationState.index) {\r\n                    onIndexChange(index);\r\n                }\r\n            };\r\n            this.jumpTo = (key) => {\r\n                const index = this.props.navigationState.routes.findIndex(route => route.key === key);\r\n                this.props.onIndexChange(index);\r\n            };\r\n            this.isShifting = () => typeof this.props.shifting === 'boolean'\r\n                ? this.props.shifting\r\n                : this.props.navigationState.routes.length > 3;\r\n            const { index } = this.props.navigationState;\r\n            this.state = {\r\n                visible: new Animated.Value(1),\r\n                tabs: [],\r\n                offsets: [],\r\n                index: new Animated.Value(index),\r\n                ripple: new Animated.Value(MIN_RIPPLE_SCALE),\r\n                touch: new Animated.Value(MIN_RIPPLE_SCALE),\r\n                layout: { height: 0, width: 0, measured: false },\r\n                current: index,\r\n                previous: 0,\r\n                loaded: [index],\r\n                keyboard: false,\r\n            };\r\n        }\r\n        /**\r\n         * Function which takes a map of route keys to components.\r\n         * Pure components are used to minmize re-rendering of the pages.\r\n         * This drastically improves the animation performance.\r\n         */\r\n        static SceneMap(scenes) {\r\n            return ({ route, jumpTo, }) => (<SceneComponent key={route.key} component={scenes[route.key ? route.key : '']} route={route} jumpTo={jumpTo}/>);\r\n        }\r\n        static getDerivedStateFromProps(nextProps, prevState) {\r\n            const { index, routes } = nextProps.navigationState;\r\n            // Re-create animated values if routes have been added/removed\r\n            // Preserve previous animated values if they exist, so we don't break animations\r\n            const tabs = routes.map(\r\n            // focused === 1, unfocused === 0\r\n            (_, i) => prevState.tabs[i] || new Animated.Value(i === index ? 1 : 0));\r\n            const offsets = routes.map(\r\n            // offscreen === 1, normal === 0\r\n            (_, i) => prevState.offsets[i] || new Animated.Value(i === index ? 0 : 1));\r\n            const nextState = {\r\n                tabs,\r\n                offsets,\r\n            };\r\n            if (index !== prevState.current) {\r\n                /* $FlowFixMe */\r\n                Object.assign(nextState, {\r\n                    // Store the current index in state so that we can later check if the index has changed\r\n                    current: index,\r\n                    previous: prevState.current,\r\n                    // Set the current tab to be loaded if it was not loaded before\r\n                    loaded: prevState.loaded.includes(index)\r\n                        ? prevState.loaded\r\n                        : [...prevState.loaded, index],\r\n                });\r\n            }\r\n            return nextState;\r\n        }\r\n        componentDidMount() {\r\n            // Workaround for native animated bug in react-native@^0.57\r\n            // Context: https://github.com/callstack/'../'/pull/637\r\n            this.animateToCurrentIndex();\r\n            if (Platform.OS === 'ios') {\r\n                Keyboard.addListener('keyboardWillShow', this.handleKeyboardShow);\r\n                Keyboard.addListener('keyboardWillHide', this.handleKeyboardHide);\r\n            }\r\n            else {\r\n                Keyboard.addListener('keyboardDidShow', this.handleKeyboardShow);\r\n                Keyboard.addListener('keyboardDidHide', this.handleKeyboardHide);\r\n            }\r\n        }\r\n        componentDidUpdate(prevProps) {\r\n            if (prevProps.navigationState.index === this.props.navigationState.index) {\r\n                return;\r\n            }\r\n            // Reset offsets of previous and current tabs before animation\r\n            this.state.offsets.forEach((offset, i) => {\r\n                if (i === this.props.navigationState.index ||\r\n                    i === prevProps.navigationState.index) {\r\n                    offset.setValue(0);\r\n                }\r\n            });\r\n            this.animateToCurrentIndex();\r\n        }\r\n        componentWillUnmount() {\r\n            if (Platform.OS === 'ios') {\r\n                Keyboard.removeListener('keyboardWillShow', this.handleKeyboardShow);\r\n                Keyboard.removeListener('keyboardWillHide', this.handleKeyboardHide);\r\n            }\r\n            else {\r\n                Keyboard.removeListener('keyboardDidShow', this.handleKeyboardShow);\r\n                Keyboard.removeListener('keyboardDidHide', this.handleKeyboardHide);\r\n            }\r\n        }\r\n        render() {\r\n            const { navigationState, renderScene, renderIcon, renderLabel, renderTouchable = (props) => <Touchable {...props}/>, getLabelText = ({ route }) => route.title, getBadge = ({ route }) => route.badge, getColor = ({ route }) => route.color, getAccessibilityLabel = ({ route }) => route.accessibilityLabel, getTestID = ({ route }) => route.testID, activeColor, inactiveColor, keyboardHidesNavigationBar, barStyle, labeled, style, theme, sceneAnimationEnabled, } = this.props;\r\n            const { layout, loaded, index, visible, ripple, keyboard, tabs, offsets, } = this.state;\r\n            const { routes } = navigationState;\r\n            const { colors, dark: isDarkTheme, mode } = theme;\r\n            const shifting = this.isShifting();\r\n            const { backgroundColor: customBackground, elevation = 4 } = StyleSheet.flatten(barStyle) || {};\r\n            const approxBackgroundColor = customBackground\r\n                ? customBackground\r\n                : isDarkTheme && mode === 'adaptive'\r\n                    ? overlay(elevation, colors.surface)\r\n                    : colors.primary;\r\n            const backgroundColor = shifting\r\n                ? index.interpolate({\r\n                    inputRange: routes.map((_, i) => i),\r\n                    //@ts-ignore\r\n                    outputRange: routes.map(route => getColor({ route }) || approxBackgroundColor),\r\n                })\r\n                : approxBackgroundColor;\r\n            const isDark = !color(approxBackgroundColor).isLight();\r\n            const textColor = isDark ? white : black;\r\n            const activeTintColor = typeof activeColor !== 'undefined' ? activeColor : textColor;\r\n            const inactiveTintColor = typeof inactiveColor !== 'undefined'\r\n                ? inactiveColor\r\n                : color(textColor)\r\n                    .alpha(0.5)\r\n                    .rgb()\r\n                    .string();\r\n            const touchColor = color(activeColor || activeTintColor)\r\n                .alpha(0.12)\r\n                .rgb()\r\n                .string();\r\n            const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\r\n            const maxTabBarWidth = maxTabWidth * routes.length;\r\n            const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\r\n            const tabWidth = tabBarWidth / routes.length;\r\n            const rippleSize = layout.width / 4;\r\n            return (<View style={[styles.container, style]}>\r\n        <View style={[styles.content, { backgroundColor: colors.background }]}>\r\n          {routes.map((route, index) => {\r\n                if (!loaded.includes(index)) {\r\n                    // Don't render a screen if we've never navigated to it\r\n                    return null;\r\n                }\r\n                const focused = navigationState.index === index;\r\n                const opacity = sceneAnimationEnabled !== false ? tabs[index] : focused ? 1 : 0;\r\n                const top = offsets[index].interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [0, FAR_FAR_AWAY],\r\n                });\r\n                return (<Animated.View key={route.key} pointerEvents={focused ? 'auto' : 'none'} accessibilityElementsHidden={!focused} importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'} style={[StyleSheet.absoluteFill, { opacity }]} collapsable={false} removeClippedSubviews={\r\n                // On iOS, set removeClippedSubviews to true only when not focused\r\n                // This is an workaround for a bug where the clipped view never re-appears\r\n                Platform.OS === 'ios' ? navigationState.index !== index : true}>\r\n                <Animated.View style={[styles.content, { top }]}>\r\n                  {renderScene({\r\n                    route,\r\n                    jumpTo: this.jumpTo,\r\n                })}\r\n                </Animated.View>\r\n              </Animated.View>);\r\n            })}\r\n        </View>\r\n        <Surface style={[\r\n                styles.bar,\r\n                keyboardHidesNavigationBar\r\n                    ? {\r\n                        // When the keyboard is shown, slide down the navigation bar\r\n                        transform: [\r\n                            {\r\n                                translateY: visible.interpolate({\r\n                                    inputRange: [0, 1],\r\n                                    outputRange: [layout.height, 0],\r\n                                }),\r\n                            },\r\n                        ],\r\n                        // Absolutely position the navigation bar so that the content is below it\r\n                        // This is needed to avoid gap at bottom when the navigation bar is hidden\r\n                        position: keyboard ? 'absolute' : null,\r\n                    }\r\n                    : null,\r\n                barStyle,\r\n            ]} pointerEvents={layout.measured\r\n                ? keyboardHidesNavigationBar && keyboard\r\n                    ? 'none'\r\n                    : 'auto'\r\n                : 'none'} onLayout={this.handleLayout}>\r\n          <Animated.View style={[styles.barContent, { backgroundColor }]}>\r\n            <SafeAreaView forceInset={{ top: 'never', bottom: 'always' }} style={[styles.items, { maxWidth: maxTabBarWidth }]}>\r\n              {shifting ? (<Animated.View pointerEvents=\"none\" style={[\r\n                styles.ripple,\r\n                {\r\n                    // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\r\n                    // We need to move it from the top to center of the navigation bar and from the left to the active tab.\r\n                    top: (BAR_HEIGHT - rippleSize) / 2,\r\n                    left: tabWidth * (navigationState.index + 0.5) -\r\n                        rippleSize / 2,\r\n                    height: rippleSize,\r\n                    width: rippleSize,\r\n                    borderRadius: rippleSize / 2,\r\n                    backgroundColor: getColor({\r\n                        route: routes[navigationState.index],\r\n                    }),\r\n                    transform: [\r\n                        {\r\n                            // Scale to twice the size  to ensure it covers the whole navigation bar\r\n                            scale: ripple.interpolate({\r\n                                inputRange: [0, 1],\r\n                                outputRange: [0, 8],\r\n                            }),\r\n                        },\r\n                    ],\r\n                    opacity: ripple.interpolate({\r\n                        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\r\n                        outputRange: [0, 0, 1, 1],\r\n                    }),\r\n                },\r\n            ]}/>) : null}\r\n              {routes.map((route, index) => {\r\n                const focused = navigationState.index === index;\r\n                const active = tabs[index];\r\n                // Scale the label up\r\n                const scale = labeled && shifting\r\n                    ? active.interpolate({\r\n                        inputRange: [0, 1],\r\n                        outputRange: [0.5, 1],\r\n                    })\r\n                    : 1;\r\n                // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\r\n                const translateY = labeled\r\n                    ? shifting\r\n                        ? active.interpolate({\r\n                            inputRange: [0, 1],\r\n                            outputRange: [7, 0],\r\n                        })\r\n                        : 0\r\n                    : 7;\r\n                // We render the active icon and label on top of inactive ones and cross-fade them on change.\r\n                // This trick gives the illusion that we are animating between active and inactive colors.\r\n                // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\r\n                const activeOpacity = active;\r\n                const inactiveOpacity = active.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [1, 0],\r\n                });\r\n                const badge = getBadge({ route });\r\n                return renderTouchable({\r\n                    key: route.key,\r\n                    route,\r\n                    borderless: true,\r\n                    centered: true,\r\n                    rippleColor: touchColor,\r\n                    onPress: () => this.handleTabPress(index),\r\n                    testID: getTestID({ route }),\r\n                    accessibilityLabel: getAccessibilityLabel({ route }),\r\n                    accessibilityTraits: focused\r\n                        ? ['button', 'selected']\r\n                        : 'button',\r\n                    accessibilityComponentType: 'button',\r\n                    accessibilityRole: 'button',\r\n                    accessibilityStates: ['selected'],\r\n                    style: styles.item,\r\n                    children: (<View pointerEvents=\"none\">\r\n                      <Animated.View style={[\r\n                        styles.iconContainer,\r\n                        { transform: [{ translateY }] },\r\n                    ]}>\r\n                        <Animated.View style={[\r\n                        styles.iconWrapper,\r\n                        { opacity: activeOpacity },\r\n                    ]}>\r\n                          {renderIcon ? (renderIcon({\r\n                        route,\r\n                        focused: true,\r\n                        color: activeTintColor,\r\n                    })) : (<Icon source={route.icon} color={activeTintColor} size={24}/>)}\r\n                        </Animated.View>\r\n                        <Animated.View style={[\r\n                        styles.iconWrapper,\r\n                        { opacity: inactiveOpacity },\r\n                    ]}>\r\n                          {renderIcon ? (renderIcon({\r\n                        route,\r\n                        focused: false,\r\n                        color: inactiveTintColor,\r\n                    })) : (<Icon source={route.icon} color={inactiveTintColor} size={24}/>)}\r\n                        </Animated.View>\r\n                        <View style={[\r\n                        styles.badgeContainer,\r\n                        {\r\n                            right: (badge != null && typeof badge !== 'boolean'\r\n                                ? String(badge).length * -2\r\n                                : 0) - 2,\r\n                        },\r\n                    ]}>\r\n                          {typeof badge === 'boolean' ? (<Badge visible={badge} size={8}/>) : (<Badge visible={badge != null} size={16}>\r\n                              {badge}\r\n                            </Badge>)}\r\n                        </View>\r\n                      </Animated.View>\r\n                      {labeled ? (<Animated.View style={[\r\n                        styles.labelContainer,\r\n                        { transform: [{ scale }] },\r\n                    ]}>\r\n                          <Animated.View style={[\r\n                        styles.labelWrapper,\r\n                        { opacity: activeOpacity },\r\n                    ]}>\r\n                            {renderLabel ? (renderLabel({\r\n                        route,\r\n                        focused: true,\r\n                        color: activeTintColor,\r\n                    })) : (<Text style={[\r\n                        styles.label,\r\n                        { color: activeTintColor },\r\n                    ]}>\r\n                                {getLabelText({ route })}\r\n                              </Text>)}\r\n                          </Animated.View>\r\n                          {shifting ? null : (<Animated.View style={[\r\n                        styles.labelWrapper,\r\n                        { opacity: inactiveOpacity },\r\n                    ]}>\r\n                              {renderLabel ? (renderLabel({\r\n                        route,\r\n                        focused: false,\r\n                        color: inactiveTintColor,\r\n                    })) : (<Text style={[\r\n                        styles.label,\r\n                        { color: inactiveTintColor },\r\n                    ]}>\r\n                                  {getLabelText({ route })}\r\n                                </Text>)}\r\n                            </Animated.View>)}\r\n                        </Animated.View>) : (<View style={styles.labelContainer}/>)}\r\n                    </View>),\r\n                });\r\n            })}\r\n            </SafeAreaView>\r\n          </Animated.View>\r\n        </Surface>\r\n      </View>);\r\n        }\r\n    }\r\n    BottomNavigation.defaultProps = {\r\n        labeled: true,\r\n        keyboardHidesNavigationBar: true,\r\n    };\r\n    return BottomNavigation;\r\n})();\r\nexport default withTheme(BottomNavigation);\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        overflow: 'hidden',\r\n    },\r\n    content: {\r\n        flex: 1,\r\n    },\r\n    bar: {\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        elevation: 4,\r\n    },\r\n    barContent: {\r\n        alignItems: 'center',\r\n        overflow: 'hidden',\r\n    },\r\n    items: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n    },\r\n    item: {\r\n        flex: 1,\r\n        // Top padding is 6 and bottom padding is 10\r\n        // The extra 4dp bottom padding is offset by label's height\r\n        paddingVertical: 6,\r\n    },\r\n    ripple: {\r\n        position: 'absolute',\r\n    },\r\n    iconContainer: {\r\n        height: 24,\r\n        width: 24,\r\n        marginTop: 2,\r\n        marginHorizontal: 12,\r\n        alignSelf: 'center',\r\n    },\r\n    iconWrapper: {\r\n        ...StyleSheet.absoluteFillObject,\r\n        alignItems: 'center',\r\n    },\r\n    labelContainer: {\r\n        height: 16,\r\n        paddingBottom: 2,\r\n    },\r\n    labelWrapper: {\r\n        ...StyleSheet.absoluteFillObject,\r\n    },\r\n    label: {\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        backgroundColor: 'transparent',\r\n        ...(Platform.OS === 'web'\r\n            ? {\r\n                whiteSpace: 'nowrap',\r\n            }\r\n            : null),\r\n    },\r\n    badgeContainer: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: -2,\r\n    },\r\n});\r\n"],"file":"BottomNavigation.js"}