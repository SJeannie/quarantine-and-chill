{"version":3,"sources":["../../../../src/paper/components/RadioButton/RadioButtonGroup.js"],"names":["RadioButtonContext","React","createContext","RadioButtonGroup","props","value","onValueChange","children","Component","displayName"],"mappings":"6uBAAA,oD,s1BACO,GAAMA,CAAAA,kBAAkB,CAAGC,KAAK,CAACC,aAAN,CAAoB,IAApB,CAA3B,C,8CAmCP,GAAIC,CAAAA,gBAAgB,CAAkB,UAAM,IAClCA,CAAAA,gBADkC,sUAE3B,iBACsC,KAAKC,KAD3C,CACGC,KADH,aACGA,KADH,CACUC,aADV,aACUA,aADV,CACyBC,QADzB,aACyBA,QADzB,CAEL,MAAQ,qBAAC,kBAAD,CAAoB,QAApB,EAA6B,KAAK,CAAE,CAAEF,KAAK,CAALA,KAAF,CAASC,aAAa,CAAbA,aAAT,CAApC,6EACXC,QADW,CAAR,CAGH,CAPmC,8BACTN,KAAK,CAACO,SADG,EASxCL,gBAAgB,CAACM,WAAjB,CAA+B,mBAA/B,CACA,MAAON,CAAAA,gBAAP,CACH,CAXoC,EAArC,C,aAYeA,gB","sourcesContent":["import * as React from 'react';\r\nexport const RadioButtonContext = React.createContext(null);\r\n/**\r\n * Radio button group allows to control a group of radio buttons.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { RadioButton, Text } from '../../';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     value: 'first',\r\n *   };\r\n *\r\n *   render() {\r\n *     return(\r\n *       <RadioButton.Group\r\n *         onValueChange={value => this.setState({ value })}\r\n *         value={this.state.value}\r\n *       >\r\n *         <View>\r\n *           <Text>First</Text>\r\n *           <RadioButton value=\"first\" />\r\n *         </View>\r\n *         <View>\r\n *           <Text>Second</Text>\r\n *           <RadioButton value=\"second\" />\r\n *         </View>\r\n *       </RadioButton.Group>\r\n *     )\r\n *   }\r\n * }\r\n *```\r\n */\r\nlet RadioButtonGroup = /** @class */ (() => {\r\n    class RadioButtonGroup extends React.Component {\r\n        render() {\r\n            const { value, onValueChange, children } = this.props;\r\n            return (<RadioButtonContext.Provider value={{ value, onValueChange }}>\r\n        {children}\r\n      </RadioButtonContext.Provider>);\r\n        }\r\n    }\r\n    RadioButtonGroup.displayName = 'RadioButton.Group';\r\n    return RadioButtonGroup;\r\n})();\r\nexport default RadioButtonGroup;\r\n"],"file":"RadioButtonGroup.js"}