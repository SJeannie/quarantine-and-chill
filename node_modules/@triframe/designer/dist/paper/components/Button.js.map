{"version":3,"sources":["../../../src/paper/components/Button.js"],"names":["Button","arguments","state","elevation","Animated","Value","props","mode","handlePressIn","scale","theme","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","disabled","compact","dark","loading","icon","buttonColor","color","children","uppercase","accessibilityLabel","onPress","style","contentStyle","labelStyle","testID","rest","colors","roundness","font","fonts","medium","backgroundColor","borderColor","textColor","borderWidth","white","black","alpha","rgb","string","primary","StyleSheet","hairlineWidth","isDark","isLight","rippleColor","buttonStyle","borderRadius","touchableStyle","flatten","customLabelColor","customLabelSize","fontSize","textStyle","iconOnly","length","styles","button","flex","content","marginLeft","marginRight","label","compactLabel","uppercaseLabel","React","Component","defaultProps","create","minWidth","borderStyle","flexDirection","alignItems","justifyContent","minHeight","textAlign","letterSpacing","marginVertical","marginHorizontal","textTransform"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Animated, View, StyleSheet, } from 'react-native';\r\nimport color from 'color';\r\nimport ActivityIndicator from './ActivityIndicator';\r\nimport Icon from './Icon';\r\nimport Surface from './Surface';\r\nimport Text from './Typography/Text';\r\nimport TouchableRipple from './TouchableRipple';\r\nimport { black, white } from '../styles/colors';\r\nimport { withTheme } from '../core/theming';\r\n/**\r\n * A button is component that the user can press to trigger an action.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img src=\"screenshots/button-1.png\" />\r\n *     <figcaption>Text button</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/button-2.png\" />\r\n *     <figcaption>Outlined button</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/button-3.png\" />\r\n *     <figcaption>Contained button</figcaption>\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Button } from '../';\r\n *\r\n * const MyComponent = () => (\r\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\r\n *     Press me\r\n *   </Button>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nlet Button = /** @class */ (() => {\r\n    class Button extends React.Component {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.state = {\r\n                elevation: new Animated.Value(this.props.mode === 'contained' ? 2 : 0),\r\n            };\r\n            this.handlePressIn = () => {\r\n                if (this.props.mode === 'contained') {\r\n                    const { scale } = this.props.theme.animation;\r\n                    Animated.timing(this.state.elevation, {\r\n                        toValue: 8,\r\n                        duration: 200 * scale,\r\n                        useNativeDriver: false,\r\n                    }).start();\r\n                }\r\n            };\r\n            this.handlePressOut = () => {\r\n                if (this.props.mode === 'contained') {\r\n                    const { scale } = this.props.theme.animation;\r\n                    Animated.timing(this.state.elevation, {\r\n                        toValue: 2,\r\n                        duration: 150 * scale,\r\n                        useNativeDriver: false,\r\n                    }).start();\r\n                }\r\n            };\r\n        }\r\n        render() {\r\n            const { disabled, compact, mode, dark, loading, icon, color: buttonColor, children, uppercase, accessibilityLabel, onPress, style, theme, contentStyle, labelStyle, testID, ...rest } = this.props;\r\n            const { colors, roundness } = theme;\r\n            const font = theme.fonts.medium;\r\n            let backgroundColor, borderColor, textColor, borderWidth;\r\n            if (mode === 'contained') {\r\n                if (disabled) {\r\n                    backgroundColor = color(theme.dark ? white : black)\r\n                        .alpha(0.12)\r\n                        .rgb()\r\n                        .string();\r\n                }\r\n                else if (buttonColor) {\r\n                    backgroundColor = buttonColor;\r\n                }\r\n                else {\r\n                    backgroundColor = colors.primary;\r\n                }\r\n            }\r\n            else {\r\n                backgroundColor = 'transparent';\r\n            }\r\n            if (mode === 'outlined') {\r\n                borderColor = color(theme.dark ? white : black)\r\n                    .alpha(0.29)\r\n                    .rgb()\r\n                    .string();\r\n                borderWidth = StyleSheet.hairlineWidth;\r\n            }\r\n            else {\r\n                borderColor = 'transparent';\r\n                borderWidth = 0;\r\n            }\r\n            if (disabled) {\r\n                textColor = color(theme.dark ? white : black)\r\n                    .alpha(0.32)\r\n                    .rgb()\r\n                    .string();\r\n            }\r\n            else if (mode === 'contained') {\r\n                let isDark;\r\n                if (typeof dark === 'boolean') {\r\n                    isDark = dark;\r\n                }\r\n                else {\r\n                    isDark =\r\n                        backgroundColor === 'transparent'\r\n                            ? false\r\n                            : !color(backgroundColor).isLight();\r\n                }\r\n                textColor = isDark ? white : black;\r\n            }\r\n            else if (buttonColor) {\r\n                textColor = buttonColor;\r\n            }\r\n            else {\r\n                textColor = colors.primary;\r\n            }\r\n            const rippleColor = color(textColor)\r\n                .alpha(0.32)\r\n                .rgb()\r\n                .string();\r\n            const buttonStyle = {\r\n                backgroundColor,\r\n                borderColor,\r\n                borderWidth,\r\n                borderRadius: roundness,\r\n            };\r\n            const touchableStyle = {\r\n                borderRadius: style\r\n                    ? StyleSheet.flatten(style).borderRadius || roundness\r\n                    : roundness,\r\n            };\r\n            const { color: customLabelColor, fontSize: customLabelSize } = StyleSheet.flatten(labelStyle) || {};\r\n            const textStyle = { color: textColor, ...font };\r\n            const elevation = disabled || mode !== 'contained' ? 0 : this.state.elevation;\r\n            let iconOnly = !children || !children.length\r\n            return (<Surface {...rest} style={[\r\n                styles.button,\r\n                compact && styles.compact,\r\n                { elevation },\r\n                buttonStyle,\r\n                style,\r\n            ]}>\r\n        <TouchableRipple  borderless delayPressIn={0} onPress={onPress} onPressIn={this.handlePressIn} onPressOut={this.handlePressOut} accessibilityLabel={accessibilityLabel} accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'} accessibilityComponentType=\"button\" accessibilityRole=\"button\" accessibilityStates={disabled ? ['disabled'] : []} disabled={disabled} rippleColor={rippleColor} style={[touchableStyle, { flex: 1}]} testID={testID}>\r\n          <View style={[styles.content, contentStyle]}>\r\n            {icon && loading !== true ? (<View style={[styles.icon, iconOnly && { marginLeft: 'auto', marginRight: 'auto' } ]}>\r\n                <Icon source={icon} size={customLabelSize || 16} color={customLabelColor || textColor}/>\r\n              </View>) : null}\r\n            {loading ? (<ActivityIndicator size={customLabelSize || 16} color={customLabelColor || textColor} style={styles.icon}/>) : null}\r\n            {!iconOnly && <Text numberOfLines={1} style={[\r\n                styles.label,\r\n                compact && styles.compactLabel,\r\n                uppercase && styles.uppercaseLabel,\r\n                textStyle,\r\n                font,\r\n                labelStyle,\r\n            ]}>\r\n              {children}\r\n            </Text>}\r\n          </View>\r\n        </TouchableRipple>\r\n      </Surface>);\r\n        }\r\n    }\r\n    Button.defaultProps = {\r\n        mode: 'text',\r\n        uppercase: true,\r\n    };\r\n    return Button;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        minWidth: 64,\r\n        borderStyle: 'solid',\r\n        // flex: 1\r\n    },\r\n    compact: {\r\n        minWidth: 'auto',\r\n    },\r\n    content: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex:1,\r\n        minHeight: 40\r\n    },\r\n    icon: {\r\n        marginLeft: 12,\r\n        marginRight: -4,\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        letterSpacing: 1,\r\n        marginVertical: 9,\r\n        marginHorizontal: 16,\r\n    },\r\n    compactLabel: {\r\n        marginHorizontal: 8,\r\n    },\r\n    uppercaseLabel: {\r\n        textTransform: 'uppercase',\r\n    },\r\n});\r\nexport default withTheme(Button);\r\n"],"file":"Button.js"}