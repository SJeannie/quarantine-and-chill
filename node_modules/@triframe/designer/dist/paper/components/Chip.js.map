{"version":3,"sources":["../../../src/paper/components/Chip.js"],"names":["Chip","arguments","state","elevation","Animated","Value","handlePressIn","scale","props","theme","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","mode","children","icon","avatar","selected","disabled","accessibilityLabel","onPress","onLongPress","onClose","textStyle","style","testID","selectedColor","rest","dark","colors","StyleSheet","flatten","backgroundColor","surface","borderRadius","borderColor","undefined","white","black","alpha","rgb","string","textColor","text","iconColor","selectedBackgroundColor","lighten","darken","underlayColor","fade","accessibilityTraits","accessibilityStates","push","styles","container","Platform","OS","content","avatarWrapper","opacity","React","isValidElement","cloneElement","avatarSelected","fonts","regular","color","marginRight","marginLeft","Component","defaultProps","create","borderWidth","hairlineWidth","borderStyle","flexDirection","alignItems","paddingHorizontal","padding","minHeight","lineHeight","textAlignVertical","marginVertical","width","height","position","top","left"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Animated, Platform, StyleSheet, TouchableWithoutFeedback, View, } from 'react-native';\r\nimport color from 'color';\r\nimport Icon from './Icon';\r\nimport Surface from './Surface';\r\nimport Text from './Typography/Text';\r\nimport TouchableRipple from './TouchableRipple';\r\nimport { withTheme } from '../core/theming';\r\nimport { black, white } from '../styles/colors';\r\n/**\r\n * Chips can be used to display entities in small blocks.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"medium\" src=\"screenshots/chip-1.png\" />\r\n *     <figcaption>Flat chip</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img class=\"medium\" src=\"screenshots/chip-2.png\" />\r\n *     <figcaption>Outlined chip</figcaption>\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Chip } from '../';\r\n *\r\n * const MyComponent = () => (\r\n *   <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nlet Chip = /** @class */ (() => {\r\n    class Chip extends React.Component {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.state = {\r\n                elevation: new Animated.Value(0),\r\n            };\r\n            this.handlePressIn = () => {\r\n                const { scale } = this.props.theme.animation;\r\n                Animated.timing(this.state.elevation, {\r\n                    toValue: 4,\r\n                    duration: 200 * scale,\r\n                    useNativeDriver: false,\r\n                }).start();\r\n            };\r\n            this.handlePressOut = () => {\r\n                const { scale } = this.props.theme.animation;\r\n                Animated.timing(this.state.elevation, {\r\n                    toValue: 0,\r\n                    duration: 150 * scale,\r\n                    useNativeDriver: false,\r\n                }).start();\r\n            };\r\n        }\r\n        render() {\r\n            const { mode, children, icon, avatar, selected, disabled, accessibilityLabel, onPress, onLongPress, onClose, textStyle, style, theme, testID, selectedColor, ...rest } = this.props;\r\n            const { dark, colors } = theme;\r\n            const { backgroundColor = mode === 'outlined'\r\n                ? colors.surface\r\n                : dark\r\n                    ? '#383838'\r\n                    : '#ebebeb', borderRadius = 16, } = StyleSheet.flatten(style) || {};\r\n            const borderColor = mode === 'outlined'\r\n                ? color(selectedColor !== undefined\r\n                    ? selectedColor\r\n                    : color(dark ? white : black))\r\n                    .alpha(0.29)\r\n                    .rgb()\r\n                    .string()\r\n                : backgroundColor;\r\n            const textColor = disabled\r\n                ? colors.disabled\r\n                : color(selectedColor !== undefined ? selectedColor : colors.text)\r\n                    .alpha(0.87)\r\n                    .rgb()\r\n                    .string();\r\n            const iconColor = disabled\r\n                ? colors.disabled\r\n                : color(selectedColor !== undefined ? selectedColor : colors.text)\r\n                    .alpha(0.54)\r\n                    .rgb()\r\n                    .string();\r\n            const selectedBackgroundColor = (dark\r\n                ? color(backgroundColor).lighten(mode === 'outlined' ? 0.2 : 0.4)\r\n                : color(backgroundColor).darken(mode === 'outlined' ? 0.08 : 0.2))\r\n                .rgb()\r\n                .string();\r\n            const underlayColor = selectedColor\r\n                ? color(selectedColor)\r\n                    .fade(0.5)\r\n                    .rgb()\r\n                    .string()\r\n                : selectedBackgroundColor;\r\n            const accessibilityTraits = ['button'];\r\n            const accessibilityStates = [];\r\n            if (selected) {\r\n                accessibilityTraits.push('selected');\r\n                accessibilityStates.push('selected');\r\n            }\r\n            if (disabled) {\r\n                accessibilityTraits.push('disabled');\r\n                accessibilityStates.push('disabled');\r\n            }\r\n            return (<Surface style={[\r\n                styles.container,\r\n                {\r\n                    elevation: Platform.OS === 'android' ? this.state.elevation : 0,\r\n                    backgroundColor: selected\r\n                        ? selectedBackgroundColor\r\n                        : backgroundColor,\r\n                    borderColor,\r\n                    borderRadius,\r\n                },\r\n                style,\r\n            ]} {...rest}>\r\n        <TouchableRipple borderless delayPressIn={0} style={{ borderRadius }} onPress={onPress} onLongPress={onLongPress} onPressIn={this.handlePressIn} onPressOut={this.handlePressOut} underlayColor={underlayColor} disabled={disabled} accessibilityLabel={accessibilityLabel} accessibilityTraits={accessibilityTraits} accessibilityComponentType=\"button\" accessibilityRole=\"button\" accessibilityStates={accessibilityStates} testID={testID}>\r\n          <View style={styles.content}>\r\n            {avatar && !icon ? (<View style={[styles.avatarWrapper, disabled && { opacity: 0.26 }]}>\r\n                {React.isValidElement(avatar)\r\n                ? /* $FlowFixMe */\r\n                    React.cloneElement(avatar, {\r\n                        /* $FlowFixMe */\r\n                        style: [styles.avatar, avatar.props.style],\r\n                    })\r\n                : avatar}\r\n              </View>) : null}\r\n            {icon || selected ? (<View style={[\r\n                styles.icon,\r\n                avatar ? [styles.avatar, styles.avatarSelected] : null,\r\n            ]}>\r\n                <Icon source={icon || 'check'} color={avatar ? white : iconColor} size={18}/>\r\n              </View>) : null}\r\n            <Text numberOfLines={1} style={[\r\n                styles.text,\r\n                {\r\n                    ...theme.fonts.regular,\r\n                    color: textColor,\r\n                    marginRight: onClose ? 4 : 8,\r\n                    marginLeft: avatar || icon || selected ? 4 : 8,\r\n                },\r\n                textStyle,\r\n            ]}>\r\n              {children}\r\n            </Text>\r\n            {onClose ? (<TouchableWithoutFeedback onPress={onClose} accessibilityTraits=\"button\" accessibilityComponentType=\"button\">\r\n                <View style={styles.icon}>\r\n                  <Icon source=\"close-circle\" size={16} color={iconColor}/>\r\n                </View>\r\n              </TouchableWithoutFeedback>) : null}\r\n          </View>\r\n        </TouchableRipple>\r\n      </Surface>);\r\n        }\r\n    }\r\n    Chip.defaultProps = {\r\n        mode: 'flat',\r\n        disabled: false,\r\n        selected: false,\r\n    };\r\n    return Chip;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderWidth: StyleSheet.hairlineWidth,\r\n        borderStyle: 'solid',\r\n    },\r\n    content: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 4,\r\n    },\r\n    icon: {\r\n        padding: 4,\r\n    },\r\n    text: {\r\n        minHeight: 24,\r\n        lineHeight: 24,\r\n        textAlignVertical: 'center',\r\n        marginVertical: 4,\r\n    },\r\n    avatar: {\r\n        width: 24,\r\n        height: 24,\r\n        borderRadius: 12,\r\n    },\r\n    avatarWrapper: {\r\n        marginRight: 4,\r\n    },\r\n    avatarSelected: {\r\n        position: 'absolute',\r\n        top: 4,\r\n        left: 4,\r\n        backgroundColor: 'rgba(0, 0, 0, .29)',\r\n    },\r\n});\r\nexport default withTheme(Chip);\r\n"],"file":"Chip.js"}