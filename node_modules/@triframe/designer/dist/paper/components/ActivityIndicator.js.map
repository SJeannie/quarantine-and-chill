{"version":3,"sources":["../../../src/paper/components/ActivityIndicator.js"],"names":["DURATION","ActivityIndicator","arguments","state","timer","Animated","Value","fade","props","animating","hidesWhenStopped","rotation","undefined","startRotation","scale","theme","animation","timing","duration","toValue","isInteraction","useNativeDriver","start","setValue","loop","stopRotation","stop","easing","Easing","linear","Platform","OS","prevProps","bind","indicatorColor","color","indicatorSize","size","style","rest","colors","primary","frames","bezier","containerStyle","width","height","overflow","styles","container","opacity","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","layer","React","Component","defaultProps","StyleSheet","create","justifyContent","alignItems","absoluteFillObject"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Animated, Easing, Platform, StyleSheet, View, } from 'react-native';\r\nimport { withTheme } from '../core/theming';\r\nconst DURATION = 2400;\r\n/**\r\n * Activity indicator is used to present progress of some activity in the app.\r\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { ActivityIndicator, Colors } from '../';\r\n *\r\n * const MyComponent = () => (\r\n *   <ActivityIndicator animating={true} color={Colors.red800} />\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nlet ActivityIndicator = /** @class */ (() => {\r\n    class ActivityIndicator extends React.Component {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.state = {\r\n                timer: new Animated.Value(0),\r\n                fade: new Animated.Value(!this.props.animating && this.props.hidesWhenStopped ? 0 : 1),\r\n            };\r\n            this.rotation = undefined;\r\n            this.startRotation = () => {\r\n                const { fade, timer } = this.state;\r\n                const { scale } = this.props.theme.animation;\r\n                // Show indicator\r\n                Animated.timing(fade, {\r\n                    duration: 200 * scale,\r\n                    toValue: 1,\r\n                    isInteraction: false,\r\n                    useNativeDriver: true,\r\n                }).start();\r\n                // Circular animation in loop\r\n                if (this.rotation) {\r\n                    timer.setValue(0);\r\n                    // $FlowFixMe\r\n                    Animated.loop(this.rotation).start();\r\n                }\r\n            };\r\n            this.stopRotation = () => {\r\n                if (this.rotation) {\r\n                    this.rotation.stop();\r\n                }\r\n            };\r\n        }\r\n        componentDidMount() {\r\n            const { animating } = this.props;\r\n            const { timer } = this.state;\r\n            // Circular animation in loop\r\n            this.rotation = Animated.timing(timer, {\r\n                duration: DURATION,\r\n                easing: Easing.linear,\r\n                // Animated.loop does not work if useNativeDriver is true on web\r\n                useNativeDriver: Platform.OS !== 'web',\r\n                toValue: 1,\r\n                isInteraction: false,\r\n            });\r\n            if (animating) {\r\n                this.startRotation();\r\n            }\r\n        }\r\n        componentDidUpdate(prevProps) {\r\n            const { animating, hidesWhenStopped, theme: { animation: { scale }, }, } = this.props;\r\n            const { fade } = this.state;\r\n            if (animating !== prevProps.animating) {\r\n                if (animating) {\r\n                    this.startRotation();\r\n                }\r\n                else if (hidesWhenStopped) {\r\n                    // Hide indicator first and then stop rotation\r\n                    Animated.timing(fade, {\r\n                        duration: 200 * scale,\r\n                        toValue: 0,\r\n                        useNativeDriver: true,\r\n                        isInteraction: false,\r\n                    }).start(this.stopRotation.bind(this));\r\n                }\r\n                else {\r\n                    this.stopRotation();\r\n                }\r\n            }\r\n        }\r\n        render() {\r\n            const { fade, timer } = this.state;\r\n            const { \r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            animating, color: indicatorColor, \r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            hidesWhenStopped, size: indicatorSize, style, theme, ...rest } = this.props;\r\n            const color = indicatorColor || theme.colors.primary;\r\n            const size = typeof indicatorSize === 'string'\r\n                ? indicatorSize === 'small'\r\n                    ? 24\r\n                    : 48\r\n                : indicatorSize\r\n                    ? indicatorSize\r\n                    : 24;\r\n            const frames = (60 * DURATION) / 1000;\r\n            const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\r\n            const containerStyle = {\r\n                width: size,\r\n                height: size / 2,\r\n                overflow: 'hidden',\r\n            };\r\n            return (<View style={[styles.container, style]} {...rest}>\r\n        <Animated.View style={[{ width: size, height: size, opacity: fade }]}>\r\n          {[0, 1].map(index => {\r\n                // Thanks to https://github.com/n4kz/react-native-indicators for the great work\r\n                const inputRange = Array.from(new Array(frames), (_, frameIndex) => frameIndex / (frames - 1));\r\n                const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\r\n                    let progress = (2 * frameIndex) / (frames - 1);\r\n                    const rotation = index ? +(360 - 15) : -(180 - 15);\r\n                    if (progress > 1.0) {\r\n                        progress = 2.0 - progress;\r\n                    }\r\n                    const direction = index ? -1 : +1;\r\n                    return `${direction * (180 - 30) * easing(progress) +\r\n                        rotation}deg`;\r\n                });\r\n                const layerStyle = {\r\n                    width: size,\r\n                    height: size,\r\n                    transform: [\r\n                        {\r\n                            rotate: timer.interpolate({\r\n                                inputRange: [0, 1],\r\n                                outputRange: [\r\n                                    `${0 + 30 + 15}deg`,\r\n                                    `${2 * 360 + 30 + 15}deg`,\r\n                                ],\r\n                            }),\r\n                        },\r\n                    ],\r\n                };\r\n                const viewportStyle = {\r\n                    width: size,\r\n                    height: size,\r\n                    transform: [\r\n                        {\r\n                            translateY: index ? -size / 2 : 0,\r\n                        },\r\n                        {\r\n                            rotate: timer.interpolate({ inputRange, outputRange }),\r\n                        },\r\n                    ],\r\n                };\r\n                const offsetStyle = index ? { top: size / 2 } : null;\r\n                const lineStyle = {\r\n                    width: size,\r\n                    height: size,\r\n                    borderColor: color,\r\n                    borderWidth: size / 10,\r\n                    borderRadius: size / 2,\r\n                };\r\n                return (<Animated.View key={index} style={[styles.layer]}>\r\n                <Animated.View style={layerStyle}>\r\n                  <Animated.View style={[containerStyle, offsetStyle]} collapsable={false}>\r\n                    <Animated.View style={viewportStyle}>\r\n                      <Animated.View style={containerStyle} collapsable={false}>\r\n                        <Animated.View style={lineStyle}/>\r\n                      </Animated.View>\r\n                    </Animated.View>\r\n                  </Animated.View>\r\n                </Animated.View>\r\n              </Animated.View>);\r\n            })}\r\n        </Animated.View>\r\n      </View>);\r\n        }\r\n    }\r\n    ActivityIndicator.defaultProps = {\r\n        animating: true,\r\n        size: 'small',\r\n        hidesWhenStopped: true,\r\n    };\r\n    return ActivityIndicator;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    layer: {\r\n        ...StyleSheet.absoluteFillObject,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n});\r\nexport default withTheme(ActivityIndicator);\r\n"],"file":"ActivityIndicator.js"}