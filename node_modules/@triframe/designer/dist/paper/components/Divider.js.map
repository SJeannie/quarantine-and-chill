{"version":3,"sources":["../../../src/paper/components/Divider.js"],"names":["Divider","props","inset","style","theme","rest","isDarkTheme","dark","styles","light","React","Component","StyleSheet","create","backgroundColor","black","alpha","rgb","string","height","hairlineWidth","white","marginLeft"],"mappings":"k5BAAA,oDACA,oDACA,yCACA,wCACA,wC,m0BA4BMA,CAAAA,O,yRACO,iBACoC,KAAKC,KADzC,CACGC,KADH,aACGA,KADH,CACUC,KADV,aACUA,KADV,CACiBC,KADjB,aACiBA,KADjB,CAC2BC,IAD3B,iFAESC,CAAAA,WAFT,CAEyBF,KAFzB,CAEGG,IAFH,CAGL,MAAQ,qBAAC,iBAAD,0BAAUF,IAAV,EAAgB,KAAK,CAAE,CAC3BC,WAAW,CAAGE,MAAM,CAACD,IAAV,CAAiBC,MAAM,CAACC,KADR,CAE3BP,KAAK,EAAIM,MAAM,CAACN,KAFW,CAG3BC,KAH2B,CAAvB,8EAAR,CAKH,C,qBATiBO,KAAK,CAACC,S,EAW5B,GAAMH,CAAAA,MAAM,CAAGI,wBAAWC,MAAX,CAAkB,CAC7BJ,KAAK,CAAE,CACHK,eAAe,CAAE,mBAAMC,aAAN,EACZC,KADY,CACN,IADM,EAEZC,GAFY,GAGZC,MAHY,EADd,CAKHC,MAAM,CAAEP,wBAAWQ,aALhB,CADsB,CAQ7Bb,IAAI,CAAE,CACFO,eAAe,CAAE,mBAAMO,aAAN,EACZL,KADY,CACN,IADM,EAEZC,GAFY,GAGZC,MAHY,EADf,CAKFC,MAAM,CAAEP,wBAAWQ,aALjB,CARuB,CAe7BlB,KAAK,CAAE,CACHoB,UAAU,CAAE,EADT,CAfsB,CAAlB,CAAf,C,aAmBe,uBAAUtB,OAAV,C","sourcesContent":["import * as React from 'react';\r\nimport color from 'color';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { withTheme } from '../core/theming';\r\nimport { black, white } from '../styles/colors';\r\n/**\r\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\r\n *\r\n * <div class=\"screenshots\">\r\n *  <figure>\r\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\r\n *  </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { Divider, Text } from '../';\r\n *\r\n * const MyComponent = () => (\r\n *   <View>\r\n *     <Text>Apple</Text>\r\n *     <Divider />\r\n *     <Text>Orange</Text>\r\n *     <Divider />\r\n *   </View>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nclass Divider extends React.Component {\r\n    render() {\r\n        const { inset, style, theme, ...rest } = this.props;\r\n        const { dark: isDarkTheme } = theme;\r\n        return (<View {...rest} style={[\r\n            isDarkTheme ? styles.dark : styles.light,\r\n            inset && styles.inset,\r\n            style,\r\n        ]}/>);\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    light: {\r\n        backgroundColor: color(black)\r\n            .alpha(0.12)\r\n            .rgb()\r\n            .string(),\r\n        height: StyleSheet.hairlineWidth,\r\n    },\r\n    dark: {\r\n        backgroundColor: color(white)\r\n            .alpha(0.12)\r\n            .rgb()\r\n            .string(),\r\n        height: StyleSheet.hairlineWidth,\r\n    },\r\n    inset: {\r\n        marginLeft: 72,\r\n    },\r\n});\r\nexport default withTheme(Divider);\r\n"],"file":"Divider.js"}