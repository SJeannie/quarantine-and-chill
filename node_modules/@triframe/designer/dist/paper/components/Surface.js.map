{"version":3,"sources":["../../../src/paper/components/Surface.js"],"names":["Surface","props","style","theme","rest","flattenedStyles","StyleSheet","flatten","elevation","isDarkTheme","dark","mode","colors","backgroundColor","surface","React","Component"],"mappings":"k5BAAA,oDACA,yCACA,gEACA,wCACA,kE,m0BA4CMA,CAAAA,O,yRACO,iBAC6B,KAAKC,KADlC,CACGC,KADH,aACGA,KADH,CACUC,KADV,aACUA,KADV,CACoBC,IADpB,sEAEL,GAAMC,CAAAA,eAAe,CAAGC,wBAAWC,OAAX,CAAmBL,KAAnB,GAA6B,EAArD,CAFK,0BAGqBG,eAHrB,CAGGG,SAHH,CAGGA,SAHH,gCAGe,CAHf,0BAISC,CAAAA,WAJT,CAIuCN,KAJvC,CAIGO,IAJH,CAIsBC,IAJtB,CAIuCR,KAJvC,CAIsBQ,IAJtB,CAI4BC,MAJ5B,CAIuCT,KAJvC,CAI4BS,MAJ5B,CAKL,MAAQ,qBAAC,qBAAD,CAAU,IAAV,0BAAmBR,IAAnB,EAAyB,KAAK,CAAE,CACpC,CACIS,eAAe,CAAEJ,WAAW,EAAIE,IAAI,GAAK,UAAxB,CACX,qBAAQH,SAAR,CAAmBI,MAAM,CAACE,OAA1B,CADW,CAEXF,MAAM,CAACE,OAHjB,CADoC,CAMpCN,SAAS,EAAI,oBAAOA,SAAP,CANuB,CAOpCN,KAPoC,CAAhC,8EAAR,CASH,C,qBAfiBa,KAAK,CAACC,S,eAiBb,uBAAUhB,OAAV,C","sourcesContent":["import * as React from 'react';\r\nimport { Animated, StyleSheet } from 'react-native';\r\nimport shadow from '../styles/shadow';\r\nimport { withTheme } from '../core/theming';\r\nimport overlay from '../styles/overlay';\r\n/**\r\n * Surface is a basic container that can give depth to an element with elevation shadow.\r\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\r\n * See [Dark Theme](https://callstack.github.io/'../'/theming.html#dark-theme) for more informations.\r\n * Overlay and/or shadow can be applied by specifying the `elevation` property both on Android and iOS.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img src=\"screenshots/surface-1.png\" />\r\n *   <img src=\"screenshots/surface-2.png\" />\r\n *   <img src=\"screenshots/surface-3.png\" />\r\n * </div>\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img src=\"screenshots/surface-dark-1.png\" />\r\n *   <img src=\"screenshots/surface-dark-2.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Surface, Text } from '../';\r\n * import { StyleSheet } from 'react-native';\r\n *\r\n * const MyComponent = () => (\r\n *   <Surface style={styles.surface}>\r\n *      <Text>Surface</Text>\r\n *   </Surface>\r\n * );\r\n *\r\n * export default MyComponent;\r\n *\r\n * const styles = StyleSheet.create({\r\n *   surface: {\r\n *     padding: 8,\r\n *     height: 80,\r\n *     width: 80,\r\n *     alignItems: 'center',\r\n *     justifyContent: 'center',\r\n *     elevation: 4,\r\n *   },\r\n * });\r\n * ```\r\n */\r\nclass Surface extends React.Component {\r\n    render() {\r\n        const { style, theme, ...rest } = this.props;\r\n        const flattenedStyles = StyleSheet.flatten(style) || {};\r\n        const { elevation = 4 } = flattenedStyles;\r\n        const { dark: isDarkTheme, mode, colors } = theme;\r\n        return (<Animated.View {...rest} style={[\r\n            {\r\n                backgroundColor: isDarkTheme && mode === 'adaptive'\r\n                    ? overlay(elevation, colors.surface)\r\n                    : colors.surface,\r\n            },\r\n            elevation && shadow(elevation),\r\n            style,\r\n        ]}/>);\r\n    }\r\n}\r\nexport default withTheme(Surface);\r\n"],"file":"Surface.js"}