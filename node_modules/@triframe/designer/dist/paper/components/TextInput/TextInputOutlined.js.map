{"version":3,"sources":["../../../../src/paper/components/TextInput/TextInputOutlined.js"],"names":["OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","props","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","render","multiline","parentState","innerRef","onFocus","onBlur","onChangeText","onLayoutAnimatedText","rest","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","height","backgroundColor","background","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","outlineColor","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","minHeight","paddingTop","paddingBottom","LabelBackground","ref","placeholderTextColor","underlineColorAndroid","input","color","textAlignVertical","React","Component","defaultProps","Outline","outline","borderRadius","roundness","borderWidth","borderColor","create","position","left","paddingHorizontal","right","top","bottom","flexGrow","margin","textAlign","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, TextInput as NativeTextInput, StyleSheet, I18nManager, Platform, } from 'react-native';\r\nimport color from 'color';\r\nimport InputLabel from './Label/InputLabel';\r\nimport LabelBackground from './Label/LabelBackground';\r\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, } from './constants';\r\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, interpolatePlaceholder, } from './helpers';\r\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\r\nconst LABEL_PADDING_TOP = 8;\r\nconst MIN_HEIGHT = 64;\r\nconst MIN_DENSE_HEIGHT = 48;\r\nconst INPUT_PADDING_HORIZONTAL = 14;\r\nlet TextInputOutlined = /** @class */ (() => {\r\n    class TextInputOutlined extends React.Component {\r\n        render() {\r\n            const { disabled, editable, label, error, selectionColor, \r\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n            underlineColor, dense, style, theme, render, multiline, parentState, innerRef, onFocus, onBlur, onChangeText, onLayoutAnimatedText, ...rest } = this.props;\r\n            const { colors, fonts } = theme;\r\n            const font = fonts.regular;\r\n            const hasActiveOutline = parentState.focused || error;\r\n            const { fontSize: fontSizeStyle, fontWeight, height, backgroundColor = colors.background, ...viewStyle } = (StyleSheet.flatten(style) || {});\r\n            const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\r\n            let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\r\n            if (disabled) {\r\n                inputTextColor = activeColor = color(colors.text)\r\n                    .alpha(0.54)\r\n                    .rgb()\r\n                    .string();\r\n                placeholderColor = outlineColor = colors.disabled;\r\n            }\r\n            else {\r\n                inputTextColor = colors.text;\r\n                activeColor = error ? colors.error : colors.primary;\r\n                placeholderColor = outlineColor = colors.placeholder;\r\n                errorColor = colors.error;\r\n            }\r\n            const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\r\n            const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\r\n            const labelWidth = parentState.labelLayout.width;\r\n            const labelHeight = parentState.labelLayout.height;\r\n            const labelHalfWidth = labelWidth / 2;\r\n            const labelHalfHeight = labelHeight / 2;\r\n            const baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) *\r\n                (labelHalfWidth -\r\n                    (labelScale * labelWidth) / 2 -\r\n                    (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\r\n            const minInputHeight = (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\r\n            const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\r\n            const topPosition = calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP);\r\n            if (height && typeof height !== 'number')\r\n                // eslint-disable-next-line\r\n                console.warn('Currently we support only numbers in height prop');\r\n            const paddingSettings = {\r\n                height: height ? +height : null,\r\n                labelHalfHeight,\r\n                offset: LABEL_PADDING_TOP,\r\n                multiline: multiline ? multiline : null,\r\n                dense: dense ? dense : null,\r\n                topPosition,\r\n                fontSize,\r\n                label,\r\n                scale: fontScale,\r\n                isAndroid: Platform.OS === 'android',\r\n                styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined),\r\n            };\r\n            const pad = calculatePadding(paddingSettings);\r\n            const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\r\n            const baseLabelTranslateY = -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\r\n            const placeholderOpacity = interpolatePlaceholder(parentState.labeled, hasActiveOutline);\r\n            const labelProps = {\r\n                label,\r\n                onLayoutAnimatedText,\r\n                placeholderOpacity,\r\n                error,\r\n                placeholderStyle: styles.placeholder,\r\n                baseLabelTranslateY,\r\n                baseLabelTranslateX,\r\n                font,\r\n                fontSize,\r\n                fontWeight,\r\n                labelScale,\r\n                wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\r\n                topPosition,\r\n                hasActiveOutline,\r\n                activeColor,\r\n                placeholderColor,\r\n                backgroundColor,\r\n                errorColor,\r\n            };\r\n            const minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\r\n            return (<View style={viewStyle}>\r\n        \r\n        <View>\r\n          <Outline theme={theme} hasActiveOutline={hasActiveOutline} activeColor={activeColor} outlineColor={outlineColor} backgroundColor={backgroundColor}/>\r\n          <View style={{\r\n                paddingTop: LABEL_PADDING_TOP,\r\n                paddingBottom: 0,\r\n                minHeight,\r\n            }}>\r\n            <InputLabel parentState={parentState} labelProps={labelProps} labelBackground={LabelBackground}/>\r\n\r\n            {render?.({\r\n                ...rest,\r\n                ref: innerRef,\r\n                onChangeText,\r\n                placeholder: label\r\n                    ? parentState.placeholder\r\n                    : this.props.placeholder,\r\n                placeholderTextColor: placeholderColor,\r\n                editable: !disabled && editable,\r\n                selectionColor: typeof selectionColor === 'undefined'\r\n                    ? activeColor\r\n                    : selectionColor,\r\n                onFocus,\r\n                onBlur,\r\n                underlineColorAndroid: 'transparent',\r\n                multiline,\r\n                style: [\r\n                    styles.input,\r\n                    !multiline || (multiline && height)\r\n                        ? { height: inputHeight }\r\n                        : {},\r\n                    paddingOut,\r\n                    {\r\n                        ...font,\r\n                        fontSize,\r\n                        fontWeight,\r\n                        color: inputTextColor,\r\n                        textAlignVertical: multiline ? 'top' : 'center',\r\n                    },\r\n                ],\r\n            })}\r\n          </View>\r\n        </View>\r\n      </View>);\r\n        }\r\n    }\r\n    TextInputOutlined.defaultProps = {\r\n        disabled: false,\r\n        error: false,\r\n        multiline: false,\r\n        editable: true,\r\n        render: (props) => <NativeTextInput {...props}/>,\r\n    };\r\n    return TextInputOutlined;\r\n})();\r\nexport default TextInputOutlined;\r\nconst Outline = ({ theme, hasActiveOutline, activeColor, outlineColor, backgroundColor, }) => (<View pointerEvents=\"none\" style={[\r\n    styles.outline,\r\n    // eslint-disable-next-line react-native/no-inline-styles\r\n    {\r\n        backgroundColor,\r\n        borderRadius: theme.roundness,\r\n        borderWidth: hasActiveOutline ? 2 : 1,\r\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\r\n    },\r\n]}/>);\r\nconst styles = StyleSheet.create({\r\n    placeholder: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        paddingHorizontal: INPUT_PADDING_HORIZONTAL,\r\n    },\r\n    outline: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 6,\r\n        bottom: 0,\r\n    },\r\n    input: {\r\n        flexGrow: 1,\r\n        paddingHorizontal: INPUT_PADDING_HORIZONTAL,\r\n        margin: 0,\r\n        textAlign: I18nManager.isRTL ? 'right' : 'left',\r\n        zIndex: 1,\r\n    },\r\n    inputOutlined: {\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n    },\r\n    inputOutlinedDense: {\r\n        paddingTop: 4,\r\n        paddingBottom: 4,\r\n    },\r\n});\r\n"],"file":"TextInputOutlined.js"}