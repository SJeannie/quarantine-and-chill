{"version":3,"sources":["../../../../src/paper/components/TextInput/helpers.js"],"names":["calculateLabelTopPosition","labelHeight","height","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","pad","label","paddingTop","paddingBottom","adjustPaddingFlat","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange"],"mappings":"0OAAO,GAAMA,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,WAAD,CAAkD,IAApCC,CAAAA,MAAoC,2DAA3B,CAA2B,IAAxBC,CAAAA,eAAwB,2DAAN,CAAM,CACvF,GAAMC,CAAAA,YAAY,CAAGF,MAAM,CAAG,CAAT,CAAaA,MAAb,CAAsB,CAA3C,CACA,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAW,CAACF,YAAY,CAAGH,WAAhB,EAA+B,CAA/B,CAAmCE,eAA9C,CAAP,CACH,CAHM,C,4DAIA,GAAMI,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACN,WAAD,CAAwC,IAA1BC,CAAAA,MAA0B,2DAAjB,CAAiB,IAAdM,CAAAA,SAAc,2CACxE,GAAMC,CAAAA,WAAW,CAAGP,MAAM,CAAG,CAAT,CAAaA,MAAb,CAAsBD,WAA1C,CACA,GAAIC,MAAM,CAAG,CAAb,CACI,MAAOA,CAAAA,MAAP,CACJ,MAAOO,CAAAA,WAAW,CAAGD,SAAd,CAA0BA,SAA1B,CAAsCC,WAA7C,CACH,CALM,C,kDAMA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,IAC/BT,CAAAA,MAD+B,CACDS,KADC,CAC/BT,MAD+B,kBACDS,KADC,CACvBC,SADuB,CACvBA,SADuB,2BACX,KADW,kBAEvC,GAAIC,CAAAA,MAAM,CAAG,CAAb,CACA,GAAID,SAAJ,CAAe,CACX,GAAIV,MAAM,EAAIU,SAAd,CAAyB,CACrBC,MAAM,CAAGC,wBAAwB,CAACH,KAAD,CAAjC,CACH,CAFD,IAGK,CACDE,MAAM,CAAGE,qBAAqB,CAACJ,KAAD,CAA9B,CACH,CACJ,CACD,MAAON,CAAAA,IAAI,CAACW,GAAL,CAAS,CAAT,CAAYH,MAAZ,CAAP,CACH,CAZM,C,0CAaP,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACH,KAAD,CAAW,IAChCM,CAAAA,KADgC,CACtBN,KADsB,CAChCM,KADgC,CAExC,MAAOA,CAAAA,KAAK,CAAG,EAAH,CAAQ,EAApB,CACH,CAHD,CAIA,GAAMF,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,MAA4E,IAAzEG,CAAAA,WAAyE,MAAzEA,WAAyE,CAA5DC,QAA4D,MAA5DA,QAA4D,CAAlDP,SAAkD,MAAlDA,SAAkD,CAAvCQ,KAAuC,MAAvCA,KAAuC,CAAhCH,KAAgC,MAAhCA,KAAgC,CAAzBI,MAAyB,MAAzBA,MAAyB,CAAjBC,SAAiB,MAAjBA,SAAiB,CACtG,GAAMC,CAAAA,WAAW,CAAGH,KAAK,CAAGD,QAA5B,CACA,GAAIN,CAAAA,MAAM,CAAGR,IAAI,CAACC,KAAL,CAAWY,WAAW,CAAG,CAAzB,CAAb,CACAL,MAAM,CACFA,MAAM,CACFR,IAAI,CAACC,KAAL,CAAW,CAACiB,WAAW,CAAGJ,QAAf,EAA2B,CAAtC,CADJ,EAEKC,KAAK,CAAG,CAAR,CAAYC,MAAM,CAAG,CAArB,CAAyB,CAF9B,CADJ,CAIA,GAAIT,SAAS,EAAIU,SAAjB,CACIT,MAAM,CAAGR,IAAI,CAACmB,GAAL,CAASP,KAAK,CAAGI,MAAM,CAAG,CAAZ,CAAgBA,MAA9B,CAAsCR,MAAtC,CAAT,CACJ,MAAOA,CAAAA,MAAP,CACH,CAVD,CAWO,GAAMY,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,OAAmF,IAAhFC,CAAAA,GAAgF,OAAhFA,GAAgF,CAA3Ed,SAA2E,OAA3EA,SAA2E,CAAhEe,KAAgE,OAAhEA,KAAgE,CAAzDP,KAAyD,OAAzDA,KAAyD,CAAlDlB,MAAkD,OAAlDA,MAAkD,CAA1CiB,QAA0C,OAA1CA,QAA0C,CAAhCF,KAAgC,OAAhCA,KAAgC,CAAzBI,MAAyB,OAAzBA,MAAyB,CAAjBC,SAAiB,OAAjBA,SAAiB,CAC/G,GAAMC,CAAAA,WAAW,CAAGH,KAAK,CAAGD,QAA5B,CACA,GAAIN,CAAAA,MAAM,CAAGa,GAAb,CACA,GAAIxB,MAAJ,CAAY,CACR,MAAO,CACH0B,UAAU,CAAEvB,IAAI,CAACW,GAAL,CAAS,CAAT,CAAY,CAACd,MAAM,CAAGiB,QAAV,EAAsB,CAAlC,CADT,CAEHU,aAAa,CAAExB,IAAI,CAACW,GAAL,CAAS,CAAT,CAAY,CAACd,MAAM,CAAGiB,QAAV,EAAsB,CAAlC,CAFZ,CAAP,CAIH,CACD,GAAI,CAACG,SAAD,EAAcV,SAAlB,CAA6B,CACzB,GAAIK,KAAJ,CAAW,CACP,GAAIU,KAAJ,CAAW,CACPd,MAAM,EAAIO,KAAK,CAAG,CAAR,CAAYf,IAAI,CAACmB,GAAL,CAASH,MAAT,CAAkBE,WAAW,CAAG,CAAf,CAAoBH,KAArC,CAAZ,CAA0D,CAApE,CACH,CAFD,IAGK,CACDP,MAAM,EAAI,CAAV,CACH,CACJ,CACD,GAAI,CAACI,KAAL,CAAY,CACR,GAAIU,KAAJ,CAAW,CACPd,MAAM,EACFO,KAAK,CAAG,CAAR,CACMf,IAAI,CAACmB,GAAL,CAASH,MAAT,CAAiBE,WAAW,CAAGH,KAA/B,CADN,CAEMf,IAAI,CAACmB,GAAL,CAASH,MAAM,CAAG,CAAlB,CAAqBE,WAAW,CAAGH,KAAnC,CAHV,CAIH,CALD,IAMK,CACDP,MAAM,EAAIO,KAAK,CAAG,CAAR,CAAYf,IAAI,CAACmB,GAAL,CAASH,MAAM,CAAG,CAAlB,CAAqBE,WAAW,CAAGH,KAAnC,CAAZ,CAAwD,CAAlE,CACH,CACJ,CACDP,MAAM,CAAGR,IAAI,CAACC,KAAL,CAAWO,MAAX,CAAT,CACH,CACD,MAAO,CAAEe,UAAU,CAAEf,MAAd,CAAsBgB,aAAa,CAAEhB,MAArC,CAAP,CACH,CAhCM,C,0CAiCA,GAAMiB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,OAA2F,IAAxFJ,CAAAA,GAAwF,OAAxFA,GAAwF,CAAnFN,KAAmF,OAAnFA,KAAmF,CAA5ER,SAA4E,OAA5EA,SAA4E,CAAjEe,KAAiE,OAAjEA,KAAiE,CAA1DzB,MAA0D,OAA1DA,MAA0D,CAAlDmB,MAAkD,OAAlDA,MAAkD,CAA1CJ,KAA0C,OAA1CA,KAA0C,CAAnCE,QAAmC,OAAnCA,QAAmC,CAAzBG,SAAyB,OAAzBA,SAAyB,CAAdS,MAAc,OAAdA,MAAc,CACxH,GAAIlB,CAAAA,MAAM,CAAGa,GAAb,CACA,GAAIM,CAAAA,SAAS,CAAGnB,MAAhB,CACA,GAAIoB,CAAAA,YAAY,CAAGpB,MAAnB,CAHwH,GAIhHe,CAAAA,UAJgH,CAIlFG,MAJkF,CAIhHH,UAJgH,CAIpGC,aAJoG,CAIlFE,MAJkF,CAIpGF,aAJoG,CAKxH,GAAMN,CAAAA,WAAW,CAAGH,KAAK,CAAGD,QAA5B,CACA,GAAI,CAACP,SAAL,CAAgB,CAEZ,GAAIe,KAAJ,CAAW,CAEP,MAAO,CAAEC,UAAU,CAAVA,UAAF,CAAcC,aAAa,CAAbA,aAAd,CAAP,CACH,CAED,MAAO,CAAED,UAAU,CAAEf,MAAd,CAAsBgB,aAAa,CAAEhB,MAArC,CAAP,CACH,CACD,GAAIc,KAAJ,CAAW,CAEPK,SAAS,CAAGJ,UAAZ,CACAK,YAAY,CAAGJ,aAAf,CAEA,GAAI,CAACP,SAAL,CAAgB,CACZ,GAAIL,KAAJ,CAAW,CACPe,SAAS,EACLZ,KAAK,CAAG,CAAR,CACMf,IAAI,CAACmB,GAAL,CAASX,MAAT,CAAiBU,WAAW,CAAGH,KAA/B,EAAwCP,MAAM,CAAG,CADvD,CAEMR,IAAI,CAACmB,GAAL,CAASX,MAAT,CAAiBU,WAAW,CAAGH,KAA/B,EAAwCP,MAAM,CAAG,CAH3D,CAIH,CACD,GAAI,CAACI,KAAL,CAAY,CACRe,SAAS,EACLZ,KAAK,CAAG,CAAR,CACMf,IAAI,CAACmB,GAAL,CAASH,MAAM,CAAG,CAAlB,CAAqBE,WAAW,CAAGH,KAAnC,CADN,CAEMf,IAAI,CAACmB,GAAL,CAASX,MAAT,CAAiBU,WAAW,CAAGH,KAA/B,EAAwCC,MAAM,CAAG,CAH3D,CAIH,CACJ,CACDW,SAAS,CAAG3B,IAAI,CAACC,KAAL,CAAW0B,SAAX,CAAZ,CACH,CApBD,IAqBK,CACD,GAAI9B,MAAJ,CAAY,CAER,MAAO,CACH0B,UAAU,CAAEvB,IAAI,CAACW,GAAL,CAAS,CAAT,CAAY,CAACd,MAAM,CAAGiB,QAAV,EAAsB,CAAlC,CADT,CAEHU,aAAa,CAAExB,IAAI,CAACW,GAAL,CAAS,CAAT,CAAY,CAACd,MAAM,CAAGiB,QAAV,EAAsB,CAAlC,CAFZ,CAAP,CAIH,CAED,GAAI,CAACG,SAAL,CAAgB,CACZ,GAAIL,KAAJ,CAAW,CACPJ,MAAM,EACFO,KAAK,CAAG,CAAR,CACMf,IAAI,CAACmB,GAAL,CAASH,MAAM,CAAG,CAAlB,CAAsBF,QAAQ,CAAG,CAAZ,CAAiBC,KAAtC,CADN,CAEMf,IAAI,CAACmB,GAAL,CAASH,MAAM,CAAG,CAAlB,CAAqBD,KAArB,CAHV,CAIH,CACD,GAAI,CAACH,KAAL,CAAY,CACRJ,MAAM,EACFO,KAAK,CAAG,CAAR,CACMf,IAAI,CAACmB,GAAL,CAASH,MAAT,CAAiBF,QAAQ,CAAGC,KAA5B,CADN,CAEMf,IAAI,CAACmB,GAAL,CAASL,QAAT,CAAoBE,MAAM,CAAG,CAAV,CAAeD,KAAlC,CAHV,CAIH,CACDP,MAAM,CAAGR,IAAI,CAACC,KAAL,CAAWO,MAAX,CAAT,CACAmB,SAAS,CAAGnB,MAAZ,CACAoB,YAAY,CAAGpB,MAAf,CACH,CACJ,CACD,MAAO,CACHe,UAAU,CAAEvB,IAAI,CAACW,GAAL,CAAS,CAAT,CAAYgB,SAAZ,CADT,CAEHH,aAAa,CAAExB,IAAI,CAACW,GAAL,CAAS,CAAT,CAAYiB,YAAZ,CAFZ,CAAP,CAIH,CAnEM,C,4CAoEA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,OAAD,CAAUC,gBAAV,QAA+BD,CAAAA,OAAO,CAACE,WAAR,CAAoB,CACrFC,UAAU,CAAE,CAAC,CAAD,CAAI,CAAJ,CADyE,CAErFC,WAAW,CAAE,CAACH,gBAAgB,CAAG,CAAH,CAAO,CAAxB,CAA2B,CAA3B,CAFwE,CAApB,CAA/B,EAA/B,C","sourcesContent":["export const calculateLabelTopPosition = (labelHeight, height = 0, optionalPadding = 0) => {\r\n    const customHeight = height > 0 ? height : 0;\r\n    return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\r\n};\r\nexport const calculateInputHeight = (labelHeight, height = 0, minHeight) => {\r\n    const finalHeight = height > 0 ? height : labelHeight;\r\n    if (height > 0)\r\n        return height;\r\n    return finalHeight < minHeight ? minHeight : finalHeight;\r\n};\r\nexport const calculatePadding = (props) => {\r\n    const { height, multiline = false } = props;\r\n    let result = 0;\r\n    if (multiline) {\r\n        if (height && multiline) {\r\n            result = calculateTextAreaPadding(props);\r\n        }\r\n        else {\r\n            result = calculateInputPadding(props);\r\n        }\r\n    }\r\n    return Math.max(0, result);\r\n};\r\nconst calculateTextAreaPadding = (props) => {\r\n    const { dense } = props;\r\n    return dense ? 10 : 20;\r\n};\r\nconst calculateInputPadding = ({ topPosition, fontSize, multiline, scale, dense, offset, isAndroid, }) => {\r\n    const refFontSize = scale * fontSize;\r\n    let result = Math.floor(topPosition / 2);\r\n    result =\r\n        result +\r\n            Math.floor((refFontSize - fontSize) / 2) -\r\n            (scale < 1 ? offset / 2 : 0);\r\n    if (multiline && isAndroid)\r\n        result = Math.min(dense ? offset / 2 : offset, result);\r\n    return result;\r\n};\r\nexport const adjustPaddingOut = ({ pad, multiline, label, scale, height, fontSize, dense, offset, isAndroid, }) => {\r\n    const refFontSize = scale * fontSize;\r\n    let result = pad;\r\n    if (height) {\r\n        return {\r\n            paddingTop: Math.max(0, (height - fontSize) / 2),\r\n            paddingBottom: Math.max(0, (height - fontSize) / 2),\r\n        };\r\n    }\r\n    if (!isAndroid && multiline) {\r\n        if (dense) {\r\n            if (label) {\r\n                result += scale < 1 ? Math.min(offset, (refFontSize / 2) * scale) : 0;\r\n            }\r\n            else {\r\n                result += 0;\r\n            }\r\n        }\r\n        if (!dense) {\r\n            if (label) {\r\n                result +=\r\n                    scale < 1\r\n                        ? Math.min(offset, refFontSize * scale)\r\n                        : Math.min(offset / 2, refFontSize * scale);\r\n            }\r\n            else {\r\n                result += scale < 1 ? Math.min(offset / 2, refFontSize * scale) : 0;\r\n            }\r\n        }\r\n        result = Math.floor(result);\r\n    }\r\n    return { paddingTop: result, paddingBottom: result };\r\n};\r\nexport const adjustPaddingFlat = ({ pad, scale, multiline, label, height, offset, dense, fontSize, isAndroid, styles, }) => {\r\n    let result = pad;\r\n    let topResult = result;\r\n    let bottomResult = result;\r\n    const { paddingTop, paddingBottom } = styles;\r\n    const refFontSize = scale * fontSize;\r\n    if (!multiline) {\r\n        // do not modify padding if input is not multiline\r\n        if (label) {\r\n            // return const style for flat input with label\r\n            return { paddingTop, paddingBottom };\r\n        }\r\n        // return pad for flat input without label\r\n        return { paddingTop: result, paddingBottom: result };\r\n    }\r\n    if (label) {\r\n        // add paddings passed from styles\r\n        topResult = paddingTop;\r\n        bottomResult = paddingBottom;\r\n        // adjust top padding for iOS\r\n        if (!isAndroid) {\r\n            if (dense) {\r\n                topResult +=\r\n                    scale < 1\r\n                        ? Math.min(result, refFontSize * scale) - result / 2\r\n                        : Math.min(result, refFontSize * scale) - result / 2;\r\n            }\r\n            if (!dense) {\r\n                topResult +=\r\n                    scale < 1\r\n                        ? Math.min(offset / 2, refFontSize * scale)\r\n                        : Math.min(result, refFontSize * scale) - offset / 2;\r\n            }\r\n        }\r\n        topResult = Math.floor(topResult);\r\n    }\r\n    else {\r\n        if (height) {\r\n            // center text when height is passed\r\n            return {\r\n                paddingTop: Math.max(0, (height - fontSize) / 2),\r\n                paddingBottom: Math.max(0, (height - fontSize) / 2),\r\n            };\r\n        }\r\n        // adjust paddings for iOS if no label\r\n        if (!isAndroid) {\r\n            if (dense) {\r\n                result +=\r\n                    scale < 1\r\n                        ? Math.min(offset / 2, (fontSize / 2) * scale)\r\n                        : Math.min(offset / 2, scale);\r\n            }\r\n            if (!dense) {\r\n                result +=\r\n                    scale < 1\r\n                        ? Math.min(offset, fontSize * scale)\r\n                        : Math.min(fontSize, (offset / 2) * scale);\r\n            }\r\n            result = Math.floor(result);\r\n            topResult = result;\r\n            bottomResult = result;\r\n        }\r\n    }\r\n    return {\r\n        paddingTop: Math.max(0, topResult),\r\n        paddingBottom: Math.max(0, bottomResult),\r\n    };\r\n};\r\nexport const interpolatePlaceholder = (labeled, hasActiveOutline) => labeled.interpolate({\r\n    inputRange: [0, 1],\r\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\r\n});\r\n"],"file":"helpers.js"}