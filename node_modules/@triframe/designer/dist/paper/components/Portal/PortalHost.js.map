{"version":3,"sources":["../../../../src/paper/components/Portal/PortalHost.js"],"names":["PortalContext","React","createContext","PortalHost","arguments","setManager","manager","mount","children","key","nextKey","queue","push","type","update","op","index","findIndex","o","unmount","length","action","pop","styles","container","props","Component","displayName","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport PortalManager from './PortalManager';\r\nexport const PortalContext = React.createContext(null);\r\n/**\r\n * Portal host renders all of its children `Portal` elements.\r\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\r\n * If you're using the `Provider` component, it already includes `Portal.Host`.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Text } from 'react-native';\r\n * import { Portal } from '../../';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   render() {\r\n *     return (\r\n *       <Portal.Host>\r\n *         <Text>Content of the app</Text>\r\n *       </Portal.Host>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\r\n */\r\nlet PortalHost = /** @class */ (() => {\r\n    class PortalHost extends React.Component {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.setManager = (manager) => {\r\n                this.manager = manager;\r\n            };\r\n            this.mount = (children) => {\r\n                const key = this.nextKey++;\r\n                if (this.manager) {\r\n                    this.manager.mount(key, children);\r\n                }\r\n                else {\r\n                    this.queue.push({ type: 'mount', key, children });\r\n                }\r\n                return key;\r\n            };\r\n            this.update = (key, children) => {\r\n                if (this.manager) {\r\n                    this.manager.update(key, children);\r\n                }\r\n                else {\r\n                    const op = { type: 'mount', key, children };\r\n                    const index = this.queue.findIndex(o => o.type === 'mount' || (o.type === 'update' && o.key === key));\r\n                    if (index > -1) {\r\n                        // @ts-ignore\r\n                        this.queue[index] = op;\r\n                    }\r\n                    else {\r\n                        this.queue.push(op);\r\n                    }\r\n                }\r\n            };\r\n            this.unmount = (key) => {\r\n                if (this.manager) {\r\n                    this.manager.unmount(key);\r\n                }\r\n                else {\r\n                    this.queue.push({ type: 'unmount', key });\r\n                }\r\n            };\r\n            this.nextKey = 0;\r\n            this.queue = [];\r\n        }\r\n        componentDidMount() {\r\n            const manager = this.manager;\r\n            const queue = this.queue;\r\n            while (queue.length && manager) {\r\n                const action = queue.pop();\r\n                if (action) {\r\n                    // eslint-disable-next-line default-case\r\n                    switch (action.type) {\r\n                        case 'mount':\r\n                            manager.mount(action.key, action.children);\r\n                            break;\r\n                        case 'update':\r\n                            manager.update(action.key, action.children);\r\n                            break;\r\n                        case 'unmount':\r\n                            manager.unmount(action.key);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        render() {\r\n            return (<PortalContext.Provider value={{\r\n                mount: this.mount,\r\n                update: this.update,\r\n                unmount: this.unmount,\r\n            }}>\r\n        \r\n        <View style={styles.container} collapsable={false} pointerEvents=\"box-none\">\r\n          {this.props.children}\r\n        </View>\r\n        <PortalManager ref={this.setManager}/>\r\n      </PortalContext.Provider>);\r\n        }\r\n    }\r\n    PortalHost.displayName = 'Portal.Host';\r\n    return PortalHost;\r\n})();\r\nexport default PortalHost;\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n});\r\n"],"file":"PortalHost.js"}