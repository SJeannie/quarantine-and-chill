{"version":3,"sources":["../../../../src/paper/components/TouchableRipple/index.js"],"names":["TouchableRipple","arguments","handlePressIn","e","props","centered","rippleColor","onPressIn","theme","dark","colors","calculatedRippleColor","text","alpha","rgb","string","button","currentTarget","style","window","getComputedStyle","dimensions","getBoundingClientRect","touchX","touchY","width","height","startX","nativeEvent","touches","pageX","startY","pageY","left","top","size","Math","min","max","container","document","createElement","setAttribute","position","pointerEvents","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","appendChild","requestAnimationFrame","handlePressOut","onPressOut","containers","querySelectorAll","forEach","firstChild","setTimeout","parentNode","removeChild","background","borderless","disabledProp","disabled","underlayColor","children","rest","onPress","styles","touchable","cursor","React","Children","only","Component","defaultProps","supported","StyleSheet","create"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { TouchableWithoutFeedback, View, StyleSheet, } from 'react-native';\r\nimport color from 'color';\r\nimport { withTheme } from '../../core/theming';\r\n/**\r\n * A wrapper for views that should respond to touches.\r\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\r\n * On unsupported platforms, it falls back to a highlight effect.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { Text, TouchableRipple } from '../../';\r\n *\r\n * const MyComponent = () => (\r\n *   <TouchableRipple\r\n *     onPress={() => console.log('Pressed')}\r\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\r\n *   >\r\n *     <Text>Press me</Text>\r\n *   </TouchableRipple>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nlet TouchableRipple = /** @class */ (() => {\r\n    class TouchableRipple extends React.Component {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.handlePressIn = (e) => {\r\n                const { centered, rippleColor, onPressIn, theme } = this.props;\r\n                onPressIn?.(e);\r\n                const { dark, colors } = theme;\r\n                const calculatedRippleColor = rippleColor ||\r\n                    color(colors.text)\r\n                        .alpha(dark ? 0.32 : 0.2)\r\n                        .rgb()\r\n                        .string();\r\n                const button = e.currentTarget;\r\n                const style = window.getComputedStyle(button);\r\n                const dimensions = button.getBoundingClientRect();\r\n                let touchX;\r\n                let touchY;\r\n                if (centered) {\r\n                    touchX = dimensions.width / 2;\r\n                    touchY = dimensions.height / 2;\r\n                }\r\n                else {\r\n                    const startX = e.nativeEvent.touches\r\n                        ? e.nativeEvent.touches[0].pageX\r\n                        : e.pageX;\r\n                    const startY = e.nativeEvent.touches\r\n                        ? e.nativeEvent.touches[0].pageY\r\n                        : e.pageY;\r\n                    touchX = startX - dimensions.left;\r\n                    touchY = startY - dimensions.top;\r\n                }\r\n                // Get the size of the button to determine how big the ripple should be\r\n                const size = centered\r\n                    ? // If ripple is always centered, we don't need to make it too big\r\n                        Math.min(dimensions.width, dimensions.height) * 1.25\r\n                    : // Otherwise make it twice as big so clicking on one end spreads ripple to other\r\n                        Math.max(dimensions.width, dimensions.height) * 2;\r\n                // Create a container for our ripple effect so we don't need to change the parent's style\r\n                const container = document.createElement('span');\r\n                container.setAttribute('data-paper-ripple', '');\r\n                Object.assign(container.style, {\r\n                    position: 'absolute',\r\n                    pointerEvents: 'none',\r\n                    top: '0',\r\n                    left: '0',\r\n                    right: '0',\r\n                    bottom: '0',\r\n                    borderTopLeftRadius: style.borderTopLeftRadius,\r\n                    borderTopRightRadius: style.borderTopRightRadius,\r\n                    borderBottomRightRadius: style.borderBottomRightRadius,\r\n                    borderBottomLeftRadius: style.borderBottomLeftRadius,\r\n                    overflow: centered ? 'visible' : 'hidden',\r\n                });\r\n                // Create span to show the ripple effect\r\n                const ripple = document.createElement('span');\r\n                Object.assign(ripple.style, {\r\n                    position: 'absolute',\r\n                    pointerEvents: 'none',\r\n                    backgroundColor: calculatedRippleColor,\r\n                    borderRadius: '50%',\r\n                    /* Transition configuration */\r\n                    transitionProperty: 'transform opacity',\r\n                    transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\r\n                    transitionTimingFunction: 'linear',\r\n                    transformOrigin: 'center',\r\n                    /* We'll animate these properties */\r\n                    transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\r\n                    opacity: '0.5',\r\n                    // Position the ripple where cursor was\r\n                    left: `${touchX}px`,\r\n                    top: `${touchY}px`,\r\n                    width: `${size}px`,\r\n                    height: `${size}px`,\r\n                });\r\n                // Finally, append it to DOM\r\n                container.appendChild(ripple);\r\n                button.appendChild(container);\r\n                // rAF runs in the same frame as the event handler\r\n                // Use double rAF to ensure the transition class is added in next frame\r\n                // This will make sure that the transition animation is triggered\r\n                requestAnimationFrame(() => {\r\n                    requestAnimationFrame(() => {\r\n                        Object.assign(ripple.style, {\r\n                            transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\r\n                            opacity: '1',\r\n                        });\r\n                    });\r\n                });\r\n            };\r\n            this.handlePressOut = (e) => {\r\n                this.props.onPressOut && this.props.onPressOut(e);\r\n                const containers = e.currentTarget.querySelectorAll('[data-paper-ripple]');\r\n                requestAnimationFrame(() => {\r\n                    requestAnimationFrame(() => {\r\n                        containers.forEach(container => {\r\n                            // @ts-ignore\r\n                            const ripple = container.firstChild;\r\n                            // @ts-ignore\r\n                            Object.assign(ripple.style, {\r\n                                transitionDuration: '250ms',\r\n                                opacity: 0,\r\n                            });\r\n                            // Finally remove the span after the transition\r\n                            setTimeout(() => {\r\n                                // @ts-ignore\r\n                                const { parentNode } = container;\r\n                                if (parentNode) {\r\n                                    parentNode.removeChild(container);\r\n                                }\r\n                            }, 500);\r\n                        });\r\n                    });\r\n                });\r\n            };\r\n        }\r\n        render() {\r\n            /* eslint-disable @typescript-eslint/no-unused-vars */\r\n            const { style, background, borderless, disabled: disabledProp, rippleColor, underlayColor, children, theme, ...rest } = this.props;\r\n            /* eslint-enable @typescript-eslint/no-unused-vars */\r\n            const disabled = disabledProp || !this.props.onPress;\r\n            return (<TouchableWithoutFeedback {...rest} onPressIn={this.handlePressIn} onPressOut={this.handlePressOut} disabled={disabled}>\r\n        <View style={[styles.touchable, borderless && styles.borderless, style, this.props.onPress &&  {cursor: 'pointer'} ]}>\r\n          {React.Children.only(children)}\r\n        </View>\r\n      </TouchableWithoutFeedback>);\r\n        }\r\n    }\r\n    TouchableRipple.defaultProps = {\r\n        borderless: false,\r\n    };\r\n    /**\r\n     * Whether ripple effect is supported.\r\n     */\r\n    TouchableRipple.supported = true;\r\n    return TouchableRipple;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    touchable: {\r\n        position: 'relative'\r\n    },\r\n    borderless: {\r\n        overflow: 'hidden',\r\n    },\r\n});\r\nexport default withTheme(TouchableRipple);\r\n"],"file":"index.js"}