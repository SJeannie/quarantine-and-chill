{"version":3,"sources":["../../../../src/paper/components/TouchableRipple/index.native.js"],"names":["ANDROID_VERSION_LOLLIPOP","ANDROID_VERSION_PIE","TouchableRipple","props","style","background","borderless","disabledProp","disabled","rippleColor","underlayColor","children","theme","rest","dark","colors","onPress","calculatedRippleColor","text","alpha","rgb","string","useForeground","Platform","OS","Version","supported","TouchableNativeFeedback","Ripple","overflow","React","Children","only","fade","Component","defaultProps"],"mappings":"k5BAAA,oDACA,yCACA,oDACA,2C,s1BACA,GAAMA,CAAAA,wBAAwB,CAAG,EAAjC,CACA,GAAMC,CAAAA,mBAAmB,CAAG,EAA5B,CACA,GAAIC,CAAAA,eAAe,CAAkB,UAAM,IACjCA,CAAAA,eADiC,iUAE1B,iBACmH,KAAKC,KADxH,CACGC,KADH,aACGA,KADH,CACUC,UADV,aACUA,UADV,CACsBC,UADtB,aACsBA,UADtB,CAC4CC,YAD5C,aACkCC,QADlC,CAC0DC,WAD1D,aAC0DA,WAD1D,CACuEC,aADvE,aACuEA,aADvE,CACsFC,QADtF,aACsFA,QADtF,CACgGC,KADhG,aACgGA,KADhG,CAC0GC,IAD1G,uJAEGC,CAAAA,IAFH,CAEoBF,KAFpB,CAEGE,IAFH,CAESC,MAFT,CAEoBH,KAFpB,CAESG,MAFT,CAGL,GAAMP,CAAAA,QAAQ,CAAGD,YAAY,EAAI,CAAC,KAAKJ,KAAL,CAAWa,OAA7C,CACA,GAAMC,CAAAA,qBAAqB,CAAGR,WAAW,EACrC,mBAAMM,MAAM,CAACG,IAAb,EACKC,KADL,CACWL,IAAI,CAAG,IAAH,CAAU,GADzB,EAEKM,GAFL,GAGKC,MAHL,EADJ,CAOA,GAAMC,CAAAA,aAAa,CAAGC,sBAASC,EAAT,GAAgB,SAAhB,EAClBD,sBAASE,OAAT,EAAoBxB,mBADF,EAElBK,UAFJ,CAGA,GAAIJ,eAAe,CAACwB,SAApB,CAA+B,CAC3B,MAAQ,qBAAC,oCAAD,0BAA6Bb,IAA7B,EAAmC,QAAQ,CAAEL,QAA7C,CAAuD,aAAa,CAAEc,aAAtE,CAAqF,UAAU,CAAEjB,UAAU,EAAI,IAAd,CACnGA,UADmG,CAEnGsB,qCAAwBC,MAAxB,CAA+BX,qBAA/B,CAAsDX,UAAtD,CAFE,8EAGd,oBAAC,iBAAD,EAAM,KAAK,CAAE,CAACA,UAAU,EAAI,CAAEuB,QAAQ,CAAE,QAAZ,CAAf,CAAuCzB,KAAvC,CAAb,6EACG0B,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBrB,QAApB,CADH,CAHc,CAAR,CAOH,CACD,MAAQ,qBAAC,+BAAD,0BAAwBE,IAAxB,EAA8B,QAAQ,CAAEL,QAAxC,CAAkD,KAAK,CAAE,CAACF,UAAU,EAAI,CAAEuB,QAAQ,CAAE,QAAZ,CAAf,CAAuCzB,KAAvC,CAAzD,CAAwG,aAAa,CAAEM,aAAa,EAAI,IAAjB,CACzHA,aADyH,CAEzH,mBAAMO,qBAAN,EACGgB,IADH,CACQ,GADR,EAEGb,GAFH,GAGGC,MAHH,EAFE,8EAMXS,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBrB,QAApB,CANW,CAAR,CAQH,CAjCkC,6BACTmB,KAAK,CAACI,SADG,EAmCvChC,eAAe,CAACiC,YAAhB,CAA+B,CAC3B7B,UAAU,CAAE,KADe,CAA/B,CAGAJ,eAAe,CAACwB,SAAhB,CAA4BH,sBAASC,EAAT,GAAgB,SAAhB,EAA6BD,sBAASE,OAAT,EAAoBzB,wBAA7E,CACA,MAAOE,CAAAA,eAAP,CACH,CAxCmC,EAApC,C,aAyCe,uBAAUA,eAAV,C","sourcesContent":["import * as React from 'react';\r\nimport { Platform, TouchableHighlight, TouchableNativeFeedback, View, } from 'react-native';\r\nimport color from 'color';\r\nimport { withTheme } from '../../core/theming';\r\nconst ANDROID_VERSION_LOLLIPOP = 21;\r\nconst ANDROID_VERSION_PIE = 28;\r\nlet TouchableRipple = /** @class */ (() => {\r\n    class TouchableRipple extends React.Component {\r\n        render() {\r\n            const { style, background, borderless, disabled: disabledProp, rippleColor, underlayColor, children, theme, ...rest } = this.props;\r\n            const { dark, colors } = theme;\r\n            const disabled = disabledProp || !this.props.onPress;\r\n            const calculatedRippleColor = rippleColor ||\r\n                color(colors.text)\r\n                    .alpha(dark ? 0.32 : 0.2)\r\n                    .rgb()\r\n                    .string();\r\n            // A workaround for ripple on Android P is to use useForeground + overflow: 'hidden'\r\n            // https://github.com/facebook/react-native/issues/6480\r\n            const useForeground = Platform.OS === 'android' &&\r\n                Platform.Version >= ANDROID_VERSION_PIE &&\r\n                borderless;\r\n            if (TouchableRipple.supported) {\r\n                return (<TouchableNativeFeedback {...rest} disabled={disabled} useForeground={useForeground} background={background != null\r\n                    ? background\r\n                    : TouchableNativeFeedback.Ripple(calculatedRippleColor, borderless)}>\r\n          <View style={[borderless && { overflow: 'hidden' }, style]}>\r\n            {React.Children.only(children)}\r\n          </View>\r\n        </TouchableNativeFeedback>);\r\n            }\r\n            return (<TouchableHighlight {...rest} disabled={disabled} style={[borderless && { overflow: 'hidden' }, style]} underlayColor={underlayColor != null\r\n                ? underlayColor\r\n                : color(calculatedRippleColor)\r\n                    .fade(0.5)\r\n                    .rgb()\r\n                    .string()}>\r\n        {React.Children.only(children)}\r\n      </TouchableHighlight>);\r\n        }\r\n    }\r\n    TouchableRipple.defaultProps = {\r\n        borderless: false,\r\n    };\r\n    TouchableRipple.supported = Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\r\n    return TouchableRipple;\r\n})();\r\nexport default withTheme(TouchableRipple);\r\n"],"file":"index.native.js"}