{"version":3,"sources":["../../../../src/paper/components/Checkbox/Checkbox.js"],"names":["Checkbox","Platform","OS","props","React","Component","Item","CheckboxItem","Android","CheckboxAndroid","IOS","CheckboxIOS"],"mappings":"kyBAAA,oDACA,yCAEA,kEACA,0EACA,oEACA,2C,20BA6CA,GAAIA,CAAAA,QAAQ,CAAkB,UAAM,IAC1BA,CAAAA,QAD0B,8RAEnB,CACL,MAAOC,uBAASC,EAAT,GAAgB,KAAhB,CAAyB,oBAAC,oBAAD,0BAAiB,KAAKC,KAAtB,+EAAzB,CAA4D,oBAAC,wBAAD,0BAAqB,KAAKA,KAA1B,+EAAnE,CACH,CAJ2B,sBACTC,KAAK,CAACC,SADG,EAOhCL,QAAQ,CAACM,IAAT,CAAgBC,qBAAhB,CAEAP,QAAQ,CAACQ,OAAT,CAAmBC,wBAAnB,CAEAT,QAAQ,CAACU,GAAT,CAAeC,oBAAf,CACA,MAAOX,CAAAA,QAAP,CACH,CAb4B,EAA7B,C,aAce,uBAAUA,QAAV,C","sourcesContent":["import * as React from 'react';\r\nimport { Platform } from 'react-native';\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport CheckboxIOS from './CheckboxIOS';\r\nimport CheckboxAndroid from './CheckboxAndroid';\r\nimport CheckboxItem from './CheckboxItem';\r\nimport { withTheme } from '../../core/theming';\r\n/**\r\n * Checkboxes allow the selection of multiple options from a set.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\r\n *     <figcaption>Android (enabled)</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\r\n *     <figcaption>Android (disabled)</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\r\n *     <figcaption>iOS (enabled)</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\r\n *     <figcaption>iOS (disabled)</figcaption>\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Checkbox } from '../../';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     checked: false,\r\n *   };\r\n *\r\n *   render() {\r\n *     const { checked } = this.state;\r\n *     return (\r\n *       <Checkbox\r\n *         status={checked ? 'checked' : 'unchecked'}\r\n *         onPress={() => { this.setState({ checked: !checked }); }}\r\n *       />\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nlet Checkbox = /** @class */ (() => {\r\n    class Checkbox extends React.Component {\r\n        render() {\r\n            return Platform.OS === 'ios' ? (<CheckboxIOS {...this.props}/>) : (<CheckboxAndroid {...this.props}/>);\r\n        }\r\n    }\r\n    // @component ./CheckboxItem.tsx\r\n    Checkbox.Item = CheckboxItem;\r\n    // @component ./CheckboxAndroid.tsx\r\n    Checkbox.Android = CheckboxAndroid;\r\n    // @component ./CheckboxIOS.tsx\r\n    Checkbox.IOS = CheckboxIOS;\r\n    return Checkbox;\r\n})();\r\nexport default withTheme(Checkbox);\r\n"],"file":"Checkbox.js"}