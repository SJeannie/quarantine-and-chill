{"version":3,"sources":["../../../../src/paper/components/Checkbox/CheckboxItem.js"],"names":["CheckboxItem","props","style","status","label","onPress","labelStyle","colors","theme","styles","container","color","primary","React","Component","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","fontSize"],"mappings":"u6BAAA,oDACA,yCACA,4DACA,gEACA,2EACA,2C,+0BAsBA,GAAIA,CAAAA,YAAY,CAAkB,UAAM,IAC9BA,CAAAA,YAD8B,kTAEvB,iBAC8E,KAAKC,KADnF,CACGC,KADH,aACGA,KADH,CACUC,MADV,aACUA,MADV,CACkBC,KADlB,aACkBA,KADlB,CACyBC,OADzB,aACyBA,OADzB,CACkCC,UADlC,aACkCA,UADlC,CACuDC,MADvD,aAC8CC,KAD9C,CACuDD,MADvD,CACoEN,KADpE,8GAEL,MAAQ,qBAAC,wBAAD,EAAiB,OAAO,CAAEI,OAA1B,6EACZ,oBAAC,iBAAD,EAAM,KAAK,CAAE,CAACI,MAAM,CAACC,SAAR,CAAmBR,KAAnB,CAAb,CAAwC,aAAa,CAAC,MAAtD,4EACE,oBAAC,aAAD,EAAM,KAAK,CAAE,CAACO,MAAM,CAACL,KAAR,CAAeE,UAAf,CAA2B,CAAEK,KAAK,CAAEJ,MAAM,CAACK,OAAhB,CAA3B,CAAb,6EACGR,KADH,CADF,CAIE,oBAAC,iBAAD,wBAAU,MAAM,CAAED,MAAlB,EAA8BF,KAA9B,+EAJF,CADY,CAAR,CAQH,CAZ+B,0BACTY,KAAK,CAACC,SADG,EAcpCd,YAAY,CAACe,WAAb,CAA2B,eAA3B,CACA,MAAOf,CAAAA,YAAP,CACH,CAhBgC,EAAjC,C,+CAiBe,uBAAUA,YAAV,C,0BAGf,GAAMS,CAAAA,MAAM,CAAGO,wBAAWC,MAAX,CAAkB,CAC7BP,SAAS,CAAE,CACPQ,aAAa,CAAE,KADR,CAEPC,UAAU,CAAE,QAFL,CAGPC,cAAc,CAAE,eAHT,CAIPC,eAAe,CAAE,CAJV,CAKPC,iBAAiB,CAAE,EALZ,CADkB,CAQ7BlB,KAAK,CAAE,CACHmB,QAAQ,CAAE,EADP,CARsB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View, } from 'react-native';\r\nimport CheckBox from './Checkbox';\r\nimport Text from '../Typography/Text';\r\nimport TouchableRipple from '../TouchableRipple';\r\nimport { withTheme } from '../../core/theming';\r\n/**\r\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { Checkbox, Text } from '../../';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *\r\n *   render() {\r\n *     return(\r\n *       <View>\r\n *           <Checkbox.Item label=\"Item\" status=\"checked\" />\r\n *       </View>\r\n *     )\r\n *   }\r\n * }\r\n *```\r\n */\r\nlet CheckboxItem = /** @class */ (() => {\r\n    class CheckboxItem extends React.Component {\r\n        render() {\r\n            const { style, status, label, onPress, labelStyle, theme: { colors }, ...props } = this.props;\r\n            return (<TouchableRipple onPress={onPress}>\r\n        <View style={[styles.container, style]} pointerEvents=\"none\">\r\n          <Text style={[styles.label, labelStyle, { color: colors.primary }]}>\r\n            {label}\r\n          </Text>\r\n          <CheckBox status={status} {...props}></CheckBox>\r\n        </View>\r\n      </TouchableRipple>);\r\n        }\r\n    }\r\n    CheckboxItem.displayName = 'Checkbox.Item';\r\n    return CheckboxItem;\r\n})();\r\nexport default withTheme(CheckboxItem);\r\n// @component-docs ignore-next-line\r\nexport { CheckboxItem };\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        paddingVertical: 8,\r\n        paddingHorizontal: 16,\r\n    },\r\n    label: {\r\n        fontSize: 16,\r\n    },\r\n});\r\n"],"file":"CheckboxItem.js"}