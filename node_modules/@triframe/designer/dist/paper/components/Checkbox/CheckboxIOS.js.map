{"version":3,"sources":["../../../../src/paper/components/Checkbox/CheckboxIOS.js"],"names":["CheckboxIOS","props","status","disabled","onPress","theme","rest","checked","indeterminate","checkedColor","colors","color","accent","rippleColor","text","alpha","rgb","string","fade","icon","styles","container","opacity","React","Component","displayName","StyleSheet","create","borderRadius","padding"],"mappings":"s6BAAA,oDACA,yCACA,oDACA,qDACA,2EACA,2C,80BAgBA,GAAIA,CAAAA,WAAW,CAAkB,UAAM,IAC7BA,CAAAA,WAD6B,6SAEtB,iBACiD,KAAKC,KADtD,CACGC,MADH,aACGA,MADH,CACWC,QADX,aACWA,QADX,CACqBC,OADrB,aACqBA,OADrB,CAC8BC,KAD9B,aAC8BA,KAD9B,CACwCC,IADxC,4FAEL,GAAMC,CAAAA,OAAO,CAAGL,MAAM,GAAK,SAA3B,CACA,GAAMM,CAAAA,aAAa,CAAGN,MAAM,GAAK,eAAjC,CACA,GAAMO,CAAAA,YAAY,CAAGN,QAAQ,CACvBE,KAAK,CAACK,MAAN,CAAaP,QADU,CAEvB,KAAKF,KAAL,CAAWU,KAAX,EAAoBN,KAAK,CAACK,MAAN,CAAaE,MAFvC,CAGA,GAAIC,CAAAA,WAAJ,CACA,GAAIV,QAAJ,CAAc,CACVU,WAAW,CAAG,mBAAMR,KAAK,CAACK,MAAN,CAAaI,IAAnB,EACTC,KADS,CACH,IADG,EAETC,GAFS,GAGTC,MAHS,EAAd,CAIH,CALD,IAMK,CACDJ,WAAW,CAAG,mBAAMJ,YAAN,EACTS,IADS,CACJ,IADI,EAETF,GAFS,GAGTC,MAHS,EAAd,CAIH,CACD,GAAME,CAAAA,IAAI,CAAGX,aAAa,CAAG,OAAH,CAAa,OAAvC,CACA,MAAQ,qBAAC,wBAAD,0BAAqBF,IAArB,EAA2B,UAAU,KAArC,CAAsC,WAAW,CAAEO,WAAnD,CAAgE,OAAO,CAAET,OAAzE,CAAkF,QAAQ,CAAED,QAA5F,CAAsG,mBAAmB,CAAEA,QAAQ,CAAG,CAAC,QAAD,CAAW,UAAX,CAAH,CAA4B,QAA/J,CAAyK,0BAA0B,CAAC,QAApM,CAA6M,iBAAiB,CAAC,QAA/N,CAAwO,mBAAmB,CAAEA,QAAQ,CAAG,CAAC,UAAD,CAAH,CAAkB,EAAvR,CAA2R,uBAAuB,CAAC,QAAnT,CAA4T,KAAK,CAAEiB,MAAM,CAACC,SAA1U,8EACZ,oBAAC,iBAAD,EAAM,KAAK,CAAE,CAAEC,OAAO,CAAEd,aAAa,EAAID,OAAjB,CAA2B,CAA3B,CAA+B,CAA1C,CAAb,4EACE,oBAAC,aAAD,EAAM,gBAAgB,CAAE,KAAxB,CAA+B,IAAI,CAAEY,IAArC,CAA2C,IAAI,CAAE,EAAjD,CAAqD,KAAK,CAAEV,YAA5D,CAA0E,SAAS,CAAC,KAApF,6EADF,CADY,CAAR,CAKH,CA5B8B,yBACTc,KAAK,CAACC,SADG,EA8BnCxB,WAAW,CAACyB,WAAZ,CAA0B,cAA1B,CACA,MAAOzB,CAAAA,WAAP,CACH,CAhC+B,EAAhC,C,gCAiCA,GAAMoB,CAAAA,MAAM,CAAGM,wBAAWC,MAAX,CAAkB,CAC7BN,SAAS,CAAE,CACPO,YAAY,CAAE,EADP,CAEPC,OAAO,CAAE,CAFF,CADkB,CAAlB,CAAf,C,aAMe,uBAAU7B,WAAV,C","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport color from 'color';\r\nimport Icon from '../Icon';\r\nimport TouchableRipple from '../TouchableRipple';\r\nimport { withTheme } from '../../core/theming';\r\n/**\r\n * Checkboxes allow the selection of multiple options from a set.\r\n * This component follows platform guidelines for iOS.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\r\n *     <figcaption>Enabled</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\r\n *     <figcaption>Disabled</figcaption>\r\n *   </figure>\r\n * </div>\r\n */\r\nlet CheckboxIOS = /** @class */ (() => {\r\n    class CheckboxIOS extends React.Component {\r\n        render() {\r\n            const { status, disabled, onPress, theme, ...rest } = this.props;\r\n            const checked = status === 'checked';\r\n            const indeterminate = status === 'indeterminate';\r\n            const checkedColor = disabled\r\n                ? theme.colors.disabled\r\n                : this.props.color || theme.colors.accent;\r\n            let rippleColor;\r\n            if (disabled) {\r\n                rippleColor = color(theme.colors.text)\r\n                    .alpha(0.16)\r\n                    .rgb()\r\n                    .string();\r\n            }\r\n            else {\r\n                rippleColor = color(checkedColor)\r\n                    .fade(0.32)\r\n                    .rgb()\r\n                    .string();\r\n            }\r\n            const icon = indeterminate ? 'minus' : 'check';\r\n            return (<TouchableRipple {...rest} borderless rippleColor={rippleColor} onPress={onPress} disabled={disabled} accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'} accessibilityComponentType=\"button\" accessibilityRole=\"button\" accessibilityStates={disabled ? ['disabled'] : []} accessibilityLiveRegion=\"polite\" style={styles.container}>\r\n        <View style={{ opacity: indeterminate || checked ? 1 : 0 }}>\r\n          <Icon allowFontScaling={false} name={icon} size={24} color={checkedColor} direction=\"ltr\"/>\r\n        </View>\r\n      </TouchableRipple>);\r\n        }\r\n    }\r\n    CheckboxIOS.displayName = 'Checkbox.IOS';\r\n    return CheckboxIOS;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderRadius: 18,\r\n        padding: 6,\r\n    },\r\n});\r\nexport default withTheme(CheckboxIOS);\r\n// @component-docs ignore-next-line\r\nexport { CheckboxIOS };\r\n"],"file":"CheckboxIOS.js"}