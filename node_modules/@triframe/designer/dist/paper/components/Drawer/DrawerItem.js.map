{"version":3,"sources":["../../../../src/paper/components/Drawer/DrawerItem.js"],"names":["DrawerItem","props","icon","label","active","theme","style","onPress","accessibilityLabel","rest","colors","roundness","backgroundColor","primary","alpha","rgb","string","contentColor","text","font","fonts","medium","labelMargin","styles","container","borderRadius","wrapper","color","marginLeft","React","Component","displayName","StyleSheet","create","marginHorizontal","marginVertical","flexDirection","alignItems","padding","marginRight"],"mappings":"g/BAAA,oDACA,oDACA,yCACA,gEACA,qDACA,2EACA,2C,onDAgBA,GAAIA,CAAAA,UAAU,CAAkB,UAAM,IAC5BA,CAAAA,UAD4B,wSAErB,iBAC+E,KAAKC,KADpF,CACGC,IADH,aACGA,IADH,CACSC,KADT,aACSA,KADT,CACgBC,MADhB,aACgBA,MADhB,CACwBC,KADxB,aACwBA,KADxB,CAC+BC,KAD/B,aAC+BA,KAD/B,CACsCC,OADtC,aACsCA,OADtC,CAC+CC,kBAD/C,aAC+CA,kBAD/C,CACsEC,IADtE,gIAEGC,CAAAA,MAFH,CAEyBL,KAFzB,CAEGK,MAFH,CAEWC,SAFX,CAEyBN,KAFzB,CAEWM,SAFX,CAGL,GAAMC,CAAAA,eAAe,CAAGR,MAAM,CACxB,mBAAMM,MAAM,CAACG,OAAb,EACGC,KADH,CACS,IADT,EAEGC,GAFH,GAGGC,MAHH,EADwB,CAKxB,aALN,CAMA,GAAMC,CAAAA,YAAY,CAAGb,MAAM,CACrBM,MAAM,CAACG,OADc,CAErB,mBAAMH,MAAM,CAACQ,IAAb,EACGJ,KADH,CACS,IADT,EAEGC,GAFH,GAGGC,MAHH,EAFN,CAMA,GAAMG,CAAAA,IAAI,CAAGd,KAAK,CAACe,KAAN,CAAYC,MAAzB,CACA,GAAMC,CAAAA,WAAW,CAAGpB,IAAI,CAAG,EAAH,CAAQ,CAAhC,CACA,MAAQ,qBAAC,iBAAD,0BAAUO,IAAV,EAAgB,KAAK,CAAE,CAC3Bc,MAAM,CAACC,SADoB,CAE3B,CAAEZ,eAAe,CAAfA,eAAF,CAAmBa,YAAY,CAAEd,SAAjC,CAF2B,CAG3BL,KAH2B,CAAvB,8EAKZ,oBAAC,wBAAD,EAAiB,UAAU,KAA3B,CAA4B,YAAY,CAAE,CAA1C,CAA6C,OAAO,CAAEC,OAAtD,CAA+D,KAAK,CAAE,CAAEkB,YAAY,CAAEd,SAAhB,CAAtE,CAAmG,mBAAmB,CAAEP,MAAM,CAAG,CAAC,QAAD,CAAW,UAAX,CAAH,CAA4B,QAA1J,CAAoK,0BAA0B,CAAC,QAA/L,CAAwM,iBAAiB,CAAC,QAA1N,CAAmO,mBAAmB,CAAEA,MAAM,CAAG,CAAC,UAAD,CAAH,CAAkB,EAAhR,CAAoR,kBAAkB,CAAEI,kBAAxS,4EACE,oBAAC,iBAAD,EAAM,KAAK,CAAEe,MAAM,CAACG,OAApB,6EACGxB,IAAI,CAAI,oBAAC,aAAD,EAAM,MAAM,CAAEA,IAAd,CAAoB,IAAI,CAAE,EAA1B,CAA8B,KAAK,CAAEe,YAArC,6EAAJ,CAA4D,IADnE,CAEE,oBAAC,aAAD,EAAM,aAAa,CAAE,CAArB,CAAwB,KAAK,CAAE,CAC3BM,MAAM,CAACpB,KADoB,8BAGvBwB,KAAK,CAAEV,YAHgB,EAIpBE,IAJoB,MAKvBS,UAAU,CAAEN,WALW,GAA/B,6EAQGnB,KARH,CAFF,CADF,CALY,CAAR,CAqBH,CAxC6B,wBACT0B,KAAK,CAACC,SADG,EA0ClC9B,UAAU,CAAC+B,WAAX,CAAyB,aAAzB,CACA,MAAO/B,CAAAA,UAAP,CACH,CA5C8B,EAA/B,CA6CA,GAAMuB,CAAAA,MAAM,CAAGS,wBAAWC,MAAX,CAAkB,CAC7BT,SAAS,CAAE,CACPU,gBAAgB,CAAE,EADX,CAEPC,cAAc,CAAE,CAFT,CADkB,CAK7BT,OAAO,CAAE,CACLU,aAAa,CAAE,KADV,CAELC,UAAU,CAAE,QAFP,CAGLC,OAAO,CAAE,CAHJ,CALoB,CAU7BnC,KAAK,CAAE,CACHoC,WAAW,CAAE,EADV,CAVsB,CAAlB,CAAf,C,aAce,uBAAUvC,UAAV,C","sourcesContent":["import color from 'color';\r\nimport * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport Text from '../Typography/Text';\r\nimport Icon from '../Icon';\r\nimport TouchableRipple from '../TouchableRipple';\r\nimport { withTheme } from '../../core/theming';\r\n/**\r\n * A component used to show an action item with an icon and a label in a navigation drawer.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Drawer } from '../../';\r\n *\r\n * const MyComponent = () => (\r\n *   <Drawer.Item label=\"First Item\" />\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nlet DrawerItem = /** @class */ (() => {\r\n    class DrawerItem extends React.Component {\r\n        render() {\r\n            const { icon, label, active, theme, style, onPress, accessibilityLabel, ...rest } = this.props;\r\n            const { colors, roundness } = theme;\r\n            const backgroundColor = active\r\n                ? color(colors.primary)\r\n                    .alpha(0.12)\r\n                    .rgb()\r\n                    .string()\r\n                : 'transparent';\r\n            const contentColor = active\r\n                ? colors.primary\r\n                : color(colors.text)\r\n                    .alpha(0.68)\r\n                    .rgb()\r\n                    .string();\r\n            const font = theme.fonts.medium;\r\n            const labelMargin = icon ? 32 : 0;\r\n            return (<View {...rest} style={[\r\n                styles.container,\r\n                { backgroundColor, borderRadius: roundness },\r\n                style,\r\n            ]}>\r\n        <TouchableRipple borderless delayPressIn={0} onPress={onPress} style={{ borderRadius: roundness }} accessibilityTraits={active ? ['button', 'selected'] : 'button'} accessibilityComponentType=\"button\" accessibilityRole=\"button\" accessibilityStates={active ? ['selected'] : []} accessibilityLabel={accessibilityLabel}>\r\n          <View style={styles.wrapper}>\r\n            {icon ? (<Icon source={icon} size={24} color={contentColor}/>) : null}\r\n            <Text numberOfLines={1} style={[\r\n                styles.label,\r\n                {\r\n                    color: contentColor,\r\n                    ...font,\r\n                    marginLeft: labelMargin,\r\n                },\r\n            ]}>\r\n              {label}\r\n            </Text>\r\n          </View>\r\n        </TouchableRipple>\r\n      </View>);\r\n        }\r\n    }\r\n    DrawerItem.displayName = 'Drawer.Item';\r\n    return DrawerItem;\r\n})();\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginHorizontal: 10,\r\n        marginVertical: 4,\r\n    },\r\n    wrapper: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        padding: 8,\r\n    },\r\n    label: {\r\n        marginRight: 32,\r\n    },\r\n});\r\nexport default withTheme(DrawerItem);\r\n"],"file":"DrawerItem.js"}