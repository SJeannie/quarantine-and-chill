{"version":3,"sources":["../src/Button.js"],"names":["Button","children","mode","disabled","disableWhileProcessing","processingMessage","icon","onPress","theme","color","rest","handlePress","processing","setProcessing","e","process","then","padding","margin","colors","props","BubbleButton"],"mappings":"wpBAAA,qDACA,8BACA,yC,yHAEA,GAAMA,CAAAA,MAAM,CAAG,qBAAU,cAAqJ,IAAlJC,CAAAA,QAAkJ,MAAlJA,QAAkJ,gBAAxIC,IAAwI,CAAxIA,IAAwI,oBAAjI,WAAiI,8BAApHC,QAAoH,CAApHA,QAAoH,wBAAzG,KAAyG,0CAAlGC,sBAAkG,CAAlGA,sBAAkG,gCAA1E,IAA0E,kDAApEC,iBAAoE,CAApEA,iBAAoE,gCAAjD,IAAiD,uBAA3CC,IAA2C,MAA3CA,IAA2C,CAArCC,OAAqC,MAArCA,OAAqC,CAA5BC,KAA4B,MAA5BA,KAA4B,CAArBC,KAAqB,MAArBA,KAAqB,CAAXC,IAAW,0JAC1K,GAAIC,CAAAA,WAAJ,CAD0K,cAEtI,oBAAS,KAAT,CAFsI,qDAEpKC,UAFoK,eAExJC,aAFwJ,eAG1K,GAAG,MAAON,CAAAA,OAAP,GAAmB,UAAtB,CAAkCI,WAAW,CAAG,qBAASG,CAAT,CAAW,CACvD,GAAIC,CAAAA,OAAO,CAAGR,OAAO,CAACO,CAAD,CAArB,CACA,GAAGV,sBAAsB,EAAIW,OAA1B,EAAqC,MAAOA,CAAAA,OAAO,CAACC,IAAf,EAAuB,UAA/D,CAA0E,CACtEH,aAAa,CAAC,IAAD,CAAb,CACAE,OAAO,CAACC,IAAR,CAAa,UAAM,CACfH,aAAa,CAAC,KAAD,CAAb,CACH,CAFD,EAGH,CACJ,CARiC,CASlC,MACI,8BAAC,aAAD,wBACI,KAAK,CAAE,CAAEI,OAAO,CAAE,CAAX,CAAcC,MAAM,CAAE,CAAtB,CADX,CAEI,QAAQ,CAAEf,QAAQ,EAAIS,UAF1B,CAGI,IAAI,CAAEV,IAHV,CAGgB,KAAK,CAAEM,KAAK,CAACW,MAAN,CAAaV,KAAb,GAAuBA,KAH9C,CAII,IAAI,CAAGG,UAAU,CAAG,SAAAQ,KAAK,QAAI,8BAAC,wBAAD,wBAAmB,SAAS,CAAE,IAA9B,EAAyCA,KAAzC,gFAAJ,EAAR,CAAiEd,IAJtF,CAKI,OAAO,CAAEK,WALb,EAMQD,IANR,+EAQME,UAAU,CACNP,iBAAiB,EAAIJ,QADf,CAENA,QAVV,CADJ,CAeH,CA3Bc,CAAf,C,sBA6BA,GAAMoB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,KAAD,QACjB,8BAAC,UAAD,wBACI,KAAK,CAAE,CACHF,MAAM,CAAE,EADL,CADX,EAKQE,KALR,+EADiB,EAArB,C","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button as Pressable, FAB, ToggleButton, withTheme, ActivityIndicator } from './paper'\r\nimport { View } from 'react-native'\r\n\r\nconst Button = withTheme(({ children, mode = \"contained\", disabled = false, disableWhileProcessing= true, processingMessage= null, icon, onPress, theme, color, ...rest }) => {\r\n    let handlePress;\r\n    let [ processing, setProcessing ] = useState(false)\r\n    if(typeof onPress === 'function') handlePress = function(e){\r\n        let process = onPress(e)\r\n        if(disableWhileProcessing && process && typeof process.then == 'function'){ \r\n            setProcessing(true)\r\n            process.then(() => {\r\n                setProcessing(false)\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <Pressable \r\n            style={{ padding: 5, margin: 5 }} \r\n            disabled={disabled || processing}\r\n            mode={mode} color={theme.colors[color] || color } \r\n            icon={ processing ? props => <ActivityIndicator animating={true}  {...props} /> : icon}\r\n            onPress={handlePress}\r\n            {...rest}\r\n        >\r\n            { processing \r\n                ? processingMessage || children\r\n                : children\r\n            }\r\n        </Pressable>\r\n    )\r\n})\r\n\r\nconst BubbleButton = (props) => (\r\n    <FAB\r\n        style={{\r\n            margin: 16,\r\n           // width: props.small ? 40 : 56\r\n        }}\r\n        {...props}\r\n    />\r\n)\r\n\r\nexport {\r\n    Button, BubbleButton, ToggleButton\r\n}\r\n"],"file":"Button.js"}