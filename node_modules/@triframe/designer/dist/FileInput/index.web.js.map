{"version":3,"sources":["../../src/FileInput/index.web.js"],"names":["FileInput","onChange","multiple","path","children","props","filenames","changeFilenames","handleChange","e","url","names","input","target","form","FormData","index","files","length","file","push","name","append","join","fetch","method","body","then","res","json","urls","chooseFile","click","models","display","x"],"mappings":"shBAAA,qDACA,iCACA,+BACA,qDACA,yC,uIAGO,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAkG,wBAA/FC,QAA+F,CAA/FA,QAA+F,wBAApF,iBAAM,KAAM,EAAZ,EAAoF,kCAApEC,QAAoE,CAApEA,QAAoE,wBAAzD,KAAyD,8BAAlDC,IAAkD,CAAlDA,IAAkD,oBAA3C,KAA2C,8BAApCC,QAAoC,CAApCA,QAAoC,wBAAzB,QAAyB,eAAZC,KAAY,qGAClF,oBAAS,EAAT,CADkF,qDAChHC,SADgH,eACrGC,eADqG,eAEvH,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAIC,GAAJ,CAAY,CAC7B,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMC,CAAAA,KAAK,CAAGH,CAAC,CAACI,MAAhB,CACA,GAAMC,CAAAA,IAAI,CAAG,GAAIC,CAAAA,QAAJ,EAAb,CACA,IAAK,GAAIC,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAxC,CAAgDF,KAAK,EAArD,CAAyD,CACrD,GAAIG,CAAAA,IAAI,CAAGP,KAAK,CAACK,KAAN,CAAYD,KAAZ,CAAX,CACAL,KAAK,CAACS,IAAN,CAAWD,IAAI,CAACE,IAAhB,EACAP,IAAI,CAACQ,MAAL,CAAYN,KAAZ,CAAmBG,IAAnB,EACH,CACDZ,eAAe,CAACI,KAAK,CAACY,IAAN,CAAW,IAAX,CAAD,CAAf,CACAT,IAAI,CAACQ,MAAL,CAAY,QAAZ,CAAsBV,KAAK,CAACK,KAAN,CAAYC,MAAlC,EACAJ,IAAI,CAACQ,MAAL,CAAY,MAAZ,CAAoBnB,IAApB,EACAqB,KAAK,CAAId,GAAJ,WAAkB,CACnBe,MAAM,CAAE,MADW,CAEnBC,IAAI,CAAEZ,IAFa,CAAlB,CAAL,CAIKa,IAJL,CAIU,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EAJb,EAKKF,IALL,CAKU,SAAAG,IAAI,CAAI,CACV7B,QAAQ,CAACC,QAAQ,CAAG4B,IAAH,CAAUA,IAAI,CAAC,CAAD,CAAvB,CAAR,CACH,CAPL,EAQH,CApBD,CAqBA,GAAIlB,CAAAA,KAAJ,CACA,GAAImB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMnB,CAAAA,KAAK,CAACoB,KAAN,EAAN,EAAjB,CACA,MACI,8BAAC,mBAAD,CAAO,QAAP,8EACK,SAAAC,MAAM,QACH,8BAAC,iBAAD,+EACI,6BAAC,cAAD,wBAAQ,OAAO,CAAEF,UAAjB,EAAiC1B,KAAjC,gFAAyCD,QAAzC,CADJ,CAEI,6BAAC,iBAAD,+EAAaE,SAAb,CAFJ,CAGI,sCACI,KAAK,CAAE,CAAE4B,OAAO,CAAE,MAAX,CADX,CAEI,GAAG,CAAE,aAAAC,CAAC,QAAIvB,CAAAA,KAAK,CAAGuB,CAAZ,EAFV,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAEjC,QAJd,CAKI,QAAQ,CAAE,kBAAAO,CAAC,QAAID,CAAAA,YAAY,CAACC,CAAD,CAAIwB,MAAM,CAACvB,GAAX,CAAhB,EALf,8EAHJ,CADG,EADX,CADJ,CAiBH,CA1CM,C","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button } from '../Button'\r\nimport { HelperText } from '../paper'\r\nimport { Model } from '@triframe/arbiter-react'\r\nimport { View } from 'react-native'\r\n\r\n\r\nexport const FileInput = ({ onChange = () => void (0), multiple = false, path = false, children = 'Upload', ...props }) => {\r\n    const [filenames, changeFilenames] = useState('')\r\n    const handleChange = (e, url) => {\r\n        const names = [];\r\n        const input = e.target;\r\n        const form = new FormData;\r\n        for (let index = 0; index < input.files.length; index++) {\r\n            let file = input.files[index]\r\n            names.push(file.name)\r\n            form.append(index, file);\r\n        }\r\n        changeFilenames(names.join(', '))\r\n        form.append('length', input.files.length)\r\n        form.append('path', path)\r\n        fetch(`${url}/upload`, {\r\n            method: 'POST',\r\n            body: form\r\n        })\r\n            .then(res => res.json())\r\n            .then(urls => {\r\n                onChange(multiple ? urls : urls[0])\r\n            })\r\n    }\r\n    let input;\r\n    let chooseFile = () => input.click()\r\n    return (\r\n        <Model.Consumer>\r\n            {models =>\r\n                <View>\r\n                    <Button onPress={chooseFile} {...props}>{children}</Button>\r\n                    <HelperText>{filenames}</HelperText>\r\n                    <input\r\n                        style={{ display: 'none' }}\r\n                        ref={x => input = x}\r\n                        type=\"file\"\r\n                        multiple={multiple}\r\n                        onChange={e => handleChange(e, models.url)}\r\n                    />\r\n                </View>\r\n            }\r\n        </Model.Consumer>\r\n    )\r\n}"],"file":"index.web.js"}