{"version":3,"sources":["../src/Provider.js"],"names":["Model","React","createContext","areReady","Provider","props","displayError","Main","children","url","storage","localStorage","error","models","saveModels","then","window","Object","assign","resetSocket","io","socket","reconnect","savedContexts","createUseContext","useRouter","useParams","context","pipe","cached","find","useContext","Api","payload","Pipe","push","tether","Component","ConnectedComponent","history","match","location","jsx","propsArray","values","processedProps","agent","EventEmitter","data","dispatch","getHistory","emit","on","getParams","params","forEach","prop","includes","whileLoading","redirect","path","defaultErrorHandler","err","handleError","onError","callback","catchErrors","args","result","Promise","catch","runAfterRender","runAfterFirstRender","afterRender","afterFirstRender","forceReload","x","observe","destroy","undefined","createObservable","resource","monitor","node","isPlain","key","value","defineProperty","enumerable","get","set","newValue","crawl","primativeTypes","constructor","name","obj"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { withRouter } from 'react-router'\r\nimport { Pipe, EventEmitter, each } from '@triframe/core';\r\nimport { connect } from '@triframe/arbiter'\r\nimport { Router } from './Router'\r\n\r\n\r\nexport const Model = React.createContext({ areReady: false })\r\n\r\nexport const Provider = (props) => (\r\n    <Router>\r\n        <Main {...props} />\r\n    </Router>\r\n)\r\n\r\n\r\nlet displayError;\r\n\r\nconst Main = ({ children, url,storage = null }) => {\r\n    if(storage === null && typeof localStorage !== 'undefined') storage = localStorage\r\n    let error;\r\n    ([error, displayError] = useState(false))\r\n    let [models, saveModels] = useState({ areReady: false })\r\n    useEffect(() => {\r\n        connect(url, { storage }).then(models => {\r\n            saveModels(models)\r\n            if (typeof window !== 'undefined') Object.assign(window, models)\r\n        })\r\n        if (typeof window !== 'undefined') window.resetSocket = () => {\r\n            io.socket.reconnect()\r\n        }\r\n    }, [])\r\n    return (\r\n        <Model.Provider value={models}>\r\n            {children}\r\n        </Model.Provider>\r\n    )\r\n}\r\n\r\nconst savedContexts = []\r\n\r\nconst createUseContext = ({models, useRouter, useParams }) => context => {\r\n    let pipe;\r\n    let cached = savedContexts.find(cached => cached.context === context)\r\n    if (cached) {\r\n        pipe = cached.pipe\r\n    } else {\r\n        let useContext = createUseContext({useRouter, useParams, models})\r\n        let Api = models\r\n        let payload = { Api, models, useContext, useRouter, useParams }\r\n        pipe = new Pipe(() => context(payload))\r\n        savedContexts.push({ context, pipe })\r\n    }\r\n    return pipe\r\n}\r\n\r\nexport const tether = Component => props => {\r\n    return (\r\n        <Model.Consumer>\r\n            {models => <ConnectedComponent props={props} models={models} Component={Component} />}\r\n        </Model.Consumer>\r\n    )\r\n}\r\n\r\nlet ConnectedComponent = withRouter(({ props = [], models, Component, history, match, location }) => {\r\n    let jsx = null\r\n    let pipe = null\r\n\r\n    let propsArray = Object.values(props) //.map(prop => JSON.stringify(prop))\r\n\r\n    const [processedProps] = useState([])\r\n\r\n    const [agent] = useState(new EventEmitter)\r\n\r\n    const [data, dispatch] = useState({ jsx, pipe });\r\n\r\n    ({ jsx, pipe } = data)\r\n\r\n    const getHistory = (emit) => {\r\n        emit({ history, match })\r\n        agent.on('history', ({ history, match }) => emit({ history, match }))\r\n    }\r\n\r\n    const getParams = (emit) => {\r\n        emit(match.params)\r\n        agent.on('history', ({ history, match }) => emit(match.params))\r\n    }\r\n\r\n    useEffect(() => {\r\n        agent.emit('history', { history, match })\r\n    }, [match])\r\n\r\n    useEffect(() => {\r\n        agent.emit('props', props)\r\n        propsArray.forEach(prop => {\r\n            if (prop && typeof prop.on === 'function' && !processedProps.includes(prop)) {\r\n                processedProps.push(prop)\r\n                prop.on('Δ.changed', () => {\r\n                    agent.emit('props', props)\r\n                })\r\n            }\r\n        })\r\n    }, propsArray)\r\n\r\n    useEffect(() => {\r\n\r\n        if (models.areReady === false) return\r\n\r\n        let whileLoading = (jsx) => dispatch({ jsx })\r\n\r\n        let useRouter = () => new Pipe(getHistory)\r\n        let useParams = () => new Pipe(getParams)\r\n        let useContext = createUseContext({models, useRouter, useParams })\r\n        let redirect = path => history.push(path)\r\n\r\n        let defaultErrorHandler = (err) => {\r\n            displayError(err)\r\n        }\r\n\r\n        let handleError = defaultErrorHandler\r\n\r\n        let onError = callback => handleError = err => callback(err, defaultErrorHandler)\r\n\r\n        let catchErrors = callback => (...args) => {\r\n            try {\r\n                let result = callback(...args)\r\n                if (result instanceof Promise) result.catch(handleError)\r\n            } catch (err) {\r\n                handleError(err)\r\n            }\r\n        }\r\n\r\n        let runAfterRender, runAfterFirstRender;\r\n        let afterRender = callback => runAfterRender = callback\r\n        let afterFirstRender = callback => runAfterFirstRender = callback\r\n    \r\n        let Api = models\r\n\r\n        let payload = { Api, models, props, redirect, useContext, useRouter, useParams, whileLoading, onError, catchErrors, afterRender, afterFirstRender }\r\n\r\n        agent.on('props', props => {\r\n            payload.props = props\r\n            if (pipe) pipe.forceReload()\r\n        })\r\n\r\n        pipe = new Pipe((x) => Component(payload), payload)//.debounce()\r\n\r\n        pipe.observe(jsx => {\r\n            dispatch({ jsx, runAfterRender, runAfterFirstRender, pipe })\r\n        })\r\n\r\n        pipe.catch(err => { throw err })\r\n        return () => pipe && pipe.destroy()\r\n\r\n    }, [models.areReady])\r\n    useEffect(() => {\r\n        if (typeof data.runAfterRender == 'function') data.runAfterRender()\r\n    })\r\n    useEffect(() => {\r\n        if (typeof data.runAfterFirstRender == 'function') data.runAfterFirstRender()\r\n    }, [ data.runAfterFirstRender !== undefined ])\r\n    return jsx\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet createObservable = resource => {\r\n    const agent = new EventEmitter;\r\n    const monitor = node => {\r\n        if (typeof node.on === 'function') node.on('Δ.change', () => agent.emit(`change`))\r\n        else if(isPlain(node)) each(node, (key, value) => {\r\n            Object.defineProperty(node, key, {\r\n                enumerable: true,\r\n                get: () => value,\r\n                set: newValue => {\r\n                    value = newValue\r\n                    agent.emit(`change`)\r\n                }\r\n            })\r\n        })\r\n    }\r\n    crawl(resource, monitor)\r\n    return agent.on('change')\r\n}\r\nconst primativeTypes = ['String', 'Boolean', 'Number', 'Date', 'Function']\r\nconst isPlain = value => value && typeof value === 'object' && !primativeTypes.includes(value.constructor.name) && typeof value.on !== 'function'\r\nconst crawl = (obj, callback) => {\r\n    callback(obj)\r\n    if (isPlain(obj)) {\r\n        for (let key in obj) {\r\n            callback(obj[key])\r\n            let value = obj[key]\r\n            crawl(value, callback)\r\n        }\r\n    }\r\n}"],"file":"Provider.js"}