{"version":3,"sources":["../../../src/utils/fs/copy.js"],"names":["copy","source","dest","options","Promise","callback","cback","value","setTimeout","basePath","process","cwd","currentPath","path","resolve","targetPath","filter","rename","transform","clobber","modified","dereference","errs","started","finished","running","limit","startCopy","RegExp","test","cb","getStats","stat","fs","lstat","setImmediate","err","stats","item","onError","name","mode","mtime","atime","isDirectory","onDir","isFile","onFile","isSymbolicLink","onLink","file","target","replace","isWritable","writable","copyFile","rmFile","getTime","readStream","createReadStream","writeStream","createWriteStream","on","pipe","once","utimesSync","done","unlink","dir","mkDir","copyDir","mkdir","readdir","items","forEach","join","link","readlink","resolvedPath","checkLink","makeLink","targetDest","linkPath","symlink","code","stopOnError","write","push","stack","skipped","undefined"],"mappings":"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","sourcesContent":["import fs from 'fs'\r\nimport path from 'path'\r\n\r\nexport function copy(source, dest) {\r\n    let options = {}\r\n    return new Promise(callback => {\r\n        var cback = value => setTimeout(() => callback(value), 1000);    \r\n        var basePath = process.cwd(),\r\n            currentPath = path.resolve(basePath, source),\r\n            targetPath = path.resolve(basePath, dest),\r\n            filter = options.filter,\r\n            rename = options.rename,\r\n            transform = options.transform,\r\n            clobber = options.clobber !== false,\r\n            modified = options.modified,\r\n            dereference = options.dereference,\r\n            errs = null,\r\n            started = 0,\r\n            finished = 0,\r\n            running = 0,\r\n            limit = options.limit || 16;\r\n\r\n        limit = (limit < 1) ? 1 : (limit > 512) ? 512 : limit;\r\n\r\n        startCopy(currentPath);\r\n\r\n        function startCopy(source) {\r\n            started++;\r\n            if (filter) {\r\n                if (filter instanceof RegExp) {\r\n                    if (!filter.test(source)) {\r\n                        return cb(true);\r\n                    }\r\n                }\r\n                else if (typeof filter === 'function') {\r\n                    if (!filter(source)) {\r\n                        return cb(true);\r\n                    }\r\n                }\r\n            }\r\n            return getStats(source);\r\n        }\r\n\r\n        function getStats(source) {\r\n            var stat = dereference ? fs.stat : fs.lstat;\r\n            if (running >= limit) {\r\n                return setImmediate(function () {\r\n                    getStats(source);\r\n                });\r\n            }\r\n            running++;\r\n            stat(source, function (err, stats) {\r\n                var item = {};\r\n                if (err) {\r\n                    return onError(err);\r\n                }\r\n\r\n                // We need to get the mode from the stats object and preserve it.\r\n                item.name = source;\r\n                item.mode = stats.mode;\r\n                item.mtime = stats.mtime; //modified time\r\n                item.atime = stats.atime; //access time\r\n\r\n                if (stats.isDirectory()) {\r\n                    return onDir(item);\r\n                }\r\n                else if (stats.isFile()) {\r\n                    return onFile(item);\r\n                }\r\n                else if (stats.isSymbolicLink()) {\r\n                    // Symlinks don't really need to know about the mode.\r\n                    return onLink(source);\r\n                }\r\n            });\r\n        }\r\n\r\n        function onFile(file) {\r\n            var target = file.name.replace(currentPath, targetPath);\r\n            if (rename) {\r\n                target = rename(target);\r\n            }\r\n            isWritable(target, function (writable) {\r\n                if (writable) {\r\n                    return copyFile(file, target);\r\n                }\r\n                if (clobber) {\r\n                    return rmFile(target, function () {\r\n                        copyFile(file, target);\r\n                    });\r\n                }\r\n                if (modified) {\r\n                    var stat = dereference ? fs.stat : fs.lstat;\r\n                    stat(target, function (err, stats) {\r\n                        //if souce modified time greater to target modified time copy file\r\n                        if (file.mtime.getTime() > stats.mtime.getTime())\r\n                            copyFile(file, target);\r\n                        else return cb();\r\n                    });\r\n                }\r\n                else {\r\n                    return cb();\r\n                }\r\n            });\r\n        }\r\n\r\n        function copyFile(file, target) {\r\n            var readStream = fs.createReadStream(file.name),\r\n                writeStream = fs.createWriteStream(target, { mode: file.mode });\r\n\r\n            readStream.on('error', onError);\r\n            writeStream.on('error', onError);\r\n\r\n            if (transform) {\r\n                transform(readStream, writeStream, file);\r\n            } else {\r\n                writeStream.on('open', function () {\r\n                    readStream.pipe(writeStream);\r\n                });\r\n            }\r\n            writeStream.once('finish', function () {\r\n                if (modified) {\r\n                    //target file modified date sync.\r\n                    fs.utimesSync(target, file.atime, file.mtime);\r\n                    cb();\r\n                }\r\n                else cb();\r\n            });\r\n        }\r\n\r\n        function rmFile(file, done) {\r\n            fs.unlink(file, function (err) {\r\n                if (err) {\r\n                    return onError(err);\r\n                }\r\n                return done();\r\n            });\r\n        }\r\n\r\n        function onDir(dir) {\r\n            var target = dir.name.replace(currentPath, targetPath);\r\n            isWritable(target, function (writable) {\r\n                if (writable) {\r\n                    return mkDir(dir, target);\r\n                }\r\n                copyDir(dir.name);\r\n            });\r\n        }\r\n\r\n        function mkDir(dir, target) {\r\n            fs.mkdir(target, dir.mode, function (err) {\r\n                if (err) {\r\n                    return onError(err);\r\n                }\r\n                copyDir(dir.name);\r\n            });\r\n        }\r\n\r\n        function copyDir(dir) {\r\n            fs.readdir(dir, function (err, items) {\r\n                if (err) {\r\n                    return onError(err);\r\n                }\r\n                items.forEach(function (item) {\r\n                    startCopy(path.join(dir, item));\r\n                });\r\n                return cb();\r\n            });\r\n        }\r\n\r\n        function onLink(link) {\r\n            var target = link.replace(currentPath, targetPath);\r\n            fs.readlink(link, function (err, resolvedPath) {\r\n                if (err) {\r\n                    return onError(err);\r\n                }\r\n                checkLink(resolvedPath, target);\r\n            });\r\n        }\r\n\r\n        function checkLink(resolvedPath, target) {\r\n            if (dereference) {\r\n                resolvedPath = path.resolve(basePath, resolvedPath);\r\n            }\r\n            isWritable(target, function (writable) {\r\n                if (writable) {\r\n                    return makeLink(resolvedPath, target);\r\n                }\r\n                fs.readlink(target, function (err, targetDest) {\r\n                    if (err) {\r\n                        return onError(err);\r\n                    }\r\n                    if (dereference) {\r\n                        targetDest = path.resolve(basePath, targetDest);\r\n                    }\r\n                    if (targetDest === resolvedPath) {\r\n                        return cb();\r\n                    }\r\n                    return rmFile(target, function () {\r\n                        makeLink(resolvedPath, target);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n\r\n        function makeLink(linkPath, target) {\r\n            fs.symlink(linkPath, target, function (err) {\r\n                if (err) {\r\n                    return onError(err);\r\n                }\r\n                return cb();\r\n            });\r\n        }\r\n\r\n        function isWritable(path, done) {\r\n            fs.lstat(path, function (err) {\r\n                if (err) {\r\n                    if (err.code === 'ENOENT') return done(true);\r\n                    return done(false);\r\n                }\r\n                return done(false);\r\n            });\r\n        }\r\n\r\n        function onError(err) {\r\n            if (options.stopOnError) {\r\n                return cback(err);\r\n            }\r\n            else if (!errs && options.errs) {\r\n                errs = fs.createWriteStream(options.errs);\r\n            }\r\n            else if (!errs) {\r\n                errs = [];\r\n            }\r\n            if (typeof errs.write === 'undefined') {\r\n                errs.push(err);\r\n            }\r\n            else {\r\n                errs.write(err.stack + '\\n\\n');\r\n            }\r\n            return cb();\r\n        }\r\n\r\n        function cb(skipped) {\r\n            if (!skipped) running--;\r\n            finished++;\r\n            if ((started === finished) && (running === 0)) {\r\n                if (cback !== undefined) {\r\n                    return errs ? cback(errs) : cback(null);\r\n                }\r\n            }\r\n        }\r\n    })\r\n}"],"file":"copy.js"}