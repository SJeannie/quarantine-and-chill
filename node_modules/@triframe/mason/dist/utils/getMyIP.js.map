{"version":3,"sources":["../../src/utils/getMyIP.js"],"names":["networkInterfaces","require","getMyIP","interfaces","devName","iface","i","length","alias","family","address","internal","Error"],"mappings":";;;;;;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAwBC,OAAO,CAAC,IAAD,CAArC;;AAEO,MAAMC,OAAO,WAAPA,OAAO,GAAG,MAAM;AACzB,QAAMC,UAAU,GAAGH,iBAAiB,EAApC;;AACA,OAAK,IAAII,OAAT,IAAoBD,UAApB,EAAgC;AAC9B,QAAIE,KAAK,GAAGF,UAAU,CAACC,OAAD,CAAtB;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAIE,KAAK,GAAGH,KAAK,CAACC,CAAD,CAAjB;AACA,UAAIE,KAAK,CAACC,MAAN,KAAiB,MAAjB,IAA2BD,KAAK,CAACE,OAAN,KAAkB,WAA7C,IAA4D,CAACF,KAAK,CAACG,QAAvE,EACE,OAAOH,KAAK,CAACE,OAAb;AACH;AACF;;AACD,QAAME,KAAK,CAAC,4DAAD,CAAX;AACH,CAZM","sourcesContent":["const { networkInterfaces } = require('os');\r\n\r\nexport const getMyIP = () => {\r\n    const interfaces = networkInterfaces();\r\n    for (var devName in interfaces) {\r\n      var iface = interfaces[devName];\r\n  \r\n      for (var i = 0; i < iface.length; i++) {\r\n        var alias = iface[i];\r\n        if (alias.family === 'IPv4' && alias.address !== '127.0.0.1' && !alias.internal)\r\n          return alias.address;\r\n      }\r\n    }\r\n    throw Error('Cannot run TriFrame on Native without a network connection')\r\n}"],"file":"getMyIP.js"}