{"version":3,"sources":["../../src/utils/state.js"],"names":["STATE_STORAGE_PATH","getState","result","fs","readFile","path","resolve","JSON","parse","err","saveState","state","writeFile","stringify"],"mappings":";;;;;;;AAAA;;;;;;;;AAEO,MAAMA,kBAAkB,WAAlBA,kBAAkB,GAAG,WAA3B;;AAEA,MAAMC,QAAQ,WAARA,QAAQ,GAAG,YAAY;AAChC,MAAI;AACA,QAAIC,MAAM,GAAG,MAAMC,KAAGC,QAAH,CAAYC,OAAKC,OAAL,CAAaN,kBAAb,CAAZ,CAAnB;AACA,WAAOO,IAAI,CAACC,KAAL,CAAWN,MAAX,CAAP;AACH,GAHD,CAGE,OAAOO,GAAP,EAAY;AACV,WAAO,EAAP;AACH;AACJ,CAPM;;AASA,MAAMC,SAAS,WAATA,SAAS,GAAG,MAAOC,KAAP,IAAiB;AACtCA,EAAAA,KAAK,mCAAQ,MAAMV,QAAQ,EAAtB,GAA6BU,KAA7B,CAAL;AACA,SAAOR,KAAGS,SAAH,CAAaP,OAAKC,OAAL,CAAaN,kBAAb,CAAb,EAA+CO,IAAI,CAACM,SAAL,CAAeF,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAA/C,CAAP;AACH,CAHM","sourcesContent":["import { fs, path } from '.'\r\n\r\nexport const STATE_STORAGE_PATH = '.triframe'\r\n\r\nexport const getState = async () => {\r\n    try {\r\n        let result = await fs.readFile(path.resolve(STATE_STORAGE_PATH))\r\n        return JSON.parse(result)\r\n    } catch (err) {\r\n        return {}\r\n    }\r\n}\r\n\r\nexport const saveState = async (state) => {\r\n    state = { ...await getState(), ...state }\r\n    return fs.writeFile(path.resolve(STATE_STORAGE_PATH), JSON.stringify(state, null, 2))\r\n}\r\n"],"file":"state.js"}