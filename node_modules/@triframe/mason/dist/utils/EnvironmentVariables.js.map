{"version":3,"sources":["../../src/utils/EnvironmentVariables.js"],"names":["isWindows","process","platform","test","env","OSTYPE","EnvironmentVariables","toString","variables","Object","keys","setVariable","variable","reduce","string"],"mappings":";;;;;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAArB,IAAgC,kBAAkBC,IAAlB,CAAuBF,OAAO,CAACG,GAAR,CAAYC,MAAnC,CAAlD;;AAEO,MAAMC,oBAAN,CAA2B;AAE9BC,EAAAA,QAAQ,GAAE;AACN,QAAIC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAhB;;AAEA,QAAIC,WAAW,GAAGC,QAAQ,IAAIZ,SAAS,GAChC,OAAMY,QAAS,IAAG,KAAKA,QAAL,CAAe,KADD,GAEhC,GAAEA,QAAS,IAAG,KAAKA,QAAL,CAAe,EAFpC;;AAIA,WAAOJ,SAAS,CAACK,MAAV,CAAiB,CAACC,MAAD,EAASF,QAAT,KAAuB,GAAEE,MAAO,GAAEH,WAAW,CAACC,QAAD,CAAW,GAAzE,EAA6E,EAA7E,CAAP;AACH;;AAV6B;;QAArBN,oB,GAAAA,oB","sourcesContent":["const isWindows = process.platform === 'win32' || /^(msys|cygwin)$/.test(process.env.OSTYPE)\r\n\r\nexport class EnvironmentVariables {\r\n\r\n    toString(){\r\n        let variables = Object.keys(this)\r\n        \r\n        let setVariable = variable => isWindows \r\n            ? `set ${variable}=${this[variable]} &&`\r\n            : `${variable}=${this[variable]}`\r\n\r\n        return variables.reduce((string, variable) => `${string}${setVariable(variable)} `, '')\r\n    }\r\n\r\n}"],"file":"EnvironmentVariables.js"}