{"version":3,"sources":["../../../src/adapters/GoogleCloud/index.js"],"names":["GoogleCloud","requiresRelease","dependencyCheck","getOptions","name","gcProjectName","gcRegion"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,WAAW,WAAXA,WAAW,GAAG;AAEvBC,EAAAA,eAAe,EAAE,IAFM;AAIvBC,EAAAA,eAAe,EAAE,YAAY,CAE5B,CANsB;AAQvBC,EAAAA,UAAU,EAAE,YAAY;AACpB,QAAI;AAAEC,MAAAA;AAAF,QAAW,MAAM,sBAArB;AAEA,QAAIC,aAAa,GAAG,MAAM,mBAAQ,8HAA6HD,IAAK,GAA1I,CAA1B;AACA,QAAIE,QAAQ,GAAG,MAAM,mBAAQ,wDAAR,CAArB;AAEA,QAAGD,aAAa,IAAI,EAApB,EAAwBA,aAAa,GAAGD,IAAhB;AACxB,QAAGE,QAAQ,IAAI,EAAf,EAAmBA,QAAQ,GAAG,aAAX;AAEnB,WAAO;AAAED,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAP;AACH;AAlBsB,CAApB","sourcesContent":["import { prompt, getState } from \"../../utils\"\r\n\r\nexport const GoogleCloud = {\r\n\r\n    requiresRelease: true,\r\n\r\n    dependencyCheck: async () => {\r\n\r\n    },\r\n    \r\n    getOptions: async () => {\r\n        let { name } = await getState()\r\n\r\n        let gcProjectName = await prompt(`What would you like to name the Google Cloud project? A new project with this name will be created if none already exists (${name})`)\r\n        let gcRegion = await prompt(`What region would you like to deploy to? (us-central1)`)\r\n\r\n        if(gcProjectName == '') gcProjectName = name\r\n        if(gcRegion == '') gcRegion = 'us-central1'\r\n\r\n        return { gcProjectName, gcRegion }\r\n    }\r\n\r\n}"],"file":"index.js"}