"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _core = require("@triframe/core");

var _utils = require("../../utils");

exports.default = async (...args) => {
  let inputs = {};
  let defaults = '';
  var [path, Name, ...instructions] = args;
  let Model = Name;
  if (Name.includes(':')) [Model, Name] = Name.split(':');
  let model = Model.toLowerCase();
  let fields = instructions.reduce((fields, part, index) => {
    let Input = 'TextInput';
    let [name, defaultValue = ''] = part.split('=');
    if (name.includes(':')) [Input, name] = name.split(':');
    if (Number.isNaN(defaultValue) || defaultValue === "") defaultValue = `"${defaultValue}"`;
    inputs[Input] = true;
    let label = (0, _core.toTitleCase)(name);
    defaults = `${defaults}\n        ${name}: ${defaultValue},`;
    fields = `${fields}
<${Input}
    label="${label}"
    value={${model}.${name}}
    onChange={${name} => {
        hideErrorsFor('${name}')
        ${model}.${name} = ${name} 
    }}
/>
<HelperText visible={shouldShowErrorsFor('${name}')} type="error">
    {errorMessageFor('${name}')}
</HelperText>`;
    return fields;
  }, '');
  var code = `import React from 'react'
import { tether, Container, Title, Button, HelperText, ${Object.keys(inputs).join(', ')} } from '@triframe/designer'

export const ${(0, _core.toPascalCase)(Name)} = tether(function*({ models, props, useContext, useRouter, redirect }) {

const { ${Model} } = models

const global = yield { errorMessage: '' }

const ${model} = yield new ${Model}({${defaults}
})

const { errorMessageFor, shouldShowErrorsFor, hideErrorsFor, showAllErrors, isValid } = ${model}.validation

const handleSubmit = () => {
if(isValid){
try {
    console.log('Submitted', ${model})
} catch (err){
    global.errorMessage = err.message
}
} else {
showAllErrors()
}
}

return (
<Container>
<Title>${(0, _core.toTitleCase)(Name)}</Title>
<HelperText visible={global.errorMessage.length > 0} type="error">
    {global.errorMessage}
</HelperText>${fields}
<Button onPress={handleSubmit}>
    Submit
</Button>
</Container>
)
})`;

  _utils.fs.writeFile(`./${path}.js`, code);
};
//# sourceMappingURL=form.js.map