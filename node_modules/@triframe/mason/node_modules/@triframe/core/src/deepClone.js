import { map } from './iterators';

export function deepClone(obj) {
    switch (typeof obj) {
        case "object":
            if(!obj) return obj

            if(obj['[[attributes]]']){
                return obj
                // let Class = obj.constructor
                // let attributes = _deepClone(obj['[[attributes]]'])
                // return new Class(attributes)
            }

            if(Array.isArray(obj)){
                return obj.map(deepClone)
            }

            return map(obj, (k, value) => deepClone(value))
        case "undefined":
            return null; //this is how JSON.stringify behaves for array items
        default:
            return obj; //no need to clone primitives
    }
}