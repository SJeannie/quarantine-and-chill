{"version":3,"sources":["../src/Resource.js"],"names":["batchFlag","Symbol","Resource","EventEmitter","on","event","callback","Array","isArray","map","name","events","emit","args","console","log","nowAndOn","startBatchUpdate","commitBatchUpdate","constructor","attributes","Object","defineProperty","writable","enumerable","value","uid","id","undefined","validation","for","set","patches","key","patch","op","path","push","assign","prototype","createResourceValidator","handlers","resource","showValidation","hasErrors","propertyName","errorsFor","length","validators","property","errors","label","forEach","validator","call","addHandler","errorMessageFor","lastError","pop","join","shouldShowErrorsFor","showErrorsFor","hideErrorsFor","showAllErrors","hideAllErrors","isInvalid","isValid"],"mappings":"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","sourcesContent":["import { EventEmitter } from './EventEmitter'\r\nimport { each } from './iterators'\r\nimport { toTitleCase, toHumanized, toUnderscored } from './inflection'\r\nimport { deepClone } from './deepClone'\r\n\r\n\r\nconst batchFlag = Symbol()\r\n\r\nexport class Resource extends EventEmitter {\r\n\r\n    static events = new EventEmitter\r\n\r\n    static on(event, callback){\r\n        if(Array.isArray(event)) event = event.map(event => `${this.name}.${event}`)\r\n        else event = `${this.name}.${event}`\r\n        return this.events.on(event, callback)\r\n    }\r\n\r\n    static emit(event, ...args){\r\n        console.log(`Emitting: ${this.name}.${event}`)\r\n        return this.events.emit(`${this.name}.${event}`, ...args)\r\n    }\r\n\r\n    static nowAndOn(event, callback){\r\n        if(Array.isArray(event)) event = event.map(event => `${this.name}.${event}`)\r\n        else event = `${this.name}.${event}`\r\n        return this.events.nowAndOn(event, callback)\r\n    }\r\n\r\n    emit(event, ...args){\r\n        if(this[batchFlag] && event == 'Δ.change') return null\r\n        else return super.emit(event, ...args)\r\n    }\r\n\r\n    startBatchUpdate(){\r\n        this[batchFlag] = true\r\n    }\r\n\r\n    commitBatchUpdate(){\r\n        this[batchFlag] = false\r\n        this.emit('Δ.change')\r\n    }\r\n\r\n    constructor(attributes = {}) {\r\n        super()\r\n          // [[base]] + [[patches]] = [[attributes]]\r\n\r\n        Object.defineProperty(this, '[[attributes]]', {\r\n            writable: true,\r\n            enumerable: false,\r\n            value: attributes\r\n        })\r\n        Object.defineProperty(this, '[[base]]', {\r\n            writable: true,\r\n            enumerable: false,\r\n            value: deepClone(attributes)\r\n        })\r\n        Object.defineProperty(this, '[[patches]]', {\r\n            writable: true,\r\n            enumerable: false,\r\n            value: []\r\n        })\r\n        Object.defineProperty(this, '[[batch]]', {\r\n            writable: true,\r\n            enumerable: false,\r\n            value: 1\r\n        })\r\n        Object.defineProperty(this, '[[syncRate]]', {\r\n            writable: true,\r\n            enumerable: false,\r\n            value: 0\r\n        })\r\n        Object.defineProperty(this, 'toJSON', {\r\n            value: function(){\r\n                return this['[[attributes]]']\r\n            }\r\n        })\r\n        Resource.events.emit('initialized', this)\r\n    }\r\n\r\n    get uid() {\r\n        return this.id !== undefined\r\n            ? `${this.constructor.name}.${this.id}`\r\n            : null\r\n    }\r\n\r\n    get validation() {\r\n        return this['[[validation]]'].for(this)\r\n    }\r\n\r\n\r\n    set(attributes) {\r\n        let patches = []\r\n        each(attributes, ( key, value ) => {\r\n            let patch = {\r\n                op: 'replace',\r\n                path: `/${key}`,\r\n                value\r\n            }\r\n            patches.push(patch)\r\n        })\r\n        this.emit('Δ.change', patches)\r\n        this['[[patches]]'].push(...patches)\r\n        Object.assign(this['[[attributes]]'], attributes)\r\n    }\r\n\r\n}\r\n\r\nObject.defineProperty(Resource.prototype, '[[validation]]', {\r\n    writable: true,\r\n    enumerable: false,\r\n    value: createResourceValidator()\r\n})\r\n\r\nfunction createResourceValidator() {\r\n\r\n    let handlers = {};\r\n\r\n    return {\r\n        handlers,\r\n        for: (resource) => { \r\n            \r\n            if(!resource['[[validationState]]']) Object.defineProperty(resource, '[[validationState]]', {\r\n                enumerable: false,\r\n                value: {}\r\n            })\r\n            \r\n            let showValidation = resource['[[validationState]]'];\r\n\r\n            const hasErrors = (propertyName) => {\r\n                return errorsFor(propertyName).length > 0\r\n            }\r\n\r\n            const errorsFor = (propertyName) => {\r\n                const validators = handlers[propertyName]\r\n                if (validators !== undefined) {\r\n                    const property = resource[propertyName]\r\n                    const errors = []\r\n                    const label = toTitleCase(propertyName)\r\n                    validators.forEach(validator => validator.call(resource, { property, label, errors, resource }))\r\n                    return errors\r\n                } else {\r\n                    return []\r\n                }\r\n            }\r\n\r\n            const validator = {\r\n\r\n                addHandler: (propertyName, validator) => {\r\n                    handlers[propertyName] = handlers[propertyName] || []\r\n                    handlers[propertyName].push(validator)\r\n                },\r\n\r\n                errorMessageFor: (propertyName, label = toTitleCase(toHumanized(toUnderscored(propertyName)))) => {\r\n                    let errors = errorsFor(propertyName)\r\n                    if(errors.length === 0) return ' '\r\n                    if(errors.length === 1) return `${label} ${errors[0]}`\r\n                    let lastError = errors.pop()\r\n                    return `${label} ${errors.join(', ')} and ${lastError}`\r\n                },\r\n\r\n                shouldShowErrorsFor: (propertyName) => {\r\n                    return showValidation[propertyName] === true && hasErrors(propertyName)\r\n                },\r\n\r\n                showErrorsFor: (propertyName) => {\r\n                    showValidation[propertyName] = true\r\n                    resource.emit('Δ.change')\r\n                },\r\n\r\n                hideErrorsFor: (propertyName) => {\r\n                    showValidation[propertyName] = false\r\n                    //resource.emit('Δ.change')\r\n                },\r\n\r\n                showAllErrors: () => {\r\n                    each(handlers, propertyName => {\r\n                        showValidation[propertyName] = true\r\n                    })\r\n                    resource.emit('Δ.change')\r\n                },\r\n\r\n                hideAllErrors: () => {\r\n                    each(handlers, propertyName => {\r\n                        showValidation[propertyName] = false\r\n                    })\r\n                    resource.emit('Δ.change')\r\n                },\r\n\r\n                get isInvalid() {\r\n                    let isInvalid = false\r\n                    each(handlers, propertyName => {\r\n                        isInvalid = isInvalid || hasErrors(propertyName)\r\n                    })\r\n                    return isInvalid\r\n                },\r\n\r\n                get isValid() {\r\n                    return !validator.isInvalid\r\n                }\r\n            }\r\n            return validator\r\n        }\r\n    }\r\n}"],"file":"Resource.js"}