{"version":3,"sources":["../src/List.js"],"names":["List","Array","constructor","elements","push","Object","defineProperty","enumerable","value","EventEmitter","map","callback","thisArg","undefined","result","forEach","element","index","call","on","args","emit","length","patches","op","path","createObservable","observe","_splice","splice","deleted","origin","Math","min","replacementPatches","i","removedPatches","additionPatches","insert","patch","replace","mapInPlace","remove","start","end","resource","agent","monitor","node","isPlain","key","get","set","newValue","crawl","primativeTypes","includes","name","obj"],"mappings":"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","sourcesContent":["import { EventEmitter } from './EventEmitter'\r\nimport { each } from './iterators'\r\n\r\nexport class List extends Array {\r\n\r\n    constructor(...elements) {\r\n        super()\r\n        super.push(...elements)\r\n        Object.defineProperty(this, '[[patches]]', {\r\n            enumerable: false,\r\n            value: []\r\n        })\r\n        Object.defineProperty(this, '[[events]]', {\r\n            enumerable: false,\r\n            value: new EventEmitter\r\n        })\r\n    }\r\n\r\n    map(callback, thisArg = undefined){\r\n        let result = new List\r\n        this.forEach( (element, index) => {\r\n            result[index] = callback.call(thisArg, element, index, this)\r\n        })\r\n        return result\r\n    }\r\n\r\n    on(...args) {\r\n        return this['[[events]]'].on(...args)\r\n    }\r\n\r\n    emit(...args) {\r\n        return this['[[events]]'].emit(...args)\r\n    }\r\n\r\n    push(...elements) {\r\n        let length = this.length\r\n        let patches = elements.map(element => ({\r\n            op: 'add',\r\n            path: `/${length++}`,\r\n            value: element\r\n        }))\r\n        createObservable(elements).observe( () => this.emit('Δ.change', []))\r\n        this[\"[[patches]]\"].push(...patches)\r\n        super.push(...elements)\r\n        this.emit('Δ.change', patches)\r\n    }\r\n\r\n    _splice(...args){\r\n        return super.splice(...args)\r\n    }\r\n\r\n    splice(index, deleted, ...elements) {\r\n        super.splice(index, deleted, ...elements)\r\n        \r\n        let origin = Math.min(deleted + index, elements.length + index)\r\n    \r\n        let replacementPatches = []\r\n        for(let i = index; i < origin; i++) replacementPatches.push({\r\n            op: 'replace',\r\n            path: `/${i}`,\r\n            value: elements[i - index]\r\n        })\r\n\r\n        let removedPatches = []\r\n        for(let i = origin; i < index + deleted; i++) removedPatches.push({\r\n            op: 'remove',\r\n            path: `/${i}`,\r\n        })\r\n\r\n        let additionPatches = []\r\n        for(let i = origin; i < index + elements.length; i++) removedPatches.push({\r\n            op: 'add',\r\n            path: `/${i}`,\r\n            value: elements[i - index]\r\n        })\r\n\r\n        let patches = [ ...replacementPatches, ...removedPatches, ...additionPatches ]\r\n\r\n        this[\"[[patches]]\"].push(...patches)\r\n        this.emit('Δ.change', patches)\r\n    }\r\n\r\n    insert(element, index) {\r\n        super.splice(index, 0, element)\r\n        let patch = {\r\n            op: 'add',\r\n            path: `/${index}`,\r\n            value: element\r\n        }\r\n        this[\"[[patches]]\"].push(patch)\r\n        this.emit('Δ.change', [patch])\r\n    }\r\n\r\n\r\n    replace(index, value) {\r\n        this[index] = value\r\n        let patch = {\r\n            op: 'replace',\r\n            path: `/${index}`,\r\n            value\r\n        }\r\n        this[\"[[patches]]\"].push(patch)\r\n        this.emit('Δ.change', [patch])\r\n    }\r\n\r\n\r\n    mapInPlace(callback) {\r\n        let patches = []\r\n        this.forEach((element, index) => {\r\n            let value = callback(element, index)\r\n            if (value != element) {\r\n                this[index] = value\r\n                let patch = {\r\n                    op: 'replace',\r\n                    path: `/${index}`,\r\n                    value\r\n                }\r\n                patches.push(patch)\r\n            }\r\n        })\r\n        this[\"[[patches]]\"].push(...patches)\r\n        this.emit('Δ.change', patches)\r\n    }\r\n\r\n\r\n    remove(start, end = null) {\r\n        if (end == null) end = start\r\n        super.splice(start, 1 + end - start)\r\n        let patches = []\r\n        for (let index = start; index <= end; index++) {\r\n            patches.push({\r\n                op: 'remove',\r\n                path: `/${start}`\r\n            })\r\n        }\r\n        this[\"[[patches]]\"].push(...patches)\r\n        this.emit('Δ.change', patches)\r\n    }\r\n}\r\n\r\nlet createObservable = resource => {\r\n    const agent = new EventEmitter;\r\n    const monitor = node => {\r\n        if (typeof node.on === 'function') node.on('Δ.change', () => agent.emit(`change`))\r\n        else if(isPlain(node)) each(node, (key, value) => {\r\n            Object.defineProperty(node, key, {\r\n                enumerable: true,\r\n                get: () => value,\r\n                set: newValue => {\r\n                    value = newValue\r\n                    agent.emit(`change`)\r\n                }\r\n            })\r\n        })\r\n    }\r\n    crawl(resource, monitor)\r\n    return agent.on('change')\r\n}\r\nconst primativeTypes = ['String', 'Boolean', 'Number', 'Date', 'Function']\r\nconst isPlain = value => value && typeof value === 'object' && !primativeTypes.includes(value.constructor.name) && typeof value.on !== 'function'\r\nconst crawl = (obj, callback) => {\r\n    callback(obj)\r\n    if (isPlain(obj)) {\r\n        for (let key in obj) {\r\n            callback(obj[key])\r\n            let value = obj[key]\r\n            crawl(value, callback)\r\n        }\r\n    }\r\n}"],"file":"List.js"}