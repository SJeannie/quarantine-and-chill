"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createObservable = undefined;

var _EventEmitter = require("./EventEmitter");

var _iterators = require("./iterators");

const primativeTypes = ['String', 'Boolean', 'Number', 'Date', 'Function'];

const isPlain = value => value && typeof value === 'object' && !primativeTypes.includes(value.constructor.name);

const crawl = (obj, callback, path = "/") => {
  if (isPlain(obj)) {
    callback(obj, path);

    for (let key in obj) {
      let value = obj[key];
      crawl(value, callback, `${path}${key}/`);
    }
  }
};

const createObservable = exports.createObservable = resource => {
  const agent = new _EventEmitter.EventEmitter();

  const monitor = (node, path) => {
    if (typeof node.on === 'function') node.on('Î”.change', patches => agent.emit(`change`, patches));else (0, _iterators.each)(node, (key, value) => {
      Object.defineProperty(node, key, {
        enumerable: true,
        get: () => value,
        set: newValue => {
          value = newValue;
          agent.emit(`change`, [{
            op: 'replace',
            path: `${path}${key}`,
            value: newValue
          }]);
        }
      });
    });
  };

  crawl(resource, monitor);
  return agent.on('change');
};
//# sourceMappingURL=createObservable.js.map