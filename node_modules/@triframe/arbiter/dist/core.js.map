{"version":3,"sources":["../src/core.js"],"names":["Resource","events","on","initializeResource","resource","subscribeToChildEvents","timer","patches","emit","every","patch","isTemporary","clearTimeout","setTimeout","uid","SyncEvent","socket","batchId","what","global","forEach","otherSocket","mergePatches","err","latentMutations","jsonpatch","applyPatch","stageLatentMutations","push","unstageLatentMutations","filter","includes","stageNewPatches","stagedPatches","isNew","staged","JSONPatchOT","transform","applyPatchesToBase","createBatch","mergeBatch","rollbackPatches","hashes","JSON","stringify","attributes","deepClone","appendPatches","upstreamMerge","resource2","deepMerge","base","namespace","key","value","target","mappedPatches","map","op","path","createCache","bin","session","cache","respond","updateSuccessful","invalidPatches","updateResource","getCached","validPatches","index","split","slice","writeAccessTest","undefined","hasAccess","call","length"],"mappings":"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","sourcesContent":["import { jsonpatch, JSONPatchOT } from \"./jsonpatch\"\r\nimport { SyncEvent } from \"./SyncEvent\"\r\nimport { each, eachAsync, getMetadata, Resource } from \"@triframe/core\"\r\n\r\nResource.events.on('initialized', initializeResource)\r\n\r\nfunction initializeResource(resource){\r\n    subscribeToChildEvents(resource)\r\n    let timer;\r\n    resource.on('Δ.change', (patches) => {\r\n        resource.emit('Δ.changed')\r\n        if(patches.every(patch => patch.isTemporary)) return\r\n        if (timer) clearTimeout(timer)\r\n        timer = setTimeout(() => {\r\n            if(resource.uid) resource.emit('Δ.sync', new SyncEvent({ resource }))\r\n        }, resource['[[syncRate]]'])\r\n    })\r\n\r\n    resource.on('Δ.sync', ({ socket, patches, batchId, resource : what }) => {\r\n        // On redis sync, do the same shit. socket can be null, since it wont be attached here?\r\n        if(global[resource.uid]) global[resource.uid].forEach(({ socket: otherSocket, resource }) => {\r\n            if (socket != otherSocket) {\r\n                try{\r\n                    mergePatches(resource, patches)\r\n                    otherSocket.emit(`${resource.uid}.mergePatches`, patches)\r\n                } catch(err){\r\n                    // ?\r\n                }\r\n            }\r\n        })\r\n        if(socket) socket.emit(`${resource.uid}.mergeBatch`, batchId)\r\n    })\r\n\r\n    if (latentMutations[resource.uid]) {\r\n        jsonpatch.applyPatch(resource['[[attributes]]'], latentMutations[resource.uid])\r\n    }\r\n\r\n}\r\n\r\nconst latentMutations = {}\r\n\r\nexport const stageLatentMutations = function (resource, patches) {\r\n    latentMutations[resource.uid] = latentMutations[resource.uid] || []\r\n    latentMutations[resource.uid].push(...patches)\r\n}\r\n\r\nexport const unstageLatentMutations = function (resource, patches) {\r\n    latentMutations[resource.uid] = latentMutations[resource.uid].filter(patch => !patches.includes(patch))\r\n}\r\n\r\nexport const stageNewPatches = resource => {\r\n    if(!resource['[[patches]]']) return []\r\n    let stagedPatches = []\r\n    resource['[[patches]]'].forEach(patch => {\r\n        let isNew = !patch.staged\r\n        if (!patch.batchId) patch.batchId = resource['[[batch]]']\r\n        if (isNew) {\r\n            patch.staged = true\r\n            stagedPatches.push(patch)\r\n        }\r\n    })\r\n    return stagedPatches\r\n}\r\n\r\nexport const mergePatches = (resource, patches) => {\r\n    resource['[[patches]]'] = JSONPatchOT.transform(resource['[[patches]]'], patches)\r\n    return applyPatchesToBase(resource, patches)\r\n}\r\n\r\nexport const createBatch = resource => {\r\n    return resource['[[batch]]']++;\r\n}\r\n\r\nexport const mergeBatch = (resource, batchId) => {\r\n    let patches = resource['[[patches]]'].filter(patch => patch.batchId === batchId)\r\n    resource['[[patches]]'] = resource['[[patches]]'].filter(patch => patch.batchId !== batchId)\r\n    return applyPatchesToBase(resource, patches)\r\n}\r\n\r\nexport const rollbackPatches = (resource, patches) => {\r\n    let hashes = JSON.stringify(patches)\r\n    resource['[[patches]]'] = resource['[[patches]]'].filter(patch => !hashes.includes(JSON.stringify(patch)))\r\n    let attributes = jsonpatch.deepClone(resource['[[base]]'])\r\n    jsonpatch.applyPatch(attributes, resource['[[patches]]'])\r\n    resource['[[attributes]]'] = attributes\r\n    subscribeToChildEvents(resource)\r\n}\r\n\r\nconst appendPatches = (resource, patches) => {\r\n    if (!resource || !resource[\"[[patches]]\"]) return []\r\n    jsonpatch.applyPatch(resource['[[attributes]]'], patches)\r\n    resource[\"[[patches]]\"].push(...patches)\r\n    return patches\r\n}\r\n\r\nconst applyPatchesToBase = (resource, patches) => {\r\n    jsonpatch.applyPatch(resource['[[base]]'], patches)\r\n    let attributes = jsonpatch.deepClone(resource['[[base]]'])\r\n    jsonpatch.applyPatch(attributes, resource['[[patches]]'])\r\n    resource['[[attributes]]'] = attributes\r\n    subscribeToChildEvents(resource)\r\n    resource.emit('Δ.rebase', resource['[[base]]'])\r\n    return patches\r\n}\r\n\r\nexport const upstreamMerge = (resource, resource2) => {\r\n    let attributes = jsonpatch.deepMerge(resource['[[attributes]]'], resource2['[[attributes]]'])\r\n    let base = jsonpatch.deepMerge(resource['[[base]]'], resource2['[[base]]'])\r\n    jsonpatch.applyPatch(attributes, resource['[[patches]]'])\r\n    resource['[[base]]'] = base\r\n    resource['[[attributes]]'] = attributes\r\n    subscribeToChildEvents(resource)\r\n    resource.emit('Δ.rebase', resource['[[base]]'])\r\n}\r\n\r\n\r\n// Something about Lists are getting lost after an upstream update\r\n// Must have to do with Object.assign in unserializer and or subscribeToChildEvents; the stream get's broken?\r\n\r\nconst subscribeToChildEvents = (resource, namespace = false) => {\r\n    return\r\n    each(resource['[[attributes]]'], (key, value) => {\r\n        if (value && value.on) {\r\n            value.on('Δ.rebase', base => {\r\n                let target = resource['[[base]]']\r\n                if(namespace !== false) target = target[namespace]\r\n                target[key] = base\r\n            })\r\n            value.on('Δ.change', patches => {\r\n                const mappedPatches = patches.map(patch => ({\r\n                    op: patch.op,\r\n                    path: `/${key}${patch.path}`,\r\n                    value: patch.value,\r\n                }))\r\n                resource[\"[[patches]]\"].push(...mappedPatches)\r\n                resource.emit('Δ.change', mappedPatches)\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nconst global = {}\r\n\r\nexport const createCache = (socket) => {\r\n\r\n    const bin = {}\r\n    const { session }= socket\r\n\r\n    const cache = resource => {\r\n        if(bin[resource.uid]) {\r\n            upstreamMerge(bin[resource.uid], resource)\r\n            return\r\n        }\r\n        global[resource.uid] = global[resource.uid] || []\r\n        global[resource.uid].push({ resource, socket })\r\n    \r\n        bin[resource.uid] = resource\r\n        socket.on(`${resource.uid}.sync`, async ({ batchId, patches, attributes }, respond) => {\r\n            const { updateSuccessful, invalidPatches } = await updateResource(resource, patches, session)\r\n            respond({ updateSuccessful, invalidPatches })\r\n            resource.emit('Δ.sync', new SyncEvent({ resource, batchId, socket }))\r\n        })\r\n    }\r\n\r\n    const getCached = async (uid) => {\r\n       return bin[uid]\r\n    }\r\n\r\n    return { cache, getCached }\r\n}\r\n\r\nexport const updateResource = async (resource, patches, session) => {\r\n    const validPatches = []\r\n    const invalidPatches = []\r\n    await eachAsync(patches, async (index, patch) => {\r\n        const [ key ] = patch.path.split('/').slice(1)\r\n        const { writeAccessTest, namespace } = getMetadata(resource, key)\r\n        if(writeAccessTest === undefined){\r\n            validPatches.push(patch)\r\n        } else {\r\n            let hasAccess = await writeAccessTest.call(resource, { session, resource })\r\n            if(hasAccess) validPatches.push(patch)\r\n            else invalidPatches.push(patch)\r\n        }\r\n    })\r\n    appendPatches(resource, validPatches)\r\n    let updateSuccessful = validPatches.length === patches.length\r\n    return { updateSuccessful, validPatches, invalidPatches }\r\n}"],"file":"core.js"}