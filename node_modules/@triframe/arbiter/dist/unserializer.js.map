{"version":3,"sources":["../src/unserializer.js"],"names":["core","each","map","Pipe","Resource","List","DateTime","Duration","primativeTypes","createUnserializer","io","cache","createCache","socket","classes","unserialize","schema","Error","unserializeObject","attributes","unserializeClass","Class","Object","defineProperty","value","className","classMethods","prototype","instanceMethods","target","key","type","unserializeSharedFunction","unserializeRemoteFunction","unserializeProperty","unserializeAttribute","unserializeFunction","isStream","prependEmit","func","Function","createStream","method","process","emit","args","call","name","remoteProcess","uid","patches","document","emitDocument","emitUnserialized","error","invalidPatches","message","stack","callstack","throw","unserializeDocument","sendRequest","createSubscription","hook","on","pipe","onCancel","removeEventListener","validation","validators","forEach","validator","addHandler","enumerable","get","set","callback","next","includes","constructor","Array","isArray","_class_","_proto_","register","bin","window","resource","callbacks","batchId","updateSuccessful","push"],"mappings":"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","sourcesContent":["import * as core from \"@triframe/core\"\r\nimport { stageNewPatches, createBatch, mergeBatch, mergePatches, rollbackPatches, upstreamMerge } from \"./core\"\r\n\r\nconst { each, map, Pipe, Resource, List, DateTime, Duration } = core\r\n\r\nconst primativeTypes = ['String', 'Boolean', 'Number', 'Date', 'Function', 'DateTime']\r\n\r\nexport const createUnserializer = io => {\r\n\r\n    const cache = createCache({ socket: io })\r\n\r\n    const classes = { Resource, List, DateTime, Duration }\r\n\r\n    const unserialize = (schema) => {\r\n        if (typeof schema !== 'object') throw Error('schema must be a plain JavaScript Object')\r\n        return unserializeObject(classes, schema.attributes)\r\n    }\r\n\r\n    const unserializeClass = (schema) => {\r\n        const Class = class extends Resource { }\r\n        Object.defineProperty(Class, 'name', { value: schema.className })\r\n        unserializeObject(Class, schema.classMethods)\r\n        unserializeObject(Class.prototype, schema.instanceMethods)\r\n        return Class;\r\n    }\r\n\r\n\r\n    const unserializeObject = (target, schema) => {\r\n        each(schema, (key, schema) => {\r\n            switch (schema.type) {\r\n                case 'class':\r\n                    target[key] = unserializeClass(schema)\r\n                break;\r\n                case 'object':\r\n                    target[key] = unserializeObject({}, schema.attributes)\r\n                break;\r\n                case 'shared-function':\r\n                    target[key] = unserializeSharedFunction(schema)\r\n                break;\r\n                case 'remote-function':\r\n                    target[key] = unserializeRemoteFunction(schema)\r\n                break;\r\n                case 'property':\r\n                    unserializeProperty(target, key, schema)\r\n                break;\r\n                case 'attribute':\r\n                    target[key] = unserializeAttribute(schema, target)\r\n                break;\r\n            }\r\n        })\r\n        return target\r\n    }\r\n\r\n    const unserializeFunction = (schema) => {\r\n        switch (schema.type) {\r\n            case 'shared-function':\r\n                return unserializeSharedFunction(schema)\r\n                break;\r\n            case 'remote-function':\r\n                return unserializeRemoteFunction(schema)\r\n                break;\r\n        }\r\n    }\r\n\r\n    const unserializeSharedFunction = (schema) => {\r\n        const { isStream, prependEmit, value } = schema\r\n        let func = new Function('_core', `return ${value}`)(core)\r\n        return !isStream\r\n            ? func\r\n            : createStream(func, prependEmit)\r\n    }\r\n\r\n    function createStream(method){\r\n        const process = function(emit, ...args){\r\n            return method.call(this, ...args, emit)\r\n        }\r\n        return function(...args){\r\n            return new Pipe([this, process], ...args)\r\n        }\r\n    }\r\n\r\n    const unserializeRemoteFunction = (schema) => {\r\n        const { name } = schema\r\n\r\n        const remoteProcess = function (emit, args) {\r\n            let uid, attributes, patches;\r\n            if(typeof this !== 'undefined'){\r\n                ({ uid } = this);\r\n                attributes = this['[[attributes]]']\r\n                patches = stageNewPatches(this)\r\n            } else {\r\n                uid = null\r\n                attributes = {}\r\n                patches = []\r\n            }\r\n            let document;\r\n            let emitDocument = () => emit(document)\r\n\r\n            const emitUnserialized = (value) => {\r\n                if(value && value.error){      \r\n                    // TO DO: Remove invalid patches from the resources patches\r\n                    value.invalidPatches\r\n                    let error = new Error(value.message)\r\n                    error.stack = value.callstack\r\n                    return emit.throw(error)\r\n                }\r\n                //if(keepOpen) createSubscription(keepOpen)\r\n                document = unserializeDocument(value, emitDocument)\r\n                emit(document)\r\n            }\r\n\r\n            const sendRequest = () => {\r\n                io.emit(name, { uid, patches, args }, emitUnserialized)\r\n            }\r\n\r\n            const createSubscription = (hook) => {\r\n                io.on(hook, emitUnserialized)\r\n\r\n                // If the server or connection fuck up, \r\n                //  1. stop listening for the old event, and\r\n                //  2. re-send the request to re-establish connection\r\n                // TODO: Worry about a server re-start causing a ton of requests, crashing\r\n                //  browsers and/or the server\r\n                // const reconnectHandler = () => {\r\n                //     console.log(name)\r\n                //     io.removeEventListener('reconnect', reconnectHandler)\r\n                //     io.removeEventListener(hook, emitUnserialized)\r\n                //     sendRequest()\r\n                // }\r\n\r\n                // io.on('reconnect', reconnectHandler)\r\n\r\n                // If this pipe is destroyed (user goes to another page, etc.), \r\n                // tell the server to cancel the subscription and stop listening for it\r\n                emit.pipe.onCancel( () => {\r\n                    io.removeEventListener(hook, emitUnserialized)\r\n                    io.emit(`${hook}.destroy`)\r\n                })\r\n            }\r\n            \r\n            sendRequest()\r\n        }\r\n\r\n        return function (...args) {\r\n            return new Pipe([this, remoteProcess], args)\r\n        }\r\n    }\r\n\r\n    const unserializeProperty = (target, key, schema) => {\r\n        const { validation } = target\r\n        if(validation && schema.validators){\r\n            schema.validators.forEach( validator => {\r\n                validation.addHandler(schema.key, unserializeSharedFunction({ value: validator }) )\r\n            })\r\n        }\r\n        Object.defineProperty(target, key, {\r\n            enumerable: schema.enumerable,\r\n            get: unserializeFunction(schema.get),\r\n            set: unserializeFunction(schema.set)\r\n        })\r\n    }\r\n\r\n    const unserializeAttribute = (schema, target) => {\r\n        const { validation } = target\r\n        if(validation && schema.validators){\r\n            schema.validators.forEach( validator => {\r\n                validation.addHandler(schema.key, unserializeSharedFunction({ value: validator }) )\r\n            })\r\n        }\r\n        return schema.value\r\n    }\r\n\r\n    const unserializeDocument = (document, callback) => {\r\n        const next = document => unserializeDocument(document, callback)\r\n        if(!document) return document\r\n        if(primativeTypes.includes(document.constructor.name)) return document\r\n        if(Array.isArray(document)) return new List(...document.map( document => next(document)))\r\n        if(document instanceof DateTime) return document\r\n        if(document instanceof Duration) return document\r\n        const { _class_, _proto_, ...attributes } = document;\r\n        if(_class_) return classes[_class_]\r\n        if(_proto_) return cache.register(new classes[_proto_](map(attributes, ( key, value ) => next(value))), callback)\r\n        return map(attributes, ( key, value ) => next(value))\r\n    }\r\n\r\n    return unserialize\r\n}\r\n\r\n\r\nconst createCache = ({ socket }) => {\r\n\r\n    let bin = {}\r\n    window.bin = bin\r\n\r\n    function register(resource = {}, callback){\r\n        if(!bin[resource.uid]){\r\n\r\n            function emit(){\r\n                bin[resource.uid].callbacks.forEach( callback => callback())\r\n            }\r\n\r\n            resource.on('Δ.change', () => emit())\r\n    \r\n            resource.on('Δ.sync', ({ patches }) => {\r\n                let batchId = createBatch(resource)\r\n                socket.emit(`${resource.uid}.sync`, { patches, batchId }, ({updateSuccessful, invalidPatches }) => {\r\n                    if(!updateSuccessful){\r\n                        rollbackPatches(resource, invalidPatches)\r\n                        resource.emit('Δ.changed')\r\n                        emit()\r\n                    }\r\n                })\r\n                // emit()\r\n            })\r\n    \r\n            socket.on(`${resource.uid}.mergeBatch`, (batchId) => {\r\n                mergeBatch(resource, batchId)\r\n            })\r\n\r\n            socket.on(`${resource.uid}.mergePatches`, (patches) => {\r\n                mergePatches(resource, patches)\r\n                resource.emit('Δ.changed')\r\n                emit()\r\n            })\r\n\r\n            bin[resource.uid] = { resource, callbacks: [ callback ] }\r\n        } else {\r\n            if(!bin[resource.uid].callbacks.includes(callback)) bin[resource.uid].callbacks.push(callback);\r\n            upstreamMerge(bin[resource.uid].resource, resource);\r\n            resource = bin[resource.uid].resource\r\n            resource.emit('Δ.changed')\r\n        }\r\n\r\n        return resource\r\n    }\r\n\r\n    return { register }\r\n}"],"file":"unserializer.js"}