{"version":3,"sources":["../../src/serve/initializers.js"],"names":["initializeServer","server","port","Promise","resolve","listen","initializeDatabase","databaseUrl","connectDB","require","Error"],"mappings":";;;;;;AACO,MAAMA,gBAAgB,WAAhBA,gBAAgB,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB,IAAIC,OAAJ,CAAYC,OAAO,IAAIH,MAAM,CAACI,MAAP,CAAcH,IAAd,EAAoBE,OAApB,CAAvB,CAA3C;;AAEA,MAAME,kBAAkB,WAAlBA,kBAAkB,GAAG,MAAOC,WAAP,IAAuB;AACrD,MAAIC,SAAJ;;AACA,MAAI;AACA,KAAC;AAAEA,MAAAA;AAAF,QAAgBC,OAAO,CAAC,kBAAD,CAAxB;AACH,GAFD,CAEE,MAAM;AACJ,UAAMC,KAAK,CAAE,yBAAwBH,WAAY,8FAAtC,CAAX;AACH;;AACD,SAAO,MAAMC,SAAS,CAACD,WAAD,CAAtB;AACH,CARM","sourcesContent":["\r\nexport const initializeServer = (server, port) => new Promise(resolve => server.listen(port, resolve))\r\n\r\nexport const initializeDatabase = async (databaseUrl) => {\r\n    let connectDB;\r\n    try {\r\n        ({ connectDB } = require('@triframe/scribe'))\r\n    } catch {\r\n        throw Error(`Provided databaseUrl '${databaseUrl}' but '@triframe/scribe' could not be found (Install it, or don't pass databaseUrl to serve)`)\r\n    }\r\n    return await connectDB(databaseUrl)\r\n}"],"file":"initializers.js"}