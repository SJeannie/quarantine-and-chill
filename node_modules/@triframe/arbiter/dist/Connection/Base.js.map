{"version":3,"sources":["../../src/Connection/Base.js"],"names":["ConnectionBase","EventEmitter","constructor","data","event","payload","id","receipts","JSON","parse","key","value","_date_","undefined","DateTime","fromISO","_duration_","Duration","timeLastReceived","Date","now","nextMessageId","inboxId","respond","createRespond","forEach","removeFromOutbox","parseInt","push","emit","resolveInbox","saveToInbox","requestMessage","err","console","log","message","outbox","socket","send","inbox","timeLastSent","length","stringify","getReceipts","MemoryStorage","outboxId","on","resendMessage","clearReceiptsTimer","setInterval","clearReceipts","bind","clearTimeout","cancelationTimeout","addEventListener","handleMessage","callback","toISO","saveToOutbox","removeFromInbox","isEmpty","result","mountStorage","storage","getItem","setItem","Error","name","obj","Object","keys"],"mappings":"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","sourcesContent":["import { EventEmitter, DateTime, Duration } from '@triframe/core'\r\n\r\nexport class ConnectionBase extends EventEmitter {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.timeLastSent = 0\r\n        this.timeLastReceived = 0\r\n\r\n        this.inboxId = 0\r\n        this.outboxId = 0\r\n        this.outbox = {}\r\n        this.inbox = {}\r\n        this.receipts = []\r\n        this.on('__request_message__', this.resendMessage)\r\n        this.clearReceiptsTimer = setInterval(this.clearReceipts, 10000)\r\n    }\r\n\r\n    bind(socket) {\r\n        clearTimeout(this.cancelationTimeout)\r\n        this.socket = socket\r\n        socket.addEventListener('message', this.handleMessage)\r\n    }\r\n\r\n    emit(event, payload, callback) {\r\n        let id = ++this.outboxId\r\n        let message;\r\n        try {\r\n            message = JSON.stringify([event, payload, id, ...this.getReceipts()], (key, value) => {\r\n                if(value instanceof DateTime) return { _date_: value.toISO() }\r\n                if(value instanceof Duration) return { _duration_: value.toISO() }\r\n                return value\r\n            })\r\n        } catch (err){ console.log('Failed to encode payload', err)}\r\n        this.saveToOutbox(id, message)\r\n        this.socket.send(message)\r\n        this.timeLastSent = Date.now()\r\n        if (callback) this.on(`__response_${id}__`, callback)\r\n    }\r\n\r\n    handleMessage = ({ data }) => {\r\n        try {\r\n            const [event, payload, id, ...receipts] = JSON.parse(data, (key, value) => {\r\n                if(value && value._date_ !== undefined) return value._date_ === null ? null : DateTime.fromISO(value._date_)\r\n                if(value && value._duration_ !== undefined) return value._duration_ === null ? null : Duration.fromISO(value._duration_)\r\n                return value\r\n            })\r\n            this.timeLastReceived = Date.now()\r\n            const nextMessageId = this.inboxId + 1\r\n            const respond = this.createRespond(id)\r\n            receipts.forEach(this.removeFromOutbox)\r\n            if (parseInt(id) === nextMessageId) {\r\n                this.receipts.push(id)\r\n                this.inboxId = id;\r\n                super.emit(event, payload, respond)\r\n                this.resolveInbox()\r\n            } else if (id !== undefined && id !== null) {\r\n                this.receipts.push(id)\r\n                this.saveToInbox(id, event, payload)\r\n                this.requestMessage(nextMessageId)\r\n            } else {\r\n                super.emit(event, payload, respond)\r\n            }\r\n        } catch(err) {\r\n            console.log('Un-parsed message:', data, err)\r\n        }\r\n    }\r\n\r\n    requestMessage(id) {\r\n        this.socket.send(JSON.stringify([\"__request_message__\", id]))\r\n    }\r\n\r\n    resendMessage = (id) => {\r\n        let message = this.outbox[id]\r\n        this.socket.send(message)\r\n    }\r\n\r\n    saveToInbox(id, event, payload) {\r\n        this.inbox[id] = [event, payload]\r\n    }\r\n\r\n    removeFromInbox = (id) => {\r\n        delete this.inbox[id]\r\n    }\r\n\r\n    saveToOutbox(id, message) {\r\n        this.outbox[id] = message\r\n    }\r\n\r\n    removeFromOutbox = (id) => {\r\n        delete this.outbox[id]\r\n    }\r\n\r\n    resolveInbox() {\r\n        while (this.inbox[this.inboxId + 1] !== undefined) {\r\n            let [event, payload] = this.inbox[++this.inboxId]\r\n            let respond = this.createRespond(this.inboxId)\r\n            super.emit(event, payload, respond)\r\n            this.removeFromInbox(this.inboxId)\r\n        }\r\n        if (!isEmpty(this.inbox)) {\r\n            this.requestMessage(this.inboxId + 1)\r\n        }\r\n    }\r\n\r\n    getReceipts() {\r\n        let result = this.receipts\r\n        this.receipts = []\r\n        return result\r\n    }\r\n\r\n    createRespond(id) {\r\n        return (payload, callback) => this.emit(`__response_${id}__`, payload, callback)\r\n    }\r\n\r\n    clearReceipts = () => {\r\n        if (this.timeLastSent < (Date.now() - 10000) && this.receipts.length > 0) {\r\n            this.socket.send(JSON.stringify([\"__ping__\", null, null, ...this.getReceipts()]))\r\n        }\r\n    }\r\n\r\n    mountStorage(storage){\r\n        if(typeof storage.getItem !== 'function' || typeof storage.setItem !== 'function')\r\n            throw Error('Attempted to mount invalid storage object')\r\n        this.storage = storage\r\n    }\r\n\r\n    storage = new MemoryStorage\r\n\r\n}\r\n\r\nclass MemoryStorage {\r\n    getItem(name){\r\n        return this[name]\r\n    }\r\n\r\n    setItem(name, value){\r\n        this[name] = value\r\n    }\r\n}\r\n\r\nconst isEmpty = obj => Object.keys(obj).length === 0"],"file":"Base.js"}