{"version":3,"sources":["../../src/Connection/createSession.js"],"names":["encrypt","payload","secret","Promise","resolve","err","token","decrypt","each","obj","callback","i","createSession","model","bin","crawl","namespace","Session","constructor","attributes","agent","pipes","EventEmitter","onAllChanges","on","onChange","session","Object","assign","createSlice","removeListeners","forEach","pipe","destroy","checkIntegrity","key","value","includes","Error","data","loadFor","connection","clientSecret","emit","sessionToken","sessionData","Array","isArray","NestedSession","defineProperty","prototype","get","nestedSession","newPipe","find","oldPipe","isEqual","push","set"],"mappings":"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","sourcesContent":["import {EventEmitter, List} from '@triframe/core'\r\nimport { sign, verify } from 'jsonwebtoken'\r\n\r\nlet encrypt = (payload, secret) => new Promise( resolve => sign(payload, secret, (err, token) => resolve(token)))\r\nlet decrypt = (token, secret) => new Promise( resolve => verify(token, secret, (err, payload) => resolve(payload)))\r\n\r\n\r\nconst each = (obj, callback) => {\r\n    for(let i in obj){\r\n        callback(i, obj[i])\r\n    }\r\n}\r\n\r\nexport const createSession = (model) => {\r\n\r\n    const bin = {}\r\n\r\n    const crawl = (model, namespace) => {\r\n        class Session {\r\n            constructor(attributes = {}, agent = null, pipes = [], callback = () => null){\r\n                this['[[attributes]]'] = attributes\r\n                this['[[agent]]'] = agent ? agent : new EventEmitter\r\n                this['[[callback]]'] = callback\r\n                this['[[pipes]]'] = pipes\r\n            }\r\n\r\n            onAllChanges(callback){\r\n                this['[[agent]]'].on('*', callback)\r\n            }\r\n\r\n            onChange(callback){\r\n                this['[[callback]]'] = (session) => {\r\n                    if(session !== this){\r\n                        Object.assign(this['[[attributes]]'], session['[[attributes]]'])\r\n                        callback()\r\n                    }\r\n                }\r\n            }\r\n\r\n            createSlice(){\r\n                return new Session(this['[[attributes]]'], this['[[agent]]'])\r\n            }\r\n\r\n            removeListeners(){\r\n                this['[[pipes]]'].forEach( pipe => pipe.destroy())\r\n            }\r\n\r\n            checkIntegrity(){\r\n                each(this, ( key, value ) => {\r\n                    if(!['[[pipes]]', '[[agent]]', '[[callback]]', '[[attributes]]'].includes(key)){\r\n                        throw Error(`Tried to assign ${key} to the session. Session properties must be initialized when 'serve' is invoked. This will result in unpredictable behavior.`)\r\n                    }\r\n                })\r\n            }\r\n\r\n            get data(){\r\n                this.checkIntegrity()\r\n                return this['[[attributes]]']\r\n            }\r\n\r\n            static loadFor(connection){\r\n                const { clientSecret } = connection;\r\n                return new Promise( resolve => {\r\n                    connection.emit('__load_session__', null, async (sessionToken) => {\r\n                        let sessionData = sessionToken ?  await decrypt(sessionToken, clientSecret) : {}\r\n                        let session = bin[clientSecret] ? bin[clientSecret] : new Session(sessionData)\r\n                        bin[clientSecret] = session\r\n                        session.onAllChanges(async () => {\r\n                            let sessionToken = await encrypt(session.data, clientSecret)\r\n                            connection.emit('__save_session__', sessionToken)\r\n                        })\r\n                        resolve(session)\r\n                    })\r\n                })\r\n            }\r\n\r\n        }\r\n        each(model, (key, value) => {\r\n            if(typeof value === 'object' && value !== null && !Array.isArray(value)){\r\n                const NestedSession = crawl(value, `${namespace}.${key}`)\r\n                Object.defineProperty(Session.prototype, key, {\r\n                    get(){\r\n                        let nestedSession = new NestedSession(this['[[attributes]]'][key], this['[[agent]]'], this['[[pipes]]'], this['[[callback]]'])\r\n                        return nestedSession\r\n                    }\r\n                })\r\n            } else {\r\n                Object.defineProperty(Session.prototype, key, {\r\n                    get(){\r\n                        let newPipe = this['[[agent]]'].on(`${namespace}.${key}`, this['[[callback]]'])\r\n                        if(this['[[pipes]]'].find( oldPipe => oldPipe.isEqual(newPipe)))\r\n                            newPipe.destroy()\r\n                        else \r\n                            this['[[pipes]]'].push(newPipe)\r\n                       \r\n                        return this['[[attributes]]'][key] || model[key]\r\n                    },\r\n                    set(value){\r\n                        this['[[attributes]]'][key] = value\r\n                        this.removeListeners()\r\n                        this['[[agent]]'].emit(`${namespace}.${key}`, this)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n        return Session\r\n    }\r\n\r\n    return crawl(model, 'session')\r\n}"],"file":"createSession.js"}