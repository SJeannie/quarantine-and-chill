{"version":3,"sources":["../../../src/Connection/ws/websocket.js"],"names":["EventEmitter","require","https","http","net","tls","randomBytes","createHash","URL","PerMessageDeflate","default","Receiver","Sender","BINARY_TYPES","EMPTY_BUFFER","GUID","kStatusCode","kWebSocket","NOOP","addEventListener","removeEventListener","format","parse","toBuffer","readyStates","protocolVersions","closeTimeout","WebSocket","constructor","address","protocols","options","readyState","CONNECTING","protocol","_binaryType","_closeFrameReceived","_closeFrameSent","_closeMessage","_closeTimer","_closeCode","_extensions","_receiver","_sender","_socket","_bufferedAmount","_isServer","_redirects","Array","isArray","join","undefined","initAsClient","CLOSING","CLOSED","OPEN","binaryType","type","includes","bufferedAmount","bufferSize","_bufferedBytes","extensions","Object","keys","setSocket","socket","head","maxPayload","receiver","on","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","setTimeout","setNoDelay","length","unshift","socketOnClose","socketOnData","socketOnEnd","socketOnError","emit","emitClose","extensionName","cleanup","removeAllListeners","close","code","data","msg","abortHandshake","_req","end","err","destroy","bind","ping","mask","cb","Error","toString","sendAfterClose","pong","send","opts","binary","compress","fin","terminate","forEach","i","method","defineProperty","prototype","get","listeners","_listener","set","listener","removeListener","websocket","protocolVersion","perMessageDeflate","followRedirects","maxRedirects","createConnection","socketPath","hostname","timeout","host","path","port","RangeError","parsedUrl","url","href","isUnixSocket","pathname","isSecure","defaultPort","key","tlsConnect","netConnect","startsWith","slice","headers","Connection","Upgrade","search","handshakeTimeout","offer","origin","Origin","username","password","auth","parts","split","req","aborted","res","location","statusCode","abort","addr","digest","update","serverProt","protList","protError","accept","connect","servername","stream","message","captureStackTrace","setHeader","once","reason","resume","receiverOnFinish","read","clearTimeout","_writableState","finished","errorEmitted","chunk","write","pause"],"mappings":"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","sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate').default;\nconst Receiver = require('./receiver').default;\nconst Sender = require('./sender').default;\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants').default;\nconst { addEventListener, removeEventListener } = require('./event-target').default;\nconst { format, parse } = require('./extension').default;\nconst { toBuffer } = require('./buffer-util').default;\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|url.URL)} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this.readyState = WebSocket.CONNECTING;\n    this.protocol = '';\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._closeCode = 1006;\n    this._extensions = {};\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (Array.isArray(protocols)) {\n        protocols = protocols.join(', ');\n      } else if (typeof protocols === 'object' && protocols !== null) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  get CONNECTING() {\n    return WebSocket.CONNECTING;\n  }\n  get CLOSING() {\n    return WebSocket.CLOSING;\n  }\n  get CLOSED() {\n    return WebSocket.CLOSED;\n  }\n  get OPEN() {\n    return WebSocket.OPEN;\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    //\n    // `socket.bufferSize` is `undefined` if the socket is closed.\n    //\n    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} maxPayload The maximum allowed message size\n   * @private\n   */\n  setSocket(socket, head, maxPayload) {\n    const receiver = new Receiver(\n      this._binaryType,\n      this._extensions,\n      this._isServer,\n      maxPayload\n    );\n\n    this._sender = new Sender(socket, this._extensions);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this.readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this.readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n      if (this._closeFrameReceived) this._socket.end();\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this.readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\nreadyStates.forEach((readyState, i) => {\n  WebSocket[readyState] = i;\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get() {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n\n      return undefined;\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set(listener) {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nexport default WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|url.URL)} address The URL to which to connect\n * @param {String} protocols The subprotocols\n * @param {Object} options Connection options\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable\n *     permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the\n *     handshake request\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version`\n *     header\n * @param {String} options.origin Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {Number} options.maxPayload The maximum allowed message size\n * @param {Boolean} options.followRedirects Whether or not to follow redirects\n * @param {Number} options.maxRedirects The maximum number of redirects allowed\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: undefined,\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket.url = address.href;\n  } else {\n    parsedUrl = new URL(address);\n    websocket.url = address;\n  }\n\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n\n  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n    throw new Error(`Invalid URL: ${websocket.url}`);\n  }\n\n  const isSecure =\n    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const get = isSecure ? https.get : http.get;\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket',\n    ...opts.headers\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols) {\n    opts.headers['Sec-WebSocket-Protocol'] = protocols;\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req = (websocket._req = get(opts));\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (websocket._req.aborted) return;\n\n    req = websocket._req = null;\n    websocket.readyState = WebSocket.CLOSING;\n    websocket.emit('error', err);\n    websocket.emitClose();\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      const addr = new URL(location, address);\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (protocols || '').split(/, */);\n    let protError;\n\n    if (!protocols && serverProt) {\n      protError = 'Server sent a subprotocol but none was requested';\n    } else if (protocols && !serverProt) {\n      protError = 'Server sent no subprotocol';\n    } else if (serverProt && !protList.includes(serverProt)) {\n      protError = 'Server sent an invalid subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const extensions = parse(res.headers['sec-websocket-extensions']);\n\n        if (extensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n          websocket._extensions[\n            PerMessageDeflate.extensionName\n          ] = perMessageDeflate;\n        }\n      } catch (err) {\n        abortHandshake(\n          websocket,\n          socket,\n          'Invalid Sec-WebSocket-Extensions header'\n        );\n        return;\n      }\n    }\n\n    websocket.setSocket(socket, head, opts.maxPayload);\n  });\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the\n *     socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket.readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} data The data to send\n * @param {Function} cb Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n  websocket._socket.resume();\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  this[kWebSocket]._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._closeCode = err[kStatusCode];\n  websocket.emit('error', err);\n  websocket._socket.destroy();\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */\nfunction receiverOnMessage(data) {\n  this[kWebSocket].emit('message', data);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('end', socketOnEnd);\n\n  websocket.readyState = WebSocket.CLOSING;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk and emitted synchronously in a single\n  // `'data'` event.\n  //\n  websocket._socket.read();\n  websocket._receiver.end();\n\n  this.removeListener('data', socketOnData);\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket.readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n"],"file":"websocket.js"}