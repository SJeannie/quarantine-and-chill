{"version":3,"sources":["../../../src/Connection/ws/websocket-client.js"],"names":["WebSocketClient","CustomEvent","constructor","type","url","protocols","userOptions","realWs","close","connectTimeout","self","attempts","reconnects","reconnectWhenOnlineAgain","explicitlyClosed","pendingReconnect","opts","Object","assign","defaultOptions","shouldReconnect","timeout","Error","forEach","readOnlyProp","defineProperty","get","clearPendingReconnectIfNeeded","clearTimeout","ononline","event","reconnect","onoffline","connectivityEventsAttached","detachConnectivityEvents","global","removeEventListener","attachConnectivityEvents","addEventListener","send","readyState","apply","arguments","code","reason","open","WebSocket","OPEN","CONNECTING","newWebSocket","handle1000","navigator","onLine","delay","setTimeout","value","dispatchEvent","number","enumerable","undefined","binaryType","stdEvent","cb","ignoreConnectivityEvents","automaticOpen","ws","prototype","callback","listeners","push","stack","i","l","length","splice","call"],"mappings":"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","sourcesContent":["class CustomEvent{\r\n  constructor(type){\r\n    this.type = type\r\n  }\r\n}\r\n\r\nexport default function WebSocketClient(url, protocols, userOptions) {\r\n    var realWs = { close: function() {} },\r\n        connectTimeout,\r\n        self = this,\r\n        attempts = 0,\r\n        reconnects = -1,\r\n        reconnectWhenOnlineAgain = false,\r\n        explicitlyClosed = false,\r\n        pendingReconnect,\r\n        opts = Object.assign({},\r\n          WebSocketClient.defaultOptions,\r\n          typeof userOptions === 'function' ? { shouldReconnect: userOptions } : userOptions\r\n        )\r\n\r\n    if (typeof opts.timeout !== 'number') {\r\n      throw new Error('timeout must be the number of milliseconds to timeout a connection attempt')\r\n    }\r\n\r\n    if (typeof opts.shouldReconnect !== 'function') {\r\n      throw new Error('shouldReconnect must be a function that returns the number of milliseconds to wait for a reconnect attempt, or null or undefined to not reconnect.')\r\n    }\r\n\r\n    ['bufferedAmount', 'url', 'readyState', 'protocol', 'extensions'].forEach(function(readOnlyProp) {\r\n      Object.defineProperty(self, readOnlyProp, {\r\n        get: function() { return realWs[readOnlyProp] }\r\n      })\r\n    })\r\n\r\n    function clearPendingReconnectIfNeeded() {\r\n      if (pendingReconnect) {\r\n        clearTimeout(pendingReconnect)\r\n        pendingReconnect = null\r\n      }\r\n    }\r\n\r\n    var ononline = function(event) {\r\n      if (reconnectWhenOnlineAgain) {\r\n        clearPendingReconnectIfNeeded()\r\n        reconnect(event)\r\n      }\r\n    },\r\n    onoffline = function() {\r\n      reconnectWhenOnlineAgain = true\r\n      realWs.close(1000)\r\n    },\r\n    connectivityEventsAttached = false\r\n\r\n    function detachConnectivityEvents() {\r\n      if (connectivityEventsAttached) {\r\n        if(global.removeEventListener) global.removeEventListener('online', ononline)\r\n        if(global.removeEventListener) global.removeEventListener('offline', onoffline)\r\n        connectivityEventsAttached = false\r\n      }\r\n    }\r\n\r\n    function attachConnectivityEvents() {\r\n      if (!connectivityEventsAttached) {\r\n        if(global.addEventListener) global.addEventListener('online', ononline)\r\n        if(global.addEventListener) global.addEventListener('offline', onoffline)\r\n        connectivityEventsAttached = true\r\n      }\r\n    }\r\n\r\n    self.send = function() {\r\n      if(realWs.readyState != 1) return\r\n      return realWs.send.apply(realWs, arguments)\r\n    }\r\n\r\n    self.close = function(code, reason) {\r\n      if (typeof code !== 'number') {\r\n        reason = code\r\n        code = 1000\r\n      }\r\n\r\n      clearPendingReconnectIfNeeded()\r\n      reconnectWhenOnlineAgain = false\r\n      explicitlyClosed = true\r\n      detachConnectivityEvents()\r\n\r\n      return realWs.close(code, reason)\r\n    }\r\n\r\n    self.reconnect = function() {\r\n      realWs.close(1000)\r\n      reconnect({}, self)\r\n    }\r\n\r\n    self.open = function() {\r\n      if (realWs.readyState !== WebSocket.OPEN && realWs.readyState !== WebSocket.CONNECTING) {\r\n        clearPendingReconnectIfNeeded()\r\n        reconnectWhenOnlineAgain = false\r\n        explicitlyClosed = false\r\n\r\n        newWebSocket()\r\n      }\r\n    }\r\n\r\n    function reconnect(event) {\r\n      if ((!opts.shouldReconnect.handle1000 && event.code === 1000) || explicitlyClosed) {\r\n        attempts = 0\r\n        return\r\n      }\r\n      if (navigator.onLine === false) {\r\n        reconnectWhenOnlineAgain = true\r\n        return\r\n      }\r\n\r\n      var delay = opts.shouldReconnect(event, self)\r\n      if (typeof delay === 'number') {\r\n        pendingReconnect = setTimeout(newWebSocket, delay)\r\n      }\r\n    }\r\n\r\n    Object.defineProperty(self, 'listeners', {\r\n      value: {\r\n        open: [function(event) {\r\n          if (connectTimeout) {\r\n            clearTimeout(connectTimeout)\r\n            connectTimeout = null\r\n          }\r\n          event.reconnects = ++reconnects\r\n          event.attempts = attempts\r\n          if(reconnects > 0) self.dispatchEvent(Object.assign(new CustomEvent('reconnect'), {\r\n            number: reconnects\r\n          }))\r\n          attempts = 0\r\n          reconnectWhenOnlineAgain = false\r\n        }],\r\n        close: [reconnect]\r\n      }\r\n    })\r\n\r\n    Object.defineProperty(self, 'attempts', {\r\n      get: function() { return attempts },\r\n      enumerable: true\r\n    })\r\n\r\n    Object.defineProperty(self, 'reconnects', {\r\n      get: function() { return reconnects },\r\n      enumerable: true\r\n    })\r\n\r\n    function newWebSocket() {\r\n      pendingReconnect = null\r\n      realWs = new WebSocket(url, protocols || undefined)\r\n      realWs.binaryType = self.binaryType\r\n\r\n      attempts++\r\n      self.dispatchEvent(Object.assign(new CustomEvent('connecting'), {\r\n        attempts: attempts,\r\n        reconnects: reconnects\r\n      }))\r\n\r\n      connectTimeout = setTimeout(function() {\r\n        connectTimeout = null\r\n        detachConnectivityEvents()\r\n        self.dispatchEvent(Object.assign(new CustomEvent('timeout'), {\r\n          attempts: attempts,\r\n          reconnects: reconnects\r\n        }))\r\n      }, opts.timeout)\r\n\r\n      ;['open', 'close', 'message', 'error'].forEach(function(stdEvent) {\r\n        realWs.addEventListener(stdEvent, function(event) {\r\n          self.dispatchEvent(event)\r\n\r\n          var cb = self['on' + stdEvent]\r\n          if (typeof cb === 'function') {\r\n            return cb.apply(self, arguments)\r\n          }\r\n        })\r\n      })\r\n\r\n      if (!opts.ignoreConnectivityEvents) {\r\n        attachConnectivityEvents()\r\n      }\r\n    }\r\n\r\n    if (opts.automaticOpen) {\r\n      newWebSocket()\r\n    }\r\n  }\r\n\r\n  WebSocketClient.defaultOptions = {\r\n    // the time to wait before a successful connection\r\n    // before the attempt is considered to have timed out\r\n    timeout: 4000,\r\n    // Given a CloseEvent or OnlineEvent and the WebSocketClient state,\r\n    // should a reconnect be attempted? Return the number of milliseconds to wait\r\n    // to reconnect (or null or undefined to not), rather than true or false\r\n    shouldReconnect: function(event, ws) {\r\n      if (event.code === 1008 || event.code === 1011) return\r\n      return [0, 3000, 10000][ws.attempts]\r\n    },\r\n\r\n    // Flag to control whether attachement to navigator online/offline events\r\n    // should be disabled.\r\n    ignoreConnectivityEvents: false,\r\n\r\n    // Create and connect the WebSocket when the instance is instantiated.\r\n    // Defaults to true to match standard WebSocket behavior\r\n    automaticOpen: true\r\n  }\r\n\r\n  WebSocketClient.prototype.binaryType = 'blob'\r\n\r\n  // Taken from MDN https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\r\n  WebSocketClient.prototype.addEventListener = function(type, callback) {\r\n    if (!(type in this.listeners)) {\r\n      this.listeners[type] = []\r\n    }\r\n    this.listeners[type].push(callback)\r\n  }\r\n\r\n  WebSocketClient.prototype.removeEventListener = function(type, callback) {\r\n    if (!(type in this.listeners)) {\r\n      return\r\n    }\r\n    var stack = this.listeners[type]\r\n    for (var i = 0, l = stack.length; i < l; i++) {\r\n      if (stack[i] === callback) {\r\n        stack.splice(i, 1)\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  WebSocketClient.prototype.dispatchEvent = function(event) {\r\n    if (!(event.type in this.listeners)) {\r\n      return\r\n    }\r\n    var stack = this.listeners[event.type]\r\n    for (var i = 0, l = stack.length; i < l; i++) {\r\n      stack[i].call(this, event)\r\n    }\r\n  }"],"file":"websocket-client.js"}