{"version":3,"sources":["../../../src/Connection/ws/stream.js"],"names":["Duplex","require","emitClose","stream","emit","duplexOnEnd","destroyed","_writableState","finished","destroy","duplexOnError","err","removeListener","listenerCount","createWebSocketStream","ws","options","resumeOnReceiverDrain","receiverOnDrain","_socket","resume","readyState","CONNECTING","once","open","_receiver","removeAllListeners","on","duplex","autoDestroy","objectMode","writableObjectMode","message","msg","push","pause","error","close","_destroy","callback","CLOSED","process","nextTick","called","terminate","_final","_readableState","endEmitted","finish","_read","OPEN","needDrain","_write","chunk","encoding","send"],"mappings":"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","sourcesContent":["'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {stream.Duplex} The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} options The options for the `Duplex` constructor\n * @return {stream.Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let resumeOnReceiverDrain = true;\n\n  function receiverOnDrain() {\n    if (resumeOnReceiverDrain) ws._socket.resume();\n  }\n\n  if (ws.readyState === ws.CONNECTING) {\n    ws.once('open', function open() {\n      ws._receiver.removeAllListeners('drain');\n      ws._receiver.on('drain', receiverOnDrain);\n    });\n  } else {\n    ws._receiver.removeAllListeners('drain');\n    ws._receiver.on('drain', receiverOnDrain);\n  }\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg) {\n    if (!duplex.push(msg)) {\n      resumeOnReceiverDrain = false;\n      ws._socket.pause();\n    }\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function(err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n    ws.terminate();\n  };\n\n  duplex._final = function(callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      if (duplex._readableState.endEmitted) duplex.destroy();\n      callback();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function() {\n    if (ws.readyState === ws.OPEN && !resumeOnReceiverDrain) {\n      resumeOnReceiverDrain = true;\n      if (!ws._receiver._writableState.needDrain) ws._socket.resume();\n    }\n  };\n\n  duplex._write = function(chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nexport default createWebSocketStream;\n"],"file":"stream.js"}