{"version":3,"sources":["../src/sql.js"],"names":["literal","x","isLiteral","value","literalValue","escape","keys","join","sep","Object","map","toUnderscored","values","pairs","seperator","seperate","key","createReducer","reducer","result","undefined","toString","rawValue","reduce","all","any","models","defaultOptions","disableLogging","sql","args","Array","isArray","runQuery","options","queryFragments","variables","escaped","push","length","triQL","fragment","index","query","events","Pipe","queryProcess","emit","console","log","Class","event","name","nowAndOn","response","database","metadata","_","className","promisedResolutions","rows","__class__","id","Model","tempInstance","tempMetadata","namespace","record","startsWith","type","tempProperties","defaultValue","camelCasedKeys","jsDefinitionResolutions","decodedValues","sqlDecode","definition","instance","forEach","resolveDefinition","every","element","alreadyAdded","Promise"],"mappings":"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","sourcesContent":["import { each, group, map, deepMap, index, find, filter, toClassName, toSingular, toForeignKeyName, toTableName, metadata, toUnderscored, toCamelCase, getMetadata, Pipe } from \"@triframe/core\"\r\nimport { database } from './database'\r\nimport { parseTriQL } from \"./parseTriQL\"\r\n\r\nexport const literal = x => ({ isLiteral: true, value: x })\r\n\r\nexport const isLiteral = x => x && x.isLiteral\r\n\r\nconst literalValue = (x, escape) => (\r\n    typeof x.value === 'function'\r\n        ? x.value(escape)\r\n        : x.value\r\n)\r\n\r\nexport const keys = x => {\r\n    return {\r\n        join: sep => literal(Object.keys(x).map(toUnderscored).join(sep))\r\n    }\r\n}\r\n\r\nexport const values = x => {\r\n    return {\r\n        join: sep => literal(escape => Object.values(x).map(escape).join(sep))\r\n    }\r\n}\r\n\r\nexport const pairs = (x, seperator = value => value === null ?  ' IS NULL' : ` = ${escape(value)}`) => {\r\n    let seperate;\r\n    if( typeof seperator !== 'function') seperate = (value) => ` ${seperator} ${escape(value)}`\r\n    else seperate = seperator\r\n    return {\r\n        join: sep => literal(escape => Object.keys(x).map(key => `${toUnderscored(key)}${seperate(x[key])}`).join(sep))\r\n    }\r\n}\r\n\r\nconst createReducer = seperator => (x, reducer) => literal( escape => {\r\n    let result;\r\n    each(x, (key, value) => \r\n        result = result === undefined \r\n            ? reducer(toUnderscored(key), { toString: () => escape(value)}, { rawValue: value, escape })\r\n            : `${result}${seperator}${reducer(toUnderscored(key), { toString: () => escape(value)}, { rawValue: value, escape })}`\r\n    )\r\n    return result;\r\n})\r\n\r\nexport const reduce = createReducer(', ')\r\nexport const all = createReducer(' AND ')\r\nexport const any = createReducer(' OR ')\r\n\r\nlet models;\r\n\r\nlet defaultOptions = {\r\n    disableLogging: false\r\n}\r\n\r\nexport const sql = (...args) => {\r\n    if(Array.isArray(args[0])){\r\n        return runQuery(defaultOptions, ...args)\r\n    } else {\r\n        let options = args[0]\r\n        return (...args) => runQuery(options, ...args)\r\n    }\r\n}\r\n\r\nconst runQuery = (options, queryFragments, ...variables) => {\r\n    let escaped = []\r\n    let escape = x => {\r\n        escaped.push(x)\r\n        return `$${escaped.length}`\r\n    }\r\n    let triQL = queryFragments.reduce((triQL, fragment, index) => (\r\n        index === 0\r\n            ? `${fragment}`\r\n            : (\r\n                isLiteral(variables[index - 1])\r\n                    ? `${triQL}${literalValue(variables[index - 1], escape)}${fragment}`\r\n                    : `${triQL}${escape(variables[index - 1])}${fragment}`\r\n            )\r\n    ), '')\r\n    const { query, events } = parseTriQL(triQL)\r\n    return new Pipe(queryProcess, options, query, escaped, events)\r\n}\r\n\r\n\r\nfunction* queryProcess(emit, options, triQL, escaped, events) {\r\n    if(!options.disableLogging) console.log(triQL, escaped, events.map( ({ Class, event }) => `${Class.name}.${event}`))\r\n    for (let { Class, event } of events) yield Class.nowAndOn(event)\r\n    const response = yield database.query(triQL, escaped)\r\n    if (!models) models = index(metadata, (_, { className }) => className, (_, { Class }) => Class)\r\n    let promisedResolutions = []\r\n    let result = deepMap(response.rows, (value) => {\r\n        if (value && value.__class__) {\r\n            if(value.id === null) return null\r\n            let Model = models[value.__class__]\r\n            let tempInstance = new Model;\r\n            let tempMetadata = filter(metadata, (namespace, record) => namespace.startsWith(`${Model.name}#`) && record.type === 'temporary')\r\n            let tempProperties = index(tempMetadata, (_, record) => record.key, (_, record) => record.defaultValue)\r\n            let camelCasedKeys = key => toCamelCase(key)\r\n            let jsDefinitionResolutions = []\r\n            let decodedValues = (key, value) => {\r\n                const { sqlDecode, type, definition, defaultValue } = getMetadata(tempInstance, toCamelCase(key))\r\n                if (sqlDecode){\r\n                    return sqlDecode(value)\r\n                } else if(type === 'code-derived'){\r\n                    jsDefinitionResolutions.push( instance => instance['[[attributes]]'][toCamelCase(key)] = definition(instance) || defaultValue)\r\n                } else {\r\n                    return value\r\n                }\r\n            }\r\n            delete value.__class__\r\n            let instance = new Model({ ...tempProperties, ...index(value, camelCasedKeys, decodedValues)})\r\n            jsDefinitionResolutions.forEach( resolveDefinition => promisedResolutions.push(resolveDefinition(instance)))\r\n            return instance\r\n        }\r\n        if (Array.isArray(value) && value.every( element => typeof element === 'object' && (element == null || typeof element.id !== 'undefined'))) {\r\n            let result = []\r\n            let alreadyAdded = {}\r\n            value.forEach( value => {\r\n                if(value !== null && value.id !== null && !alreadyAdded[value.id]){\r\n                    alreadyAdded[value.id] = true\r\n                    result.push(value)\r\n                }\r\n            })\r\n            return result\r\n        }\r\n        return value\r\n    })\r\n    yield Promise.all(promisedResolutions)\r\n    return result\r\n}"],"file":"sql.js"}