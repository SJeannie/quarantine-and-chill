{"version":3,"sources":["../src/migrate.js"],"names":["migrate","newSchema","metadata","_","type","d","className","key","schema","formatSchema","database","query","selectSchema","patch","generatePatch","console","log","err","createTable","name","fields","Array","Object","values","defineColumn","join","dropTable","addColumn","column","dropColumn","alterColumn","operations","datatype","typeModifier","defaultValue","constraints","definition","undefined","format","defineConstraints","__proto__","prototype","JSON","stringify","Date","isLuxonDateTime","isArray","Error","unique","notNull","primaryKey","references","table","onDelete","mapDeleteAction","fromJS","toSQL","setType","setNotNull","dropNotNull","setColumnDefault","dropColumnDefault","addUniqueConstraint","dropUniqueConstraint","addPrimaryKeyConstraint","dropPrimaryKeyConstraint","addReference","dropReference","decodeAdsrc","text","value","split","replace","rows","tableName","columnName","table_name","type_modifier","default_value","not_null","byConstraintType","toFormattedConstraint","constraint_type","mapConstraintType","fromEnum","toJS","reference_table","on_delete","on_update","deleteActionMap","enum","sql","js","toEnum","fromSQL","constraintTypeMap","tableNames","keys","map","patchTable","sort","line","startsWith","filter","a","added","removed","comparisonOf","columnUpdates","patchColumns","currentSchema","updatedSchema","columnNames","patchColumn","length","patchColumnAttributes","different","commands","push","patchColumnConstraints","thing1","thing2"],"mappings":"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","sourcesContent":["import { group, index, map, unique, filter, metadata, toUnderscored, toTableName, DateTime } from '@triframe/core'\r\nimport { database } from './database'\r\n\r\nexport const migrate = async () => {\r\n    const newSchema = map(group(filter(metadata, (_, metadata) => metadata.type === 'persisted'), (_, d) => toTableName(d.className)), (_, metadata) => index(metadata, (_, metadata) => toUnderscored(metadata.key)))\r\n    const schema = formatSchema(await database.query(selectSchema()))\r\n    const patch = generatePatch(schema, newSchema)\r\n    if (patch) {\r\n        console.log('Patching:', patch)\r\n        try {\r\n            await database.query(patch)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst createTable = (name, fields = new Array) => (\r\n    `CREATE TABLE \"${name}\" (${Object.values(map(fields, defineColumn)).join(', ')});`\r\n)\r\n\r\nconst dropTable = (name) => (\r\n    `DROP TABLE \"${name}\"`\r\n)\r\n\r\nconst addColumn = (name, column) => (\r\n    `ADD COLUMN ${defineColumn(name, column)}`\r\n)\r\n\r\nconst dropColumn = (name) => (\r\n    `DROP COLUMN \"${name}\"`\r\n)\r\n\r\nconst alterColumn = (name, operations) => (\r\n    `ALTER COLUMN \"${name}\" ${operations.join(', ')}`\r\n)\r\n\r\nconst defineColumn = (name, { datatype, typeModifier, defaultValue, constraints }) => {\r\n    let definition = `\"${name}\" ${datatype}`\r\n    if(typeModifier) definition = `${definition}(${typeModifier})`\r\n    if(defaultValue !== undefined) definition = `${definition} DEFAULT ${format(defaultValue)}`\r\n    if(constraints) definition = `${definition} ${defineConstraints(constraints)}`\r\n    return definition\r\n}\r\n\r\n// 2004-10-19 10:23:54+02\r\nconst format = function(defaultValue){\r\n    if(defaultValue === null){\r\n        return \"NULL\"\r\n    }\r\n    if(typeof defaultValue == 'number' || typeof defaultValue == 'boolean'){\r\n        return defaultValue\r\n    }\r\n    if(typeof defaultValue == 'string'){\r\n        return `'${defaultValue}'`\r\n    }\r\n    if(typeof defaultValue == 'object' && (defaultValue.__proto__ == Object.prototype /* || defaultValue instanceof List */)){\r\n        return `'${JSON.stringify(defaultValue)}'::json`\r\n    }\r\n    if(defaultValue instanceof Date || defaultValue.isLuxonDateTime){\r\n        return \"NOW()\"\r\n    }\r\n    if(Array.isArray(defaultValue)){\r\n        return `'${JSON.stringify(defaultValue)}'`\r\n    }\r\n    \r\n    throw Error(`Variable type cannot be coalesced for sql query: ${defaultValue}`)\r\n}\r\n\r\nconst defineConstraints = function({ unique, notNull, primaryKey, references }){\r\n    let definition = ''\r\n    if(unique) definition = `${definition} UNIQUE `\r\n    if(notNull) definition = `${definition} NOT NULL `\r\n    if(primaryKey) definition = `${definition} PRIMARY KEY `\r\n    if(references){\r\n        let { table, onDelete } = references\r\n        definition = `${definition} REFERENCES ${table}(id) ON DELETE ${mapDeleteAction.fromJS.toSQL[onDelete] || 'SET NULL'}`\r\n    }\r\n    return definition\r\n}\r\n\r\nconst setType = (name, type) => (\r\n    `ALTER COLUMN \"${name}\" TYPE ${type}`\r\n)\r\n\r\nconst setNotNull = (name) => (\r\n    `ALTER COLUMN \"${name}\" SET NOT NULL`\r\n)\r\n\r\nconst dropNotNull = (name) => (\r\n    `ALTER COLUMN \"${name}\" DROP NOT NULL`\r\n)\r\n\r\nconst setColumnDefault = (name, defaultValue) => (\r\n    `ALTER COLUMN \"${name}\" SET DEFAULT ${format(defaultValue)}`\r\n)\r\n\r\nconst dropColumnDefault = (name) => (\r\n    `ALTER COLUMN \"${name}\" DROP DEFAULT`\r\n)\r\n\r\nconst addUniqueConstraint = (name) => (\r\n    `ADD CONSTRAINT ${name}_unique UNIQUE(${name})`\r\n)\r\n\r\nconst dropUniqueConstraint = (name) => (\r\n   `DROP CONSTRAINT ${name}_unique`\r\n)\r\n\r\n\r\nconst addPrimaryKeyConstraint = (name) => (\r\n    `ADD CONSTRAINT ${name}_pk PRIMARY KEY(${name})`\r\n)\r\n\r\nconst dropPrimaryKeyConstraint = (name) => (\r\n    `DROP CONSTRAINT ${name}_pk`\r\n )\r\n \r\n\r\nconst addReference = (name, { table, onDelete }) => (\r\n    `ADD CONSTRAINT ${name}_fkey FOREIGN KEY(${name}) REFERENCES ${table}(id) ON DELETE ${mapDeleteAction.fromJS.toSQL[onDelete] || 'SET NULL'}`\r\n)\r\n\r\nconst dropReference =  (name) => (\r\n    `DROP CONSTRAINT ${name}_fkey`\r\n)\r\n\r\nconst decodeAdsrc = function(text){\r\n    if(!text) return text\r\n    let [ value ] = text.split('::')\r\n    return value.replace(/'/g, '')\r\n}\r\n\r\nconst selectSchema = () => (`\r\n    SELECT \r\n        tab.relname as table_name,\r\n        attr.attname as name,\r\n        ty.typname as type,\r\n        attr.atttypmod as type_modifier,\r\n        con.contype as constraint_type,\r\n        ref_table.relname as reference_table,\r\n        con.confdeltype as on_delete,\r\n        con.confupdtype as on_update,\r\n        attr.attnotnull as not_null,\r\n        pg_get_expr(de.adbin, de.adrelid) as default_value\r\n    FROM\r\n        pg_class as tab\r\n        JOIN pg_catalog.pg_namespace as n \r\n            ON n.oid = tab.relnamespace\r\n        LEFT JOIN pg_attribute as attr\r\n            ON tab.oid = attr.attrelid\r\n        LEFT JOIN pg_type as ty\r\n            ON attr.atttypid = ty.oid\r\n        LEFT JOIN pg_attrdef as de\r\n            ON  \r\n                tab.oid = de.adrelid\r\n            AND\r\n                attr.attnum = de.adnum\r\n        LEFT JOIN pg_constraint as con \r\n            ON \r\n                attr.attrelid = con.conrelid\r\n            AND\r\n                attr.attnum = ANY(con.conkey)\r\n        LEFT JOIN pg_class as ref_table ON con.confrelid = ref_table.oid\r\n    WHERE \r\n        tab.relkind = 'r'\r\n            AND\r\n        n.nspname = 'public'\r\n            AND\r\n        attr.attnum >= 0\r\n            AND\r\n        ty.typname IS NOT NULL\r\n`)\r\n\r\nconst formatSchema = (schema) => (\r\n    map( group(schema.rows, 'table_name'), ( tableName, table ) => (\r\n        map( group(table, 'name'), ( columnName, constraints ) => {\r\n        return ({ \r\n            tableName: constraints[0].table_name,\r\n            key: constraints[0].name,\r\n            datatype: constraints[0].type,\r\n            typeModifier: constraints[0].type_modifier,\r\n            defaultValue: decodeAdsrc(constraints[0].default_value),\r\n            constraints: {  notNull: constraints[0].not_null, ...map(index(constraints, byConstraintType), toFormattedConstraint) }\r\n        }) \r\n    })\r\n    ))\r\n)\r\n\r\n\r\nconst byConstraintType = (key, { constraint_type }) => (\r\n    mapConstraintType.fromEnum.toJS[constraint_type] ? mapConstraintType.fromEnum.toJS[constraint_type] : 'details'\r\n)\r\n\r\nconst toFormattedConstraint = (type, {reference_table, on_delete, on_update}) =>{\r\n    if(type == 'references') {\r\n        return {\r\n            onDelete: mapDeleteAction.fromEnum.toJS[on_delete],\r\n            // onUpdate: on_update,\r\n            table: reference_table\r\n        }\r\n    } else {\r\n        return true\r\n    }\r\n}\r\n\r\nconst deleteActionMap = [\r\n    {\r\n        enum: 'r',\r\n        sql: 'RESTRICT',\r\n        js: 'restrict'\r\n    },\r\n    {\r\n        enum: 'a',\r\n        sql: 'NO ACTION',\r\n        js: 'noAction'\r\n    },\r\n    {\r\n        enum: 'd',\r\n        sql: 'SET DEFAULT',\r\n        js: 'setDefault'\r\n    },\r\n    {\r\n        enum: 'c',\r\n        sql: 'CASCADE',\r\n        js: 'cascade'\r\n    },\r\n    {\r\n        enum: 'n',\r\n        sql: 'SET NULL',\r\n        js: 'setNull'\r\n    }\r\n]\r\n\r\n\r\nconst mapDeleteAction = {\r\n    fromEnum: {\r\n        toJS: index(deleteActionMap, 'enum', 'js'),\r\n        toSQL: index(deleteActionMap, 'enum', 'sql')\r\n    },\r\n    fromJS: {\r\n        toEnum: index(deleteActionMap, 'js', 'enum'),\r\n        toSQL: index(deleteActionMap, 'js', 'sql')\r\n    },\r\n    fromSQL: {\r\n        toJS: index(deleteActionMap, 'sql', 'js'),\r\n        toEnum: index(deleteActionMap, 'sql', 'enum')\r\n    }\r\n}\r\n\r\nconst constraintTypeMap = [\r\n    {\r\n        enum: 'p',\r\n        js: 'primaryKey'\r\n    },\r\n    {\r\n        enum: 'f',\r\n        js: 'references'\r\n    },\r\n    {\r\n        enum: 'u',\r\n        js: 'unique'\r\n    }\r\n]\r\n  \r\nconst mapConstraintType = {\r\n    fromJS:{\r\n        toEnum: index(constraintTypeMap, 'js', 'enum'),\r\n    },\r\n    fromEnum: {\r\n        toJS: index(constraintTypeMap, 'enum', 'js')\r\n    }\r\n}\r\n\r\nconst generatePatch = ( schema = new Object, newSchema = new Object ) => {\r\n    let tableNames = unique([ ...Object.keys(schema), ...Object.keys(newSchema) ])\r\n    let sql = tableNames.map( tableName => (\r\n        patchTable(schema, newSchema, tableName)\r\n    )).sort( line => !line.startsWith('CREATE TABLE')).filter(a => a).join(';\\n')\r\n    return sql;\r\n}\r\n\r\nconst patchTable = ( schema, newSchema, tableName ) => {\r\n    let { added, removed } = comparisonOf(schema, newSchema)\r\n    if(added(tableName))  return createTable(tableName, newSchema[tableName]) \r\n    if(removed(tableName)) return dropTable(tableName)\r\n    let columnUpdates =  patchColumns(schema[tableName], newSchema[tableName])\r\n    if(columnUpdates) return `ALTER TABLE \"${tableName}\" ${columnUpdates}`\r\n}\r\n\r\nconst patchColumns = ( currentSchema, updatedSchema ) => {\r\n    let columnNames = unique([ ...Object.keys(currentSchema), ...Object.keys(updatedSchema)])\r\n    return columnNames.map( columnName => (\r\n        patchColumn(currentSchema, updatedSchema, columnName)\r\n    )).filter(a => a.length).join(', ')\r\n}\r\n\r\nconst patchColumn = ( currentSchema, updatedSchema, columnName ) => {\r\n    let { added, removed } = comparisonOf(currentSchema, updatedSchema)\r\n    if(added(columnName)) return addColumn(columnName, updatedSchema[columnName])\r\n    if(removed(columnName)) return dropColumn(columnName)\r\n    if(updatedSchema[columnName].datatype === 'SERIAL') return []\r\n    return patchColumnAttributes( columnName, currentSchema[columnName], updatedSchema[columnName] )\r\n}\r\n\r\nconst patchColumnAttributes = (columnName, currentSchema, updatedSchema) => {\r\n    // if(columnName == 'id') return []\r\n    let { added, removed, different } = comparisonOf(currentSchema, updatedSchema)\r\n    let commands = new Array\r\n    if( different('datatype') ) commands.push( setType(columnName, updatedSchema.datatype) )\r\n    if( removed('defaultValue') ) commands.push( dropColumnDefault(columnName) )\r\n    else if( different('defaultValue') )  commands.push( setColumnDefault(columnName, updatedSchema.defaultValue) )\r\n    commands = [ ...commands, patchColumnConstraints(columnName, currentSchema.constraints, updatedSchema.constraints)]\r\n    return commands.filter( a => a.length).join(', ')\r\n}\r\n\r\nconst patchColumnConstraints = (columnName, currentSchema, updatedSchema) => {\r\n    let { added, removed, different } = comparisonOf(currentSchema, updatedSchema)\r\n    let commands = []\r\n    if( added('primaryKey') ) commands.push( addPrimaryKeyConstraint(columnName) )\r\n    if( removed('primaryKey') ) commands.push( dropPrimaryKeyConstraint(columnName) )\r\n    if( added('notNull') ) commands.push( setNotNull(columnName)  )\r\n    if( removed('notNull') ) commands.push( dropNotNull(columnName) )\r\n    if( added('unique') ) commands.push( addUniqueConstraint(columnName) )\r\n    if( removed('unique') ) commands.push( dropUniqueConstraint(columnName) )\r\n    if( added('references') ) commands.push( addReference(columnName, updatedSchema.references) )\r\n    if( removed('references') ) commands.push( dropReference(columnName) )\r\n    if( different('references') ) commands.push( `${dropReference(columnName)};\\n ${addReference(columnName, updatedSchema.references)}` )\r\n    return commands\r\n}\r\n\r\nconst comparisonOf = function(thing1 = {}, thing2 = {}){\r\n    let removed = key => thing1[key] && thing2[key] === undefined\r\n    let added = key => thing1[key] === undefined && thing2[key]\r\n    let different = key => {\r\n        if(thing2[key] instanceof Date || (thing2[key] && thing2[key].isLuxonDateTime)) return thing1[key] != 'now()'\r\n        if(typeof thing2[key] == 'boolean') return (thing1[key] === 'true') != thing2[key]\r\n        return thing1[key] != thing2[key] \r\n    }\r\n    return { added, removed, different }\r\n}"],"file":"migrate.js"}